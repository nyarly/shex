@base <https://raw.githubusercontent.com/shexSpec/shexTest/master/> .
@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sht: <http://www.w3.org/ns/shacl/test-suite#> .
@prefix sx: <https://shexspec.github.io/shexTest/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<negativeStructure/manifest> a mf:Manifest;
   rdfs:comment "ShEx negative structure tests";
   mf:entries (<negativeStructure/manifest#1focusMissingRefdot> <negativeStructure/manifest#1focusRefANDSelfdot> <negativeStructure/manifest#1MissingRef> <negativeStructure/manifest#includeNonSimpleShape> <negativeStructure/manifest#includeShapeNotFound>) .

<negativeSyntax/manifest> a mf:Manifest;
   rdfs:comment "ShEx negative syntax tests";
   mf:entries (<negativeSyntax/manifest#1decimalMininclusiveroman-numeral> <negativeSyntax/manifest#1dotAnnot_AIRIREF> <negativeSyntax/manifest#1dotUnlabeledCode1> <negativeSyntax/manifest#1doubleMininclusiveroman-numeral> <negativeSyntax/manifest#1floatMininclusiveroman-numeral> <negativeSyntax/manifest#1integerMininclusiveroman-numeral> <negativeSyntax/manifest#1inverseinversedot> <negativeSyntax/manifest#1iriLength2> <negativeSyntax/manifest#1iriMaxexclusive> <negativeSyntax/manifest#1iriMaxinclusive> <negativeSyntax/manifest#1iriMinexclusive> <negativeSyntax/manifest#1iriMininclusive> <negativeSyntax/manifest#1literalFractiondigitsxsd-integer> <negativeSyntax/manifest#1literalLength2> <negativeSyntax/manifest#1literalTotaldigitsxsd-integer> <negativeSyntax/manifest#1negatedinversenegateddot> <negativeSyntax/manifest#1negatednegateddot> <negativeSyntax/manifest#1unknowndatatypeMaxInclusive> <negativeSyntax/manifest#1val1bnode> <negativeSyntax/manifest#1val1iriMinusiri1> <negativeSyntax/manifest#1val1vcrefSTRING_LITERAL1> <negativeSyntax/manifest#1valA> <negativeSyntax/manifest#a> <negativeSyntax/manifest#base-no-uri> <negativeSyntax/manifest#base-uri-dot> <negativeSyntax/manifest#bnodedot> <negativeSyntax/manifest#capitol-A> <negativeSyntax/manifest#DECIMAL-123.abc> <negativeSyntax/manifest#DOUBLE-123e> <negativeSyntax/manifest#group-no-COMMA-separators> <negativeSyntax/manifest#groupShapeConstr-trailing-OR> <negativeSyntax/manifest#INTEGER-+-1> <negativeSyntax/manifest#INTEGER-123abc> <negativeSyntax/manifest#IRIREF-with-bad-UCHAR.1> <negativeSyntax/manifest#IRIREF-with-bad-UCHAR.2> <negativeSyntax/manifest#IRIREF-with-ECHAR> <negativeSyntax/manifest#IRIREF-with-PN_LOCAL_ESC> <negativeSyntax/manifest#IRIREF-with-SPACE> <negativeSyntax/manifest#literal-0x123> <negativeSyntax/manifest#open1dotclose> <negativeSyntax/manifest#open1dotcloseAnnot3> <negativeSyntax/manifest#open1dotclosecardOpt> <negativeSyntax/manifest#open1dotcloseCode1> <negativeSyntax/manifest#openopen1dotcloseCode1closeCode2> <negativeSyntax/manifest#openopen1dotOr1dotclose> <negativeSyntax/manifest#PN_LOCAL-dash-start> <negativeSyntax/manifest#PN_LOCAL-PERCENT-end> <negativeSyntax/manifest#PN_LOCAL-PERCENT-mid> <negativeSyntax/manifest#PN_LOCAL-PERCENT-start> <negativeSyntax/manifest#PN_LOCAL-unescaped-TILDE> <negativeSyntax/manifest#PN_LOCAL-with-UCHAR.1> <negativeSyntax/manifest#PNAME_NS-dot-at-end-declared> <negativeSyntax/manifest#PNAME_NS-dot-at-end-undeclared> <negativeSyntax/manifest#PNAME_NS-dot-at-start-declared> <negativeSyntax/manifest#PNAME_NS-dot-at-start-undeclared> <negativeSyntax/manifest#predicate-ANON> <negativeSyntax/manifest#predicate-BLANK_NODE_LABEL> <negativeSyntax/manifest#predicate-literal> <negativeSyntax/manifest#predicate-true> <negativeSyntax/manifest#prefix-missing> <negativeSyntax/manifest#prefix-no-COLON> <negativeSyntax/manifest#prefix-no-PNAME_NS> <negativeSyntax/manifest#prefix-no-uri> <negativeSyntax/manifest#prefix-none> <negativeSyntax/manifest#shapename-a> <negativeSyntax/manifest#shapename-literal> <negativeSyntax/manifest#shapename-true> <negativeSyntax/manifest#STRING_LITERAL1-ending-QUOTATION_MARK> <negativeSyntax/manifest#STRING_LITERAL2-bad-ECHAR> <negativeSyntax/manifest#STRING_LITERAL2-bad-LANGTAG> <negativeSyntax/manifest#STRING_LITERAL2-bad-UCHAR1> <negativeSyntax/manifest#STRING_LITERAL2-bad-UCHAR2-value> <negativeSyntax/manifest#STRING_LITERAL2-ending-APOSTROPHE> <negativeSyntax/manifest#STRING_LITERAL2-illegal-UCHAR1-value> <negativeSyntax/manifest#STRING_LITERAL2-with-LANGTAG-and-datatype> <negativeSyntax/manifest#STRING_LITERAL_LONG1-ending-APOSTROPHE> <negativeSyntax/manifest#STRING_LITERAL_LONG1-ending-APOSTROPHE4> <negativeSyntax/manifest#STRING_LITERAL_LONG2-ending-APOSTROPHE3> <negativeSyntax/manifest#STRING_LITERAL_LONG2-ending-QUOTATION_MARK4> <negativeSyntax/manifest#STRING_LITERAL_LONG2-unterminated> <negativeSyntax/manifest#tripleConsraint-no-valueClass> <negativeSyntax/manifest#tripleConsraint-with-datatype-and-dot> <negativeSyntax/manifest#tripleConsraint-with-datatype-and-valueSet> <negativeSyntax/manifest#tripleConsraint-with-dot-and-datatype> <negativeSyntax/manifest#tripleConsraint-with-two-cardinalities>) .

<schemas/manifest> a mf:Manifest;
   rdfs:comment "ShEx representation tests";
   mf:entries (<schemas/manifest#0> <schemas/manifest#1dot> <schemas/manifest#1dot-base> <schemas/manifest#1dotSemi> <schemas/manifest#1dotLNex> <schemas/manifest#1dotNS2> <schemas/manifest#1dotNS2Comment> <schemas/manifest#1dotLNexComment> <schemas/manifest#1dotLNdefault> <schemas/manifest#1dotNSdefault> <schemas/manifest#1dotLNex-HYPHEN_MINUS> <schemas/manifest#bnode1dot> <schemas/manifest#1inversedot> <schemas/manifest#1Adot> <schemas/manifest#1iri> <schemas/manifest#1bnode> <schemas/manifest#1literal> <schemas/manifest#1nonliteral> <schemas/manifest#1datatype> <schemas/manifest#1datatypelangString> <schemas/manifest#1card2> <schemas/manifest#1card25> <schemas/manifest#1card2Star> <schemas/manifest#1cardOpt> <schemas/manifest#1cardPlus> <schemas/manifest#1cardStar> <schemas/manifest#1literalPlus> <schemas/manifest#1dotRef1> <schemas/manifest#1dotRefLNex1> <schemas/manifest#1dotRefSpaceLNex1> <schemas/manifest#1dotRefNS1> <schemas/manifest#1dotRefSpaceNS1> <schemas/manifest#1refbnode1> <schemas/manifest#1refbnode_with_leading_digit1> <schemas/manifest#1refbnode_with_leading_underscore1> <schemas/manifest#1refbnode_with_spanning_PN_CHARS1> <schemas/manifest#1refbnode_with_spanning_PN_CHARS_BASE1> <schemas/manifest#3circularRef1> <schemas/manifest#1iriRef1> <schemas/manifest#1bnodeRef1> <schemas/manifest#1dotInline1> <schemas/manifest#1val1IRIREF> <schemas/manifest#1val1INTEGER> <schemas/manifest#1val1DOUBLE> <schemas/manifest#1val1DOUBLElowercase> <schemas/manifest#1val1LANGTAG> <schemas/manifest#1val1IRIREFDatatype> <schemas/manifest#1val1true> <schemas/manifest#1val1false> <schemas/manifest#1datatypeLength> <schemas/manifest#1literalFractiondigits5> <schemas/manifest#1literalFractiondigits4> <schemas/manifest#1literalTotaldigits5> <schemas/manifest#1literalTotaldigits6> <schemas/manifest#1literalTotaldigits2> <schemas/manifest#1floatMininclusiveINTEGER> <schemas/manifest#1integerMininclusiveINTEGER> <schemas/manifest#1floatMininclusiveINTEGERLead> <schemas/manifest#1integerMininclusiveINTEGERLead> <schemas/manifest#1integerMininclusiveDECIMAL> <schemas/manifest#1integerMininclusiveDECIMALLeadTrail> <schemas/manifest#1integerMininclusiveDECIMALint> <schemas/manifest#1integerMininclusiveDECIMALintLeadTrail> <schemas/manifest#1integerMininclusiveDOUBLE> <schemas/manifest#1integerMininclusiveDOUBLELeadTrail> <schemas/manifest#1integerMininclusiveDOUBLEint> <schemas/manifest#1integerMininclusiveDOUBLEintLeadTrail> <schemas/manifest#1integerMininclusivexsd-integer> <schemas/manifest#1decimalMininclusiveINTEGER> <schemas/manifest#1decimalMininclusiveINTEGERLead> <schemas/manifest#1decimalMininclusiveDECIMAL> <schemas/manifest#1decimalMininclusiveDECIMALLeadTrail> <schemas/manifest#1decimalMininclusiveDECIMALintLeadTrail> <schemas/manifest#1decimalMininclusiveDOUBLE> <schemas/manifest#1decimalMininclusiveDOUBLELeadTrail> <schemas/manifest#1decimalMininclusiveDOUBLEintLeadTrail> <schemas/manifest#1decimalMininclusivexsd-decimal> <schemas/manifest#1floatMininclusiveDECIMAL> <schemas/manifest#1floatMininclusiveDECIMALLeadTrail> <schemas/manifest#1floatMininclusiveDECIMALintLeadTrail> <schemas/manifest#1floatMininclusiveDOUBLE> <schemas/manifest#1floatMininclusiveDOUBLELeadTrail> <schemas/manifest#1floatMininclusiveDOUBLEintLeadTrail> <schemas/manifest#1floatMininclusivexsd-float> <schemas/manifest#1doubleMininclusiveINTEGERLead> <schemas/manifest#1doubleMininclusiveDECIMAL> <schemas/manifest#1doubleMininclusiveDECIMALLeadTrail> <schemas/manifest#1doubleMininclusiveDECIMALintLeadTrail> <schemas/manifest#1doubleMininclusiveDOUBLE> <schemas/manifest#1doubleMininclusiveDOUBLELeadTrail> <schemas/manifest#1doubleMininclusiveDOUBLEintLeadTrail> <schemas/manifest#1doubleMininclusivexsd-double> <schemas/manifest#1integerMinexclusiveINTEGER> <schemas/manifest#1integerMinexclusiveDECIMALint> <schemas/manifest#1integerMinexclusiveDOUBLEint> <schemas/manifest#1decimalMinexclusiveINTEGER> <schemas/manifest#1decimalMinexclusiveDECIMAL> <schemas/manifest#1decimalMinexclusiveDOUBLE> <schemas/manifest#1floatMinexclusiveINTEGER> <schemas/manifest#1floatMinexclusiveDECIMAL> <schemas/manifest#1floatMinexclusiveDOUBLE> <schemas/manifest#1floatMinexclusivexsd-float> <schemas/manifest#1doubleMinexclusiveINTEGER> <schemas/manifest#1doubleMinexclusiveDECIMAL> <schemas/manifest#1doubleMinexclusiveDOUBLE> <schemas/manifest#1integerMaxinclusiveINTEGER> <schemas/manifest#1integerMaxinclusiveDECIMALint> <schemas/manifest#1integerMaxinclusiveDOUBLEint> <schemas/manifest#1decimalMaxinclusiveINTEGER> <schemas/manifest#1decimalMaxinclusiveDECIMAL> <schemas/manifest#1decimalMaxinclusiveDOUBLE> <schemas/manifest#1floatMaxinclusiveINTEGER> <schemas/manifest#1floatMaxinclusiveDECIMAL> <schemas/manifest#1floatMaxinclusiveDOUBLE> <schemas/manifest#1floatMaxinclusivexsd-float> <schemas/manifest#1doubleMaxinclusiveINTEGER> <schemas/manifest#1doubleMaxinclusiveDECIMAL> <schemas/manifest#1doubleMaxinclusiveDOUBLE> <schemas/manifest#1integerMaxexclusiveINTEGER> <schemas/manifest#1integerMaxexclusiveDECIMALint> <schemas/manifest#1integerMaxexclusiveDOUBLEint> <schemas/manifest#1decimalMaxexclusiveINTEGER> <schemas/manifest#1decimalMaxexclusiveDECIMAL> <schemas/manifest#1decimalMaxexclusiveDOUBLE> <schemas/manifest#1decimalMaxexclusivexsd-byte> <schemas/manifest#1decimalMaxexclusivexsd-decimal> <schemas/manifest#1floatMaxexclusiveINTEGER> <schemas/manifest#1floatMaxexclusiveDECIMAL> <schemas/manifest#1floatMaxexclusiveDOUBLE> <schemas/manifest#1doubleMaxexclusiveINTEGER> <schemas/manifest#1doubleMaxexclusiveINTEGERLead> <schemas/manifest#1doubleMaxexclusiveDECIMAL> <schemas/manifest#1doubleMaxexclusiveDECIMALLeadTrail> <schemas/manifest#1doubleMaxexclusiveDECIMALint> <schemas/manifest#1doubleMaxexclusiveDECIMALintLeadTrail> <schemas/manifest#1doubleMaxexclusiveDOUBLE> <schemas/manifest#1doubleMaxexclusiveDOUBLELeadTrail> <schemas/manifest#1doubleMaxexclusiveDOUBLEint> <schemas/manifest#1doubleMaxexclusiveDOUBLEintLeadTrail> <schemas/manifest#1Length> <schemas/manifest#1literalLength> <schemas/manifest#1literalLength19> <schemas/manifest#1iriLength> <schemas/manifest#1iriRefLength1> <schemas/manifest#1bnodeLength> <schemas/manifest#1nonliteralLength> <schemas/manifest#1literalMinlength> <schemas/manifest#1iriMinlength> <schemas/manifest#1bnodeMinlength> <schemas/manifest#1nonliteralMinlength> <schemas/manifest#1literalMaxlength> <schemas/manifest#1iriMaxlength> <schemas/manifest#1bnodeMaxlength> <schemas/manifest#1nonliteralMaxlength> <schemas/manifest#1literalPattern> <schemas/manifest#1literalPattern19> <schemas/manifest#1literalStartPattern> <schemas/manifest#1literalPatternEnd> <schemas/manifest#1literalStartPatternEnd> <schemas/manifest#1literalPatternDollar> <schemas/manifest#1literalCarrotPatternDollar> <schemas/manifest#1literalPatternabEnd> <schemas/manifest#1iriPattern> <schemas/manifest#1iriPatternbc> <schemas/manifest#1bnodePattern> <schemas/manifest#1nonliteralPattern> <schemas/manifest#1val1dotMinusiri3> <schemas/manifest#1val1refvsMinusiri3> <schemas/manifest#1val1dotMinusiriStem3> <schemas/manifest#1val1iriStem> <schemas/manifest#1val1iriStemMinusiri3> <schemas/manifest#1val1iriStemMinusiriStem3> <schemas/manifest#2dot> <schemas/manifest#2dotSemis> <schemas/manifest#open2dotclose> <schemas/manifest#open2dotsemisclose> <schemas/manifest#3groupdot> <schemas/manifest#open3groupdotclose> <schemas/manifest#1dotOne1dot> <schemas/manifest#1dotSemiOne1dotSemi> <schemas/manifest#open1dotOne1dotclose> <schemas/manifest#open1dotSemiOne1dotSemicloseSemi> <schemas/manifest#2dotOne1dot> <schemas/manifest#2dotSemiOne1dotSemi> <schemas/manifest#open2dotOne1dotclose> <schemas/manifest#open2dotSemisOne1dotSemiclose> <schemas/manifest#openopen2dotcloseOne1dotclose> <schemas/manifest#openopen2dotSemiscloseOne1dotSemiclose> <schemas/manifest#open1dotopen1dotOne1dotcloseclose> <schemas/manifest#open1dotopen1dotSemiOne1dotSemicloseSemicloseSemi> <schemas/manifest#1dotOne2dot> <schemas/manifest#open1dotOneopen2dotcloseclose> <schemas/manifest#openopen1dotOne1dotclose1dotclose> <schemas/manifest#1val1vExprRefIRIREF1> <schemas/manifest#1val1vExprRefbnode1> <schemas/manifest#1dotRefAND3> <schemas/manifest#1val1vExpr1AND1AND1Ref3> <schemas/manifest#1val1vExprRefAND3> <schemas/manifest#1val1vExprAND3> <schemas/manifest#1dotRefOR3> <schemas/manifest#1val1vExpr1OR1OR1Ref3> <schemas/manifest#1val1vExprRefOR3> <schemas/manifest#1val1vExprOR3> <schemas/manifest#1val1vExpr1AND1OR1Ref3> <schemas/manifest#1val1vExpr1OR1AND1Ref3> <schemas/manifest#open3Onedotclosecard2> <schemas/manifest#open3Onedotclosecard23> <schemas/manifest#open4Onedotclosecard23> <schemas/manifest#open3groupdotclosecard23> <schemas/manifest#1val1vShapeANDRef3> <schemas/manifest#1dotClosed> <schemas/manifest#1val1IRIREFExtra1> <schemas/manifest#1val2IRIREFExtra1> <schemas/manifest#1val2IRIREFPlusExtra1> <schemas/manifest#1val1IRIREFExtra1p2> <schemas/manifest#1val1IRIREFExtra1One> <schemas/manifest#1dotExtra1> <schemas/manifest#3groupdotExtra3> <schemas/manifest#3groupdot3Extra> <schemas/manifest#3groupdotExtra3NLex> <schemas/manifest#startRefIRIREF> <schemas/manifest#startRefbnode> <schemas/manifest#startInline> <schemas/manifest#startEqualSpaceInline> <schemas/manifest#startSpaceEqualInline> <schemas/manifest#2EachInclude1> <schemas/manifest#2EachInclude1-after> <schemas/manifest#2OneInclude1> <schemas/manifest#2OneInclude1-after> <schemas/manifest#1dotAnnotIRIREF> <schemas/manifest#1dotAnnotSTRING_LITERAL1> <schemas/manifest#1dotAnnot3> <schemas/manifest#1inversedotAnnot3> <schemas/manifest#open3groupdotcloseAnnot3> <schemas/manifest#1dotCode1> <schemas/manifest#1dotNoCode1> <schemas/manifest#1inversedotCode1> <schemas/manifest#1dotCode3> <schemas/manifest#1dotNoCode3> <schemas/manifest#1dotCode3fail> <schemas/manifest#1dotCodeWithEscapes1> <schemas/manifest#1dotShapeCode1> <schemas/manifest#1dotShapeNoCode1> <schemas/manifest#open3groupdotcloseCode1> <schemas/manifest#startCode1> <schemas/manifest#startNoCode1> <schemas/manifest#startCode1fail> <schemas/manifest#startCode1startRef> <schemas/manifest#startCode1startReffail> <schemas/manifest#startCode3> <schemas/manifest#startCode3fail> <schemas/manifest#open3groupdotclosecard23Annot3Code2> <schemas/manifest#0focusIRI> <schemas/manifest#0focusBNODE> <schemas/manifest#1focusIRI_dot> <schemas/manifest#1focusBNODE_dot> <schemas/manifest#1focusnonLiteral-dot> <schemas/manifest#1focusLength-dot> <schemas/manifest#1focusMinLength-dot> <schemas/manifest#1focusMaxLength-dot> <schemas/manifest#1focusPattern-dot> <schemas/manifest#1focusPatternB-dot> <schemas/manifest#1focusIRILength_dot> <schemas/manifest#1focusBNODELength_dot> <schemas/manifest#1focusnonLiteralLength-dot> <schemas/manifest#NOT1dotOR2dot> <schemas/manifest#NOT1dotOR2dotX3> <schemas/manifest#NOT1dotOR2dotX3AND1> <schemas/manifest#shapeExtern> <schemas/manifest#shapeExternRef> <schemas/manifest#focusvsORdatatype> <schemas/manifest#focusvsANDIRI> <schemas/manifest#focusvsANDdatatype> <schemas/manifest#focusvs> <schemas/manifest#focusdatatype> <schemas/manifest#1dotPlusAnnotIRIREF> <schemas/manifest#1dotAnnotAIRIREF> <schemas/manifest#FocusIRI2groupBnodeNested2groupIRIRef> <schemas/manifest#1bnodeRefORRefMinlength> <schemas/manifest#1dotShapeAND1dot3X> <schemas/manifest#openopen1dotSemiOne1dotSemiclose1dotSemicloseSemi> <schemas/manifest#open1dotOne2dotclose> <schemas/manifest#open1dotSemiOneopen2dotSemiscloseclose> <schemas/manifest#open1dotSemiOne2dotsemisclose> <schemas/manifest#1dotSemiOne2dotSemis> <schemas/manifest#1literalMaxinclusiveINTEGER> <schemas/manifest#1literalMaxexclusiveINTEGER> <schemas/manifest#1literalMininclusiveINTEGER> <schemas/manifest#1literalMinexclusiveINTEGER> <schemas/manifest#1val1DECIMAL> <schemas/manifest#1datatypeRef1> <schemas/manifest#1card2blank> <schemas/manifest#1focusnonLiteralLength-nonLiteralLength> <schemas/manifest#_all> <schemas/manifest#kitchenSink>) .

<validation/manifest> a mf:Manifest;
   rdfs:comment "ShEx validation tests";
   mf:entries (<validation/manifest#0_empty> <validation/manifest#0_other> <validation/manifest#0_otherbnode> <validation/manifest#1dot_fail-empty> <validation/manifest#1dot-base_fail-empty> <validation/manifest#1dot_fail-missing> <validation/manifest#1dot-base_fail-missing> <validation/manifest#1dot_pass-noOthers> <validation/manifest#1dot-base_pass-noOthers> <validation/manifest#1dotSemi_pass-noOthers> <validation/manifest#1dotLNex_pass-noOthers> <validation/manifest#1dotNS2_pass-noOthers> <validation/manifest#1dotNS2Comment_pass-noOthers> <validation/manifest#1dotLNexComment_pass-noOthers> <validation/manifest#1dotLNdefault_pass-noOthers> <validation/manifest#1dotNSdefault_pass-noOthers> <validation/manifest#1dotLNex-HYPHEN_MINUS_pass-noOthers> <validation/manifest#1dot_pass-others_lexicallyEarlier> <validation/manifest#1dot_pass-others_lexicallyLater> <validation/manifest#bnode1dot_fail-missing> <validation/manifest#bnode1dot_pass-others_lexicallyEarlier> <validation/manifest#1inversedot_fail-empty> <validation/manifest#1inversedot_fail-missing> <validation/manifest#1inversedot_pass-noOthers> <validation/manifest#1inversedot_pass-over_lexicallyEarlier> <validation/manifest#1inversedot_pass-over_lexicallyLater> <validation/manifest#1Adot_pass> <validation/manifest#1iri_pass-iri> <validation/manifest#1iri_fail-bnode> <validation/manifest#1iri_fail-literal> <validation/manifest#1bnode_fail-iri> <validation/manifest#1bnode_pass-bnode> <validation/manifest#1bnode_fail-literal> <validation/manifest#1literal_fail-iri> <validation/manifest#1literal_fail-bnode> <validation/manifest#1literal_pass-literal> <validation/manifest#1nonliteral_pass-iri> <validation/manifest#1focusnonLiteralLength-nonLiteralLength_fail-short> <validation/manifest#1focusnonLiteralLength-nonLiteralLength_pass> <validation/manifest#1nonliteral_pass-bnode> <validation/manifest#1nonliteral_fail-literal> <validation/manifest#1datatype_missing> <validation/manifest#1datatype_nonLiteral> <validation/manifest#1datatype_langString> <validation/manifest#1datatype_wrongDatatype> <validation/manifest#1datatype_pass> <validation/manifest#1datatypelangString_pass> <validation/manifest#1card2_fail0> <validation/manifest#1card2_fail1> <validation/manifest#1card2_pass2> <validation/manifest#1card2_fail3> <validation/manifest#1card25_fail0> <validation/manifest#1card25_fail1> <validation/manifest#1card25_pass2> <validation/manifest#1card25_pass3> <validation/manifest#1card25_pass4> <validation/manifest#1card25_pass5> <validation/manifest#1card25_fail6> <validation/manifest#1card2Star_fail0> <validation/manifest#1card2Star_fail1> <validation/manifest#1card2Star_pass2> <validation/manifest#1card2Star_pass3> <validation/manifest#1card2Star_pass6> <validation/manifest#1cardOpt_pass0> <validation/manifest#1cardOpt_pass1> <validation/manifest#1cardOpt_fail2> <validation/manifest#1cardOpt_pass6> <validation/manifest#1cardPlus_fail0> <validation/manifest#1cardPlus_pass1> <validation/manifest#1cardPlus_pass2> <validation/manifest#1cardPlus_pass6> <validation/manifest#1cardStar_pass0> <validation/manifest#1cardStar_pass1> <validation/manifest#1cardStar_pass2> <validation/manifest#1cardStar_pass6> <validation/manifest#1literalPlus_Is1_Ip1_La,Io1> <validation/manifest#1dotRef1_referent,referrer> <validation/manifest#1dotRef1_referrer,referent> <validation/manifest#1dotRef1_missingReferent> <validation/manifest#1dotRef1_selfReference> <validation/manifest#1dotRef1_missingSelfReference> <validation/manifest#1dotRef1_overReferrer> <validation/manifest#1dotRef1_overReferrer,overReferent> <validation/manifest#1dotRef1_overMatchesReferent> <validation/manifest#1refbnode1_pass> <validation/manifest#1refbnode1_fail-g1-arc> <validation/manifest#1refbnode1_fail-g2-arc> <validation/manifest#3circularRef1_pass-open> <validation/manifest#3circularRef1_pass-closed> <validation/manifest#1iriRef1_pass-iri> <validation/manifest#1iriRef1_fail-bnode> <validation/manifest#1bnodeRef1_fail-iri> <validation/manifest#1bnodeRef1_pass-bnode> <validation/manifest#1datatypeRef1_fail-datatype> <validation/manifest#1datatypeRef1_fail-reflexiveRef> <validation/manifest#1dotInline1_referrer,referent> <validation/manifest#1dotInline1_missingReferent> <validation/manifest#1dotInline1_selfReference> <validation/manifest#1dotInline1_missingSelfReference> <validation/manifest#1dotInline1_overReferrer> <validation/manifest#1dotInline1_overReferrer,overReferent> <validation/manifest#1dotInline1_overMatchesReferent> <validation/manifest#1val1IRIREF_pass> <validation/manifest#1val1IRIREF_v2> <validation/manifest#1val1IRIREF_v1v2> <validation/manifest#1val1INTEGER_pass> <validation/manifest#1val1INTEGER_00> <validation/manifest#1val1DECIMAL_00> <validation/manifest#1val1DECIMAL_pass> <validation/manifest#1val1DECIMAL_Lab> <validation/manifest#1val1INTEGER_Lab> <validation/manifest#1val1DOUBLE_pass> <validation/manifest#1val1DOUBLE_0_0e0> <validation/manifest#1val1DOUBLElowercase_pass> <validation/manifest#1val1DOUBLElowercase_fail-0E0> <validation/manifest#1val1DOUBLElowercase_0_0e0> <validation/manifest#1val1LANGTAG_pass> <validation/manifest#1val1LANGTAG_Lab> <validation/manifest#1val1LANGTAG_LabLTen> <validation/manifest#1val1LANGTAG_LabLTen-fr-jura> <validation/manifest#1val1LANGTAG_LaLTen-fr> <validation/manifest#1val1IRIREFDatatype_pass> <validation/manifest#1val1IRIREFDatatype_Lab> <validation/manifest#1val1IRIREFDatatype_LabDTbloodType999> <validation/manifest#1val1IRIREFDatatype_LaDTbloodType> <validation/manifest#1val1true_pass> <validation/manifest#1val1true_false> <validation/manifest#1val1true_ab> <validation/manifest#1val1false_pass> <validation/manifest#1val1false_true> <validation/manifest#1val1false_ab> <validation/manifest#1datatypeLength_fail-missing> <validation/manifest#1datatypeLength_fail-wrongDatatype> <validation/manifest#1datatypeLength_fail-short> <validation/manifest#1datatypeLength_pass> <validation/manifest#1datatypeLength_fail-long> <validation/manifest#1literalFractiondigits_pass-decimal-short> <validation/manifest#1literalFractiondigits_pass-decimal-equal> <validation/manifest#1literalFractiondigits_fail-decimal-long> <validation/manifest#1literalFractiondigits_pass-decimal-equalLead> <validation/manifest#1literalFractiondigits_fail-decimal-longLead> <validation/manifest#1literalFractiondigits_pass-decimal-equalTrail> <validation/manifest#1literalFractiondigits_fail-decimal-longTrail> <validation/manifest#1literalFractiondigits_pass-decimal-equalLeadTrail> <validation/manifest#1literalFractiondigits_fail-decimal-longLeadTrail> <validation/manifest#1literalFractiondigits_pass-integer-short> <validation/manifest#1literalFractiondigits_pass-xsd_integer-short> <validation/manifest#1literalFractiondigits_fail-float-equal> <validation/manifest#1literalFractiondigits_fail-double-equal> <validation/manifest#1literalFractiondigits_fail-malformedxsd_decimal-1_23ab> <validation/manifest#1literalFractiondigits_fail-malformedxsd_decimal-1_2345ab> <validation/manifest#1literalFractiondigits_fail-malformedxsd_integer-1_2345> <validation/manifest#1literalFractiondigits_fail-iri> <validation/manifest#1literalFractiondigits_fail-bnode> <validation/manifest#1literalTotaldigits_pass-decimal-short> <validation/manifest#1literalTotaldigits_pass-decimal-equal> <validation/manifest#1literalTotaldigits_fail-decimal-long> <validation/manifest#1literalTotaldigits_pass-decimal-equalLead> <validation/manifest#1literalTotaldigits_fail-decimal-longLead> <validation/manifest#1literalTotaldigits_pass-decimal-equalTrail> <validation/manifest#1literalTotaldigits_fail-decimal-longTrail> <validation/manifest#1literalTotaldigits_pass-decimal-equalLeadTrail> <validation/manifest#1literalTotaldigits_fail-decimal-longLeadTrail> <validation/manifest#1literalTotaldigits_pass-integer-equal> <validation/manifest#1literalTotaldigits_pass-xsd_integer-short> <validation/manifest#1literalTotaldigits_pass-integer-equalLead> <validation/manifest#1literalTotaldigits_fail-integer-longLead> <validation/manifest#1literalTotaldigits_pass-integer-equalTrail> <validation/manifest#1literalTotaldigits_fail-integer-longTrail> <validation/manifest#1literalTotaldigits_pass-integer-equalLeadTrail> <validation/manifest#1literalTotaldigits_fail-integer-longLeadTrail> <validation/manifest#1literalTotaldigits_pass-byte-short> <validation/manifest#1literalTotaldigits_pass-byte-equal> <validation/manifest#1literalTotaldigits_fail-byte-long> <validation/manifest#1literalTotaldigits_fail-float-equal> <validation/manifest#1literalTotaldigits_fail-double-equal> <validation/manifest#1literalTotaldigits_fail-malformedxsd_decimal-1_23ab> <validation/manifest#1literalTotaldigits_fail-malformedxsd_decimal-1_2345ab> <validation/manifest#1literalTotaldigits_fail-malformedxsd_integer-1_2345> <validation/manifest#1literalTotaldigits_fail-iri> <validation/manifest#1literalTotaldigits_fail-bnode> <validation/manifest#1literalMinexclusiveINTEGER_fail-low> <validation/manifest#1literalMinexclusiveINTEGER_pass-equal> <validation/manifest#1literalMinexclusiveINTEGER_pass-high> <validation/manifest#1literalMininclusiveINTEGER_fail-low> <validation/manifest#1literalMininclusiveINTEGER_pass-equal> <validation/manifest#1literalMininclusiveINTEGER_pass-high> <validation/manifest#1literalMaxexclusiveINTEGER_pass-low> <validation/manifest#1literalMaxexclusiveINTEGER_fail-equal> <validation/manifest#1literalMaxexclusiveINTEGER_fail-high> <validation/manifest#1literalMaxinclusiveINTEGER_pass-low> <validation/manifest#1literalMaxinclusiveINTEGER_pass-equal> <validation/manifest#1literalMaxinclusiveINTEGER_fail-high> <validation/manifest#1floatMininclusiveINTEGER_fail-low> <validation/manifest#1floatMininclusiveINTEGER_pass-equalLead> <validation/manifest#1floatMininclusiveINTEGER_pass-equalTrail> <validation/manifest#1floatMininclusiveINTEGER_pass-high> <validation/manifest#1integerMininclusiveINTEGER_fail-low> <validation/manifest#1integerMininclusiveINTEGER_pass-equal> <validation/manifest#1integerMininclusiveINTEGER_pass-equalLead> <validation/manifest#1integerMininclusiveINTEGER_pass-high> <validation/manifest#1floatMininclusiveINTEGERLead_pass-equal> <validation/manifest#1integerMininclusiveINTEGER_fail-integer-low> <validation/manifest#1integerMininclusiveINTEGER_pass-integer-equal> <validation/manifest#1integerMininclusiveINTEGER_pass-integer-high> <validation/manifest#1integerMininclusiveINTEGERLead_fail-integer-low> <validation/manifest#1integerMininclusiveINTEGERLead_pass-integer-equal> <validation/manifest#1integerMininclusiveINTEGERLead_pass-integer-equalLead> <validation/manifest#1integerMininclusiveINTEGERLead_pass-integer-high> <validation/manifest#1integerMininclusiveDECIMAL_pass-integer-equal> <validation/manifest#1integerMininclusiveDECIMALLeadTrail_fail-integer-low> <validation/manifest#1integerMininclusiveDECIMALLeadTrail_pass-integer-equal> <validation/manifest#1integerMininclusiveDECIMALLeadTrail_pass-integer-equalLead> <validation/manifest#1integerMininclusiveDECIMALLeadTrail_pass-integer-high> <validation/manifest#1integerMininclusiveDECIMALint_fail-integer-low> <validation/manifest#1integerMininclusiveDECIMALint_pass-integer-equal> <validation/manifest#1integerMininclusiveDECIMALint_pass-integer-high> <validation/manifest#1integerMininclusiveDECIMALintLeadTrail_fail-integer-low> <validation/manifest#1integerMininclusiveDECIMALintLeadTrail_pass-integer-equal> <validation/manifest#1integerMininclusiveDECIMALintLeadTrail_pass-integer-equalLead> <validation/manifest#1integerMininclusiveDECIMALintLeadTrail_pass-integer-high> <validation/manifest#1integerMininclusiveDOUBLE_pass-integer-equal> <validation/manifest#1integerMininclusiveDOUBLELeadTrail_fail-integer-low> <validation/manifest#1integerMininclusiveDOUBLELeadTrail_pass-integer-equal> <validation/manifest#1integerMininclusiveDOUBLELeadTrail_pass-integer-equalLead> <validation/manifest#1integerMininclusiveDOUBLELeadTrail_pass-integer-high> <validation/manifest#1integerMininclusiveDOUBLEint_pass-integer-equal> <validation/manifest#1integerMininclusiveDOUBLEintLeadTrail_fail-integer-low> <validation/manifest#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equal> <validation/manifest#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equalLead> <validation/manifest#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-high> <validation/manifest#1integerMininclusiveINTEGER_fail-decimal-equal> <validation/manifest#1integerMininclusiveINTEGER_fail-float-equal> <validation/manifest#1integerMininclusiveINTEGER_fail-double-equal> <validation/manifest#1integerMininclusiveINTEGER_fail-dateTime-equal> <validation/manifest#1integerMininclusiveINTEGER_fail-string-equal> <validation/manifest#1integerMininclusiveINTEGER_fail-byte-equal> <validation/manifest#1integerMininclusivexsd-integer_fail-integer-low> <validation/manifest#1integerMininclusivexsd-integer_pass-integer-equal> <validation/manifest#1decimalMininclusiveINTEGER_fail-decimal-low> <validation/manifest#1decimalMininclusiveINTEGER_pass-decimal-high> <validation/manifest#1decimalMininclusiveINTEGERLead_fail-decimal-low> <validation/manifest#1decimalMininclusiveINTEGERLead_pass-decimal-high> <validation/manifest#1decimalMininclusiveDECIMAL_fail-decimal-low> <validation/manifest#1decimalMininclusiveDECIMAL_pass-decimal-equal> <validation/manifest#1decimalMininclusiveDECIMAL_pass-decimal-equalLeadTrail> <validation/manifest#1decimalMininclusiveDECIMAL_pass-decimal-high> <validation/manifest#1decimalMininclusiveDECIMALLeadTrail_fail-decimal-low> <validation/manifest#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equal> <validation/manifest#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equalLeadTrail> <validation/manifest#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-high> <validation/manifest#1decimalMininclusiveDECIMALintLeadTrail_fail-decimal-low> <validation/manifest#1decimalMininclusiveDECIMALintLeadTrail_pass-decimal-high> <validation/manifest#1decimalMininclusiveDOUBLE_fail-decimal-low> <validation/manifest#1decimalMininclusiveDOUBLE_pass-decimal-equal> <validation/manifest#1decimalMininclusiveDOUBLE_pass-decimal-equalLeadTrail> <validation/manifest#1decimalMininclusiveDOUBLELeadTrail_fail-decimal-low> <validation/manifest#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equal> <validation/manifest#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equalLeadTrail> <validation/manifest#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-high> <validation/manifest#1decimalMininclusiveDOUBLEintLeadTrail_fail-decimal-low> <validation/manifest#1decimalMininclusiveDOUBLEintLeadTrail_pass-decimal-high> <validation/manifest#1decimalMininclusiveDECIMAL_fail-float-equal> <validation/manifest#1decimalMininclusiveDECIMAL_fail-double-equal> <validation/manifest#1decimalMininclusivexsd-decimal_fail-decimal-low> <validation/manifest#1decimalMininclusivexsd-decimal_pass-decimal-equal> <validation/manifest#1floatMininclusiveINTEGERLead_fail-float-low> <validation/manifest#1floatMininclusiveINTEGERLead_pass-float-high> <validation/manifest#1floatMininclusiveDECIMAL_pass-float-equal> <validation/manifest#1floatMininclusiveDECIMAL_pass-float-equalLeadTrail> <validation/manifest#1floatMininclusiveDECIMALLeadTrail_fail-float-low> <validation/manifest#1floatMininclusiveDECIMALLeadTrail_pass-float-equal> <validation/manifest#1floatMininclusiveDECIMALLeadTrail_pass-float-equalLeadTrail> <validation/manifest#1floatMininclusiveDECIMALLeadTrail_pass-float-high> <validation/manifest#1floatMininclusiveDECIMALintLeadTrail_fail-float-low> <validation/manifest#1floatMininclusiveDECIMALintLeadTrail_pass-float-high> <validation/manifest#1floatMininclusiveDOUBLE_pass-float-equal> <validation/manifest#1floatMininclusiveDOUBLE_pass-float-equalLeadTrail> <validation/manifest#1floatMininclusiveDOUBLELeadTrail_fail-float-low> <validation/manifest#1floatMininclusiveDOUBLELeadTrail_pass-float-equal> <validation/manifest#1floatMininclusiveDOUBLELeadTrail_pass-float-equalLeadTrail> <validation/manifest#1floatMininclusiveDOUBLELeadTrail_pass-float-high> <validation/manifest#1floatMininclusiveDOUBLEintLeadTrail_fail-float-low> <validation/manifest#1floatMininclusiveDOUBLEintLeadTrail_pass-float-high> <validation/manifest#1floatMininclusivexsd-float_fail-float-low> <validation/manifest#1floatMininclusivexsd-float_pass-float-equal> <validation/manifest#1doubleMininclusiveINTEGERLead_fail-double-low> <validation/manifest#1doubleMininclusiveINTEGERLead_pass-double-high> <validation/manifest#1doubleMininclusiveDECIMAL_pass-double-equal> <validation/manifest#1doubleMininclusiveDECIMAL_pass-double-equalLeadTrail> <validation/manifest#1doubleMininclusiveDECIMALLeadTrail_fail-double-low> <validation/manifest#1doubleMininclusiveDECIMALLeadTrail_pass-double-equal> <validation/manifest#1doubleMininclusiveDECIMALLeadTrail_pass-double-equalLeadTrail> <validation/manifest#1doubleMininclusiveDECIMALLeadTrail_pass-double-high> <validation/manifest#1doubleMininclusiveDECIMALintLeadTrail_fail-double-low> <validation/manifest#1doubleMininclusiveDECIMALintLeadTrail_pass-double-high> <validation/manifest#1doubleMininclusiveDOUBLE_pass-double-equal> <validation/manifest#1doubleMininclusiveDOUBLE_pass-double-equalLeadTrail> <validation/manifest#1doubleMininclusiveDOUBLELeadTrail_fail-double-low> <validation/manifest#1doubleMininclusiveDOUBLELeadTrail_pass-double-equal> <validation/manifest#1doubleMininclusiveDOUBLELeadTrail_pass-double-equalLeadTrail> <validation/manifest#1doubleMininclusiveDOUBLELeadTrail_pass-double-high> <validation/manifest#1doubleMininclusiveDOUBLEintLeadTrail_fail-double-low> <validation/manifest#1doubleMininclusiveDOUBLEintLeadTrail_pass-double-high> <validation/manifest#1doubleMininclusivexsd-double_fail-double-low> <validation/manifest#1doubleMininclusivexsd-double_pass-double-equal> <validation/manifest#1integerMinexclusiveINTEGER_fail-integer-low> <validation/manifest#1integerMinexclusiveINTEGER_fail-integer-equal> <validation/manifest#1integerMinexclusiveINTEGER_pass-integer-high> <validation/manifest#1integerMinexclusiveDECIMALint_fail-integer-low> <validation/manifest#1integerMinexclusiveDECIMALint_fail-integer-equal> <validation/manifest#1integerMinexclusiveDECIMALint_pass-integer-high> <validation/manifest#1integerMinexclusiveDOUBLEint_fail-integer-low> <validation/manifest#1integerMinexclusiveDOUBLEint_fail-integer-equal> <validation/manifest#1integerMinexclusiveDOUBLEint_pass-integer-high> <validation/manifest#1decimalMinexclusiveINTEGER_fail-decimal-low> <validation/manifest#1decimalMinexclusiveINTEGER_pass-decimal-high> <validation/manifest#1decimalMinexclusiveDECIMAL_fail-decimal-low> <validation/manifest#1decimalMinexclusiveDECIMAL_fail-decimal-equal> <validation/manifest#1decimalMinexclusiveDECIMAL_pass-decimal-high> <validation/manifest#1decimalMinexclusiveDOUBLE_fail-decimal-low> <validation/manifest#1decimalMinexclusiveDOUBLE_fail-decimal-equal> <validation/manifest#1decimalMinexclusiveDOUBLE_pass-decimal-high> <validation/manifest#1decimalMinexclusiveDECIMAL_fail-float-equal> <validation/manifest#1decimalMinexclusiveDECIMAL_fail-double-equal> <validation/manifest#1floatMinexclusiveINTEGER_fail-float-low> <validation/manifest#1floatMinexclusiveINTEGER_pass-float-high> <validation/manifest#1floatMinexclusiveDECIMAL_fail-float-low> <validation/manifest#1floatMinexclusiveDECIMAL_fail-float-equal> <validation/manifest#1floatMinexclusiveDECIMAL_pass-float-high> <validation/manifest#1floatMinexclusiveDOUBLE_fail-float-low> <validation/manifest#1floatMinexclusiveDOUBLE_fail-float-equal> <validation/manifest#1floatMinexclusiveDOUBLE_pass-float-high> <validation/manifest#1floatMinexclusivexsd-float_fail-decimal-equal> <validation/manifest#1floatMinexclusivexsd-float_fail-double-equal> <validation/manifest#1doubleMinexclusiveINTEGER_fail-double-low> <validation/manifest#1doubleMinexclusiveINTEGER_pass-double-high> <validation/manifest#1doubleMinexclusiveDECIMAL_fail-double-low> <validation/manifest#1doubleMinexclusiveDECIMAL_fail-double-equal> <validation/manifest#1doubleMinexclusiveDECIMAL_pass-double-high> <validation/manifest#1doubleMinexclusiveDOUBLE_fail-double-low> <validation/manifest#1doubleMinexclusiveDOUBLE_fail-double-equal> <validation/manifest#1doubleMinexclusiveDOUBLE_pass-double-high> <validation/manifest#1doubleMinexclusiveDECIMAL_fail-float-equal> <validation/manifest#1integerMaxinclusiveINTEGER_pass-integer-low> <validation/manifest#1integerMaxinclusiveINTEGER_pass-integer-equal> <validation/manifest#1integerMaxinclusiveINTEGER_fail-integer-high> <validation/manifest#1integerMaxinclusiveDECIMALint_pass-integer-low> <validation/manifest#1integerMaxinclusiveDECIMALint_pass-integer-equal> <validation/manifest#1integerMaxinclusiveDECIMALint_fail-integer-high> <validation/manifest#1integerMaxinclusiveDOUBLEint_pass-integer-low> <validation/manifest#1integerMaxinclusiveDOUBLEint_pass-integer-equal> <validation/manifest#1integerMaxinclusiveDOUBLEint_fail-integer-high> <validation/manifest#1decimalMaxinclusiveINTEGER_pass-decimal-low> <validation/manifest#1decimalMaxinclusiveINTEGER_fail-decimal-high> <validation/manifest#1decimalMaxinclusiveDECIMAL_pass-decimal-low> <validation/manifest#1decimalMaxinclusiveDECIMAL_pass-decimal-equal> <validation/manifest#1decimalMaxinclusiveDECIMAL_fail-decimal-high> <validation/manifest#1decimalMaxinclusiveDOUBLE_pass-decimal-low> <validation/manifest#1decimalMaxinclusiveDOUBLE_pass-decimal-equal> <validation/manifest#1decimalMaxinclusiveDOUBLE_fail-decimal-high> <validation/manifest#1decimalMaxinclusiveDECIMAL_fail-float-equal> <validation/manifest#1decimalMaxinclusiveDECIMAL_fail-double-equal> <validation/manifest#1floatMaxinclusiveINTEGER_pass-float-low> <validation/manifest#1floatMaxinclusiveINTEGER_fail-float-high> <validation/manifest#1floatMaxinclusiveDECIMAL_pass-float-low> <validation/manifest#1floatMaxinclusiveDECIMAL_pass-float-equal> <validation/manifest#1floatMaxinclusiveDECIMAL_fail-float-high> <validation/manifest#1floatMaxinclusiveDOUBLE_pass-float-low> <validation/manifest#1floatMaxinclusiveDOUBLE_pass-float-equal> <validation/manifest#1floatMaxinclusiveDOUBLE_fail-float-high> <validation/manifest#1floatMaxinclusivexsd-float_fail-decimal-equal> <validation/manifest#1floatMaxinclusivexsd-float_fail-double-equal> <validation/manifest#1doubleMaxinclusiveINTEGER_pass-double-low> <validation/manifest#1doubleMaxinclusiveINTEGER_fail-double-high> <validation/manifest#1doubleMaxinclusiveDECIMAL_pass-double-low> <validation/manifest#1doubleMaxinclusiveDECIMAL_pass-double-equal> <validation/manifest#1doubleMaxinclusiveDECIMAL_fail-double-high> <validation/manifest#1doubleMaxinclusiveDOUBLE_pass-double-low> <validation/manifest#1doubleMaxinclusiveDOUBLE_pass-double-equal> <validation/manifest#1doubleMaxinclusiveDOUBLE_fail-double-high> <validation/manifest#1doubleMaxinclusiveDECIMAL_fail-float-equal> <validation/manifest#1integerMaxexclusiveINTEGER_pass-integer-low> <validation/manifest#1integerMaxexclusiveINTEGER_fail-integer-equal> <validation/manifest#1integerMaxexclusiveINTEGER_fail-integer-high> <validation/manifest#1integerMaxexclusiveDECIMALint_pass-integer-low> <validation/manifest#1integerMaxexclusiveDECIMALint_fail-integer-equal> <validation/manifest#1integerMaxexclusiveDECIMALint_fail-integer-high> <validation/manifest#1integerMaxexclusiveDOUBLEint_pass-integer-low> <validation/manifest#1integerMaxexclusiveDOUBLEint_fail-integer-equal> <validation/manifest#1integerMaxexclusiveDOUBLEint_fail-integer-high> <validation/manifest#1decimalMaxexclusiveINTEGER_pass-decimal-low> <validation/manifest#1decimalMaxexclusiveINTEGER_fail-decimal-high> <validation/manifest#1decimalMaxexclusiveDECIMAL_pass-decimal-low> <validation/manifest#1decimalMaxexclusiveDECIMAL_fail-decimal-equal> <validation/manifest#1decimalMaxexclusiveDECIMAL_fail-decimal-high> <validation/manifest#1decimalMaxexclusiveDOUBLE_pass-decimal-low> <validation/manifest#1decimalMaxexclusiveDOUBLE_fail-decimal-equal> <validation/manifest#1decimalMaxexclusiveDOUBLE_fail-decimal-high> <validation/manifest#1decimalMaxexclusiveDECIMAL_fail-float-equal> <validation/manifest#1decimalMaxexclusiveDECIMAL_fail-double-equal> <validation/manifest#1decimalMaxexclusivexsd-byte_fail-byte-equal> <validation/manifest#1decimalMaxexclusivexsd-decimal_fail-decimal-equal> <validation/manifest#1floatMaxexclusiveINTEGER_pass-float-low> <validation/manifest#1floatMaxexclusiveINTEGER_fail-float-high> <validation/manifest#1floatMaxexclusiveDECIMAL_pass-float-low> <validation/manifest#1floatMaxexclusiveDECIMAL_fail-float-high> <validation/manifest#1floatMaxexclusiveDOUBLE_pass-float-low> <validation/manifest#1floatMaxexclusiveDOUBLE_fail-float-high> <validation/manifest#1doubleMaxexclusiveINTEGER_pass-double-low> <validation/manifest#1doubleMaxexclusiveINTEGER_fail-double-equal> <validation/manifest#1doubleMaxexclusiveINTEGER_fail-double-high> <validation/manifest#1doubleMaxexclusiveINTEGERLead_fail-double-equal> <validation/manifest#1doubleMaxexclusiveDECIMAL_pass-double-low> <validation/manifest#1doubleMaxexclusiveDECIMAL_fail-double-equal> <validation/manifest#1doubleMaxexclusiveDECIMAL_fail-double-high> <validation/manifest#1doubleMaxexclusiveDECIMALLeadTrail_fail-double-equal> <validation/manifest#1doubleMaxexclusiveDECIMALint_fail-double-equal> <validation/manifest#1doubleMaxexclusiveDECIMALintLeadTrail_fail-double-equal> <validation/manifest#1doubleMaxexclusiveDOUBLE_pass-double-low> <validation/manifest#1doubleMaxexclusiveDOUBLE_fail-double-equal> <validation/manifest#1doubleMaxexclusiveDOUBLE_fail-double-high> <validation/manifest#1doubleMaxexclusiveDOUBLELeadTrail_fail-double-equal> <validation/manifest#1doubleMaxexclusiveDOUBLEint_fail-double-equal> <validation/manifest#1doubleMaxexclusiveDOUBLEintLeadTrail_fail-double-equal> <validation/manifest#1Length_fail-lit-short> <validation/manifest#1Length_pass-lit-equal> <validation/manifest#1Length_fail-lit-long> <validation/manifest#1literalLength_fail-lit-short> <validation/manifest#1literalLength_pass-lit-equal> <validation/manifest#1literalLength_fail-lit-long> <validation/manifest#1literalLength_fail-iri-equal> <validation/manifest#1literalLength_fail-bnode-equal> <validation/manifest#1iriLength_fail-iri-short> <validation/manifest#1iriLength_pass-iri-equal> <validation/manifest#1iriLength_fail-iri-long> <validation/manifest#1iriLength_fail-lit-equal> <validation/manifest#1iriLength_fail-bnode-equal> <validation/manifest#1iriRefLength1_fail-iri-short> <validation/manifest#1iriRefLength1_pass-iri-equal> <validation/manifest#1iriRefLength1_fail-iri-long> <validation/manifest#1iriRefLength1_fail-lit-equal> <validation/manifest#1iriRefLength1_fail-bnode-equal> <validation/manifest#1bnodeLength_fail-bnode-short> <validation/manifest#1bnodeLength_pass-bnode-equal> <validation/manifest#1bnodeLength_fail-bnode-long> <validation/manifest#1bnodeLength_fail-lit-equal> <validation/manifest#1bnodeLength_fail-iri-equal> <validation/manifest#1nonliteralLength_fail-iri-short> <validation/manifest#1nonliteralLength_pass-iri-equal> <validation/manifest#1nonliteralLength_fail-iri-long> <validation/manifest#1nonliteralLength_fail-lit-equal> <validation/manifest#1nonliteralLength_fail-bnode-short> <validation/manifest#1nonliteralLength_pass-bnode-equal> <validation/manifest#1nonliteralLength_fail-bnode-long> <validation/manifest#1literalMinlength_fail-lit-short> <validation/manifest#1literalMinlength_pass-lit-equal> <validation/manifest#1literalMinlength_pass-lit-long> <validation/manifest#1iriMinlength_fail-iri-short> <validation/manifest#1iriMinlength_pass-iri-equal> <validation/manifest#1iriMinlength_pass-iri-long> <validation/manifest#1bnodeMinlength_fail-bnode-short> <validation/manifest#1bnodeMinlength_pass-bnode-equal> <validation/manifest#1bnodeMinlength_pass-bnode-long> <validation/manifest#1nonliteralMinlength_fail-iri-short> <validation/manifest#1nonliteralMinlength_pass-iri-equal> <validation/manifest#1nonliteralMinlength_pass-iri-long> <validation/manifest#1nonliteralMinlength_fail-bnode-short> <validation/manifest#1nonliteralMinlength_pass-bnode-equal> <validation/manifest#1nonliteralMinlength_pass-bnode-long> <validation/manifest#1literalMaxlength_pass-lit-short> <validation/manifest#1literalMaxlength_pass-lit-equal> <validation/manifest#1literalMaxlength_fail-lit-long> <validation/manifest#1iriMaxlength_pass-iri-short> <validation/manifest#1iriMaxlength_pass-iri-equal> <validation/manifest#1iriMaxlength_fail-iri-long> <validation/manifest#1bnodeMaxlength_pass-bnode-short> <validation/manifest#1bnodeMaxlength_pass-bnode-equal> <validation/manifest#1bnodeMaxlength_fail-bnode-long> <validation/manifest#1nonliteralMaxlength_pass-iri-short> <validation/manifest#1nonliteralMaxlength_pass-iri-equal> <validation/manifest#1nonliteralMaxlength_fail-iri-long> <validation/manifest#1nonliteralMaxlength_pass-bnode-short> <validation/manifest#1nonliteralMaxlength_pass-bnode-equal> <validation/manifest#1nonliteralMaxlength_fail-bnode-long> <validation/manifest#1literalPattern_pass-lit-match> <validation/manifest#1literalPattern_fail-lit-short> <validation/manifest#1literalPattern_fail-ab> <validation/manifest#1literalPattern_fail-cd> <validation/manifest#1literalPattern_pass-lit-into> <validation/manifest#1literalPattern19_fail-iri-match> <validation/manifest#1literalPattern_fail-bnode-match> <validation/manifest#1literalPatternEnd_fail-litEnd> <validation/manifest#1literalPatternDollar_pass-litDollar-match> <validation/manifest#1literalPattern_pass-StartlitEnd-match> <validation/manifest#1literalStartPatternEnd_CarrotbcDollar> <validation/manifest#1literalCarrotPatternDollar_pass-bc> <validation/manifest#1literalCarrotPatternDollar_pass-CarrotbcDollar> <validation/manifest#1literalPatternabEnd_fail-bnode-match> <validation/manifest#1literalStartPattern_pass-bc> <validation/manifest#1literalStartPattern_fail-CarrotbcDollar> <validation/manifest#1literalPatternEnd_pass-bc> <validation/manifest#1literalPatternEnd_pass-CarrotbcDollar> <validation/manifest#1literalPattern_pass-bcDollar> <validation/manifest#1literalStarPatternEnd_pass-bc> <validation/manifest#1literalPattern_pass-CarrotbcDollar> <validation/manifest#1iriPattern_pass-iri-match> <validation/manifest#1iriPattern_fail-iri-short> <validation/manifest#1iriPattern_fail-iri-long> <validation/manifest#1iriPattern_fail-lit-match> <validation/manifest#1iriPattern_fail-bnode-match> <validation/manifest#1bnodePattern_pass-bnode-match> <validation/manifest#1bnodePattern_fail-bnode-short> <validation/manifest#1bnodePattern_fail-bnode-long> <validation/manifest#1bnodePattern_fail-lit-match> <validation/manifest#1bnodePattern_fail-iri-match> <validation/manifest#1nonliteralPattern_pass-iri-match> <validation/manifest#1nonliteralPattern_fail-iri-short> <validation/manifest#1nonliteralPattern_pass-iri-long> <validation/manifest#1nonliteralPattern_fail-lit-match> <validation/manifest#1nonliteralPattern_pass-bnode-match> <validation/manifest#1nonliteralPattern_fail-bnode-short> <validation/manifest#1nonliteralPattern_pass-bnode-long> <validation/manifest#1val1dotMinusiri3_pass> <validation/manifest#1val1dotMinusiri3_v1> <validation/manifest#1val1dotMinusiri3_v2> <validation/manifest#1val1dotMinusiri3_v3> <validation/manifest#1val1refvsMinusiri3_pass> <validation/manifest#1val1refvsMinusiri3_v1> <validation/manifest#1val1refvsMinusiri3_v2> <validation/manifest#1val1refvsMinusiri3_v3> <validation/manifest#1val1dotMinusiriStem3_pass> <validation/manifest#1val1dotMinusiriStem3_v1> <validation/manifest#1val1dotMinusiriStem3_v2> <validation/manifest#1val1dotMinusiriStem3_v3> <validation/manifest#1val1dotMinusiriStem3_v1a> <validation/manifest#1val1iriStem_passv1> <validation/manifest#1val1iriStem_passv1a> <validation/manifest#1val1iriStem_fail> <validation/manifest#1val1iriStemMinusiri3_passIv> <validation/manifest#1val1iriStemMinusiri3_passIv4> <validation/manifest#1val1iriStemMinusiri3_v1> <validation/manifest#1val1iriStemMinusiri3_v2> <validation/manifest#1val1iriStemMinusiri3_v3> <validation/manifest#1val1iriStemMinusiri3_passIv1a> <validation/manifest#1val1iriStemMinusiriStem3_passIv> <validation/manifest#1val1iriStemMinusiriStem3_passIv4> <validation/manifest#1val1iriStemMinusiriStem3_v1> <validation/manifest#1val1iriStemMinusiriStem3_v2> <validation/manifest#1val1iriStemMinusiriStem3_v3> <validation/manifest#1val1iriStemMinusiriStem3_v1a> <validation/manifest#1dotOne2dot_pass_p1> <validation/manifest#1dotOne2dot_pass_p2p3> <validation/manifest#1dotOne2dot-oneOf_fail_p1p2p3> <validation/manifest#1dotOne2dot-someOf_fail_p1p2p3> <validation/manifest#open1dotOneopen2dotcloseclose_pass_p1> <validation/manifest#open1dotOneopen2dotcloseclose_pass_p2p3> <validation/manifest#open1dotOneopen2dotcloseclose_fail_p1p2p3> <validation/manifest#openopen1dotOne1dotclose1dotclose_pass_p1p3> <validation/manifest#openopen1dotOne1dotclose1dotclose_pass_p2p3> <validation/manifest#openopen1dotOne1dotclose1dotclose_fail_p1> <validation/manifest#openopen1dotOne1dotclose1dotclose_fail_p3> <validation/manifest#openopen1dotOne1dotclose1dotclose_fail_p1p2> <validation/manifest#1val1vExprRefIRIREF1_fail-lit-short> <validation/manifest#1val1vExprRefIRIREF1_pass-lit-equal> <validation/manifest#1val1vExprRefbnode1_fail-lit-short> <validation/manifest#1val1vExprRefbnode1_pass-lit-equal> <validation/manifest#1dotShapeAND1dot3X_pass> <validation/manifest#1dotShapeAND1dot3X_fail> <validation/manifest#1dotRefAND3_failAll> <validation/manifest#1dotRefAND3_failShape2Shape3> <validation/manifest#1dotRefAND3_failShape1Shape3> <validation/manifest#1dotRefAND3_failShape1Shape2> <validation/manifest#1dotRefAND3_passShape1Shape2Shape3> <validation/manifest#1val1vExpr1AND1AND1Ref3_pass> <validation/manifest#1val1vExpr1AND1AND1Ref3_failvc1> <validation/manifest#1val1vExpr1AND1AND1Ref3_failvc2> <validation/manifest#1val1vExpr1AND1AND1Ref3_failvc3> <validation/manifest#1val1vExprRefAND3_pass> <validation/manifest#1val1vExprRefAND3_failvc3> <validation/manifest#1val1vExprRefAND3_failvc2> <validation/manifest#1val1vExprRefAND3_failvc1> <validation/manifest#1val1vExprAND3_pass> <validation/manifest#1val1vExprAND3_failvc1> <validation/manifest#1val1vExprAND3_failvc2> <validation/manifest#1val1vExprAND3_failvc3> <validation/manifest#refBNodeORrefIRI_ReflexiveIRI> <validation/manifest#refBNodeORrefIRI_ReflexiveShortIRI> <validation/manifest#refBNodeORrefIRI_IntoReflexiveIRI> <validation/manifest#refBNodeORrefIRI_IntoReflexiveBNode> <validation/manifest#refBNodeORrefIRI_CyclicIRI_IRI> <validation/manifest#refBNodeORrefIRI_CyclicIRI_BNode> <validation/manifest#refBNodeORrefIRI_CyclicIRI_ShortIRI> <validation/manifest#1dotRefOR3_fail> <validation/manifest#1dotRefOR3_passShape1> <validation/manifest#1dotRefOR3_passShape2> <validation/manifest#1dotRefOR3_passShape3> <validation/manifest#1dotRefOR3_passShape1Shape2Shape3> <validation/manifest#1val1vExpr1OR1OR1Ref3_fail> <validation/manifest#1val1vExpr1OR1OR1Ref3_passvc1> <validation/manifest#1val1vExpr1OR1OR1Ref3_passvc2> <validation/manifest#1val1vExpr1OR1OR1Ref3_passvc3> <validation/manifest#1val1vExpr1OR1OR1Ref3_passvc1vc2vc3> <validation/manifest#1val1vExprRefOR3_passvc1vc2vc3> <validation/manifest#1val1vExprRefOR3_passvc3> <validation/manifest#1val1vExprRefOR3_passvc2> <validation/manifest#1val1vExprRefOR3_passvc1> <validation/manifest#1val1vExprRefOR3_fail> <validation/manifest#1val1vExprOR3_fail> <validation/manifest#1val1vExprOR3_passvc1> <validation/manifest#1val1vExprOR3_passvc2> <validation/manifest#1val1vExprOR3_passvc3> <validation/manifest#1val1vExprOR3_passvc1vc2vc3> <validation/manifest#1val1vExpr1AND1OR1Ref3_pass-vc1vc2> <validation/manifest#1val1vExpr1AND1OR1Ref3_pass-vc1vc2vc3> <validation/manifest#1val1vExpr1AND1OR1Ref3_pass-vc1vc3> <validation/manifest#1val1vExpr1AND1OR1Ref3_failvc1vc3> <validation/manifest#1val1vExpr1AND1OR1Ref3_failvc2vc3> <validation/manifest#1val1vExpr1AND1OR1Ref3_failvc1vc2vc3> <validation/manifest#1val1vExpr1OR1AND1Ref3_pass-vc1> <validation/manifest#1val1vExpr1OR1AND1Ref3_pass-vc1vc3> <validation/manifest#1val1vExpr1OR1AND1Ref3_pass-vc2vc3> <validation/manifest#1val1vExpr1OR1AND1Ref3_failvc1vc2> <validation/manifest#1val1vExpr1OR1AND1Ref3_failvc1vc3> <validation/manifest#1val1vExpr1OR1AND1Ref3_failvc1vc2vc3> <validation/manifest#open3Onedotclosecard2_fail-p1> <validation/manifest#open3Onedotclosecard2_pass-p1X2> <validation/manifest#open3Onedotclosecard2_fail-p1X3> <validation/manifest#open3Onedotclosecard2_fail-p1X4> <validation/manifest#open3Onedotclosecard2_pass-p1p2> <validation/manifest#open3Onedotclosecard2_pass-p1p3> <validation/manifest#open3Onedotclosecard2_pass-p2p3> <validation/manifest#open3Onedotclosecard2_fail-p1p2p3> <validation/manifest#open3Onedotclosecard23_fail-p1> <validation/manifest#open3Onedotclosecard23_pass-p1X2> <validation/manifest#open3Onedotclosecard23_pass-p1X3> <validation/manifest#open3Onedotclosecard23_fail-p1X4> <validation/manifest#open3Onedotclosecard23_pass-p1p2> <validation/manifest#open3Onedotclosecard23_pass-p1p3> <validation/manifest#open3Onedotclosecard23_pass-p2p3> <validation/manifest#open3Onedotclosecard23_pass-p1p2p3> <validation/manifest#open4Onedotclosecard23_fail-p1p2p3p4> <validation/manifest#open3groupdotclosecard23_pass-p1p2p3X3> <validation/manifest#1val1vShapeANDRef3_pass> <validation/manifest#1dotClosed_pass> <validation/manifest#1dotClosed_fail_lower> <validation/manifest#1dotClosed_fail_higher> <validation/manifest#FocusIRI2groupBnodeNested2groupIRIRef_pass> <validation/manifest#FocusIRI2groupBnodeNested2groupIRIRef_fail> <validation/manifest#1val1IRIREFExtra1_pass-iri1> <validation/manifest#1val1IRIREFExtra1_pass-iri2> <validation/manifest#1val2IRIREFExtra1_fail-iri2> <validation/manifest#1val2IRIREFPlusExtra1_pass-iri2> <validation/manifest#1val2IRIREFExtra1_pass-iri-bnode> <validation/manifest#1val1IRIREFExtra1p2_pass-iri1> <validation/manifest#1val1IRIREFExtra1p2_fail-iri2> <validation/manifest#1dotOne2dotExtra-someOf_pass_p1p2p3> <validation/manifest#1val1IRIREFExtra1One_pass-iri1> <validation/manifest#1val1IRIREFExtra1One_pass-iri2> <validation/manifest#1dotExtra1_pass-iri1> <validation/manifest#1dotExtra1_fail-iri2> <validation/manifest#3groupdotExtra3_pass-iri1> <validation/manifest#3groupdot3Extra_pass-iri1> <validation/manifest#3groupdotExtra3NLex_pass-iri1> <validation/manifest#3groupdotExtra3_pass-iri2> <validation/manifest#3groupdot3Extra_pass-iri2> <validation/manifest#3groupdotExtra3NLex_pass-iri2> <validation/manifest#startRefIRIREF_pass-noOthers> <validation/manifest#startRefIRIREF_pass-others_lexicallyEarlier> <validation/manifest#startRefIRIREF_fail-missing> <validation/manifest#startRefbnode_pass-noOthers> <validation/manifest#startRefbnode_fail-missing> <validation/manifest#startInline_pass-noOthers> <validation/manifest#startEqualSpaceInline_pass-noOthers> <validation/manifest#startSpaceEqualInline_pass-noOthers> <validation/manifest#startInline_fail-missing> <validation/manifest#2EachInclude1_pass> <validation/manifest#2EachInclude1-after_pass> <validation/manifest#2OneInclude1_pass> <validation/manifest#2OneInclude1-after_pass> <validation/manifest#1dotAnnotIRIREF_pass> <validation/manifest#1dotAnnotIRIREF_missing> <validation/manifest#1dotPlusAnnotIRIREF_pass> <validation/manifest#1dotAnnotAIRIREF_pass> <validation/manifest#1dotAnnotSTRING_LITERAL1_pass> <validation/manifest#1dotAnnot3_pass> <validation/manifest#1dotAnnot3_missing> <validation/manifest#1inversedotAnnot3_pass> <validation/manifest#1inversedotAnnot3_missing> <validation/manifest#1dotCode1_pass> <validation/manifest#1dotNoCode1_pass> <validation/manifest#1inversedotCode1_pass> <validation/manifest#1dotCode3_pass> <validation/manifest#1dotNoCode3_pass> <validation/manifest#1dotCode3fail_abort> <validation/manifest#1dotCodeWithEscapes1_pass> <validation/manifest#1dotShapeCode1_pass> <validation/manifest#1dotShapeNoCode1_pass> <validation/manifest#open3groupdotcloseCode1-p1p2p3> <validation/manifest#startCode1_pass> <validation/manifest#startNoCode1_pass> <validation/manifest#startCode1fail_abort> <validation/manifest#startCode1startRef_pass> <validation/manifest#startCode1startReffail_abort> <validation/manifest#startCode3_pass> <validation/manifest#startCode3fail_abort> <validation/manifest#open3groupdotclosecard23Annot3Code2-p1p2p3X3> <validation/manifest#0focusIRI_other> <validation/manifest#0focusIRI_other_fail-bnodeFocusLabel> <validation/manifest#0focusIRI_empty> <validation/manifest#0focusIRI_empty_fail-bnodeFocusLabel> <validation/manifest#0focusBNODE_empty_fail-iriFocusLabel> <validation/manifest#0focusBNODE_empty> <validation/manifest#0focusBNODE_other_fail-iriFocusLabel> <validation/manifest#0focusBNODE_other> <validation/manifest#1focusIRI_dot_fail-bnodeFocusLabel> <validation/manifest#1focusIRI_dot_pass> <validation/manifest#1focusBNODE_dot_fail-iriFocusLabel-equal> <validation/manifest#1focusBNODE_dot_pass> <validation/manifest#1focusnonLiteral-dot_pass-iri-equal> <validation/manifest#focusdatatype_pass> <validation/manifest#focusdatatype_fail> <validation/manifest#focusvs_pass> <validation/manifest#focusvs_fail> <validation/manifest#1focusvsANDdatatype_fail> <validation/manifest#1focusvsANDIRI_pass> <validation/manifest#1focusvsANDIRI_fail> <validation/manifest#1focusvsORdatatype_pass-val> <validation/manifest#1focusvsORdatatype_fail-val> <validation/manifest#1focusvsORdatatype_pass-dt> <validation/manifest#1focusvsORdatatype_fail-dt> <validation/manifest#1focusLength-dot_fail-iri-short> <validation/manifest#1focusLength-dot_pass-iri-equal> <validation/manifest#1focusLength-dot_fail-iri-long> <validation/manifest#1focusLength-dot_fail-bnode-short> <validation/manifest#1focusLength-dot_pass-bnode-equal> <validation/manifest#1focusLength-dot_fail-bnode-long> <validation/manifest#1focusMinLength-dot_fail-iri-short> <validation/manifest#1focusMinLength-dot_pass-iri-equal> <validation/manifest#1focusMinLength-dot_pass-iri-long> <validation/manifest#1focusMinLength-dot_fail-bnode-short> <validation/manifest#1focusMinLength-dot_pass-bnode-equal> <validation/manifest#1focusMinLength-dot_pass-bnode-long> <validation/manifest#1focusMaxLength-dot_pass-iri-short> <validation/manifest#1focusMaxLength-dot_pass-iri-equal> <validation/manifest#1focusMaxLength-dot_fail-iri-long> <validation/manifest#1focusMaxLength-dot_pass-bnode-short> <validation/manifest#1focusMaxLength-dot_pass-bnode-equal> <validation/manifest#1focusMaxLength-dot_fail-bnode-long> <validation/manifest#1focusPattern-dot_fail-iri-match> <validation/manifest#1focusPattern-dot_fail-iri-short> <validation/manifest#1focusPattern-dot_pass-iri-match> <validation/manifest#1focusPattern-dot_fail-iri-long> <validation/manifest#1focusPatternB-dot_fail-iri-match> <validation/manifest#1focusPatternB-dot_fail-bnode-short> <validation/manifest#1focusPatternB-dot_pass-bnode-match> <validation/manifest#1focusPatternB-dot_pass-bnode-long> <validation/manifest#1focusIRILength_dot_fail-bnodeFocusLabel-equal> <validation/manifest#1focusIRILength_dot_fail-short> <validation/manifest#1focusIRILength_dot_pass> <validation/manifest#1focusIRILength_dot_fail-long> <validation/manifest#1focusBNODELength_dot_fail-iriFocusLabel-equal> <validation/manifest#1focusBNODELength_dot_fail-short> <validation/manifest#1focusBNODELength_dot_pass> <validation/manifest#1focusBNODELength_dot_fail-long> <validation/manifest#1focusnonLiteralLength-dot_pass-iri-equal> <validation/manifest#NOT1dotOR2dot_pass-empty> <validation/manifest#NOT1dotOR2dot_pass-NoShape1> <validation/manifest#NOT1dotOR2dot_pass-Shape2> <validation/manifest#NOT1dotOR2dot_fail-Shape2> <validation/manifest#NOT1dotOR2dotX3_pass-empty> <validation/manifest#NOT1dotOR2dotX3_pass-NoShape1> <validation/manifest#NOT1dotOR2dotX3_pass-Shape2> <validation/manifest#NOT1dotOR2dotX3_fail-Shape2> <validation/manifest#NOT1dotOR2dotX3AND1_fail-empty> <validation/manifest#NOT1dotOR2dotX3AND1_fail-NoShape1> <validation/manifest#NOT1dotOR2dotX3AND1_pass-Shape2> <validation/manifest#NOT1dotOR2dotX3AND1_fail-Shape2> <validation/manifest#shapeExtern_pass> <validation/manifest#shapeExtern_fail> <validation/manifest#shapeExternRef_pass> <validation/manifest#shapeExternRef_fail> <validation/manifest#false-lead-excluding-value-shape> <validation/manifest#nPlus1> <validation/manifest#nPlus1-greedy_fail> <validation/manifest#nPlus1-greedy-rewrite> <validation/manifest#skipped> <validation/manifest#repeated-group> <validation/manifest#simple-group> <validation/manifest#PstarT> <validation/manifest#PstarT-greedy> <validation/manifest#PTstar> <validation/manifest#PTstar-greedy-fail> <validation/manifest#PTstar-greedy-rewrite> <validation/manifest#PstarTstar> <validation/manifest#P2T2> <validation/manifest#1dot_fail-empty-err> <validation/manifest#2dot_fail-empty-err>) .

<negativeStructure/manifest#1MissingRef> a sht:NegativeStructureTest;
   mf:name "1MissingRef";
   sx:shex <negativeStructure/1MissingRef.shex> .

<negativeStructure/manifest#1focusMissingRefdot> a sht:NegativeStructureTest;
   mf:name "1focusMissingRefdot";
   sx:shex <negativeStructure/1focusMissingRefdot.shex> .

<negativeStructure/manifest#1focusRefANDSelfdot> a sht:NegativeStructureTest;
   mf:name "1focusRefANDSelfdot";
   sx:shex <negativeStructure/1focusRefANDSelfdot.shex> .

<negativeStructure/manifest#includeNonSimpleShape> a sht:NegativeStructureTest;
   mf:name "includeNonSimpleShape";
   sx:shex <negativeStructure/includeNonSimpleShape.shex> .

<negativeStructure/manifest#includeShapeNotFound> a sht:NegativeStructureTest;
   mf:name "includeShapeNotFound";
   sx:shex <negativeStructure/includeShapeNotFound.shex> .

<negativeSyntax/manifest#1decimalMininclusiveroman-numeral> a sht:NegativeSyntaxTest;
   mf:name "1decimalMininclusiveroman-numeral";
   sx:shex <negativeSyntax/1decimalMininclusiveroman-numeral.shex> .

<negativeSyntax/manifest#1dotAnnot_AIRIREF> a sht:NegativeSyntaxTest;
   mf:name "1dotAnnot_AIRIREF";
   sx:shex <negativeSyntax/1dotAnnot_AIRIREF.shex> .

<negativeSyntax/manifest#1dotUnlabeledCode1> a sht:NegativeSyntaxTest;
   mf:name "1dotUnlabeledCode1";
   sx:shex <negativeSyntax/1dotUnlabeledCode1.shex> .

<negativeSyntax/manifest#1doubleMininclusiveroman-numeral> a sht:NegativeSyntaxTest;
   mf:name "1doubleMininclusiveroman-numeral";
   sx:shex <negativeSyntax/1doubleMininclusiveroman-numeral.shex> .

<negativeSyntax/manifest#1floatMininclusiveroman-numeral> a sht:NegativeSyntaxTest;
   mf:name "1floatMininclusiveroman-numeral";
   sx:shex <negativeSyntax/1floatMininclusiveroman-numeral.shex> .

<negativeSyntax/manifest#1integerMininclusiveroman-numeral> a sht:NegativeSyntaxTest;
   mf:name "1integerMininclusiveroman-numeral";
   sx:shex <negativeSyntax/1integerMininclusiveroman-numeral.shex> .

<negativeSyntax/manifest#1inverseinversedot> a sht:NegativeSyntaxTest;
   mf:name "1inverseinversedot";
   sx:shex <negativeSyntax/1inverseinversedot.shex> .

<negativeSyntax/manifest#1iriLength2> a sht:NegativeSyntaxTest;
   mf:name "1iriLength2";
   sx:shex <negativeSyntax/1iriLength2.shex> .

<negativeSyntax/manifest#1iriMaxexclusive> a sht:NegativeSyntaxTest;
   mf:name "1iriMaxexclusive";
   sx:shex <negativeSyntax/1iriMaxexclusive.shex> .

<negativeSyntax/manifest#1iriMaxinclusive> a sht:NegativeSyntaxTest;
   mf:name "1iriMaxinclusive";
   sx:shex <negativeSyntax/1iriMaxinclusive.shex> .

<negativeSyntax/manifest#1iriMinexclusive> a sht:NegativeSyntaxTest;
   mf:name "1iriMinexclusive";
   sx:shex <negativeSyntax/1iriMinexclusive.shex> .

<negativeSyntax/manifest#1iriMininclusive> a sht:NegativeSyntaxTest;
   mf:name "1iriMininclusive";
   sx:shex <negativeSyntax/1iriMininclusive.shex> .

<negativeSyntax/manifest#1literalFractiondigitsxsd-integer> a sht:NegativeSyntaxTest;
   mf:name "1literalFractiondigitsxsd-integer";
   sx:shex <negativeSyntax/1literalFractiondigitsxsd-integer.shex> .

<negativeSyntax/manifest#1literalLength2> a sht:NegativeSyntaxTest;
   mf:name "1literalLength2";
   sx:shex <negativeSyntax/1literalLength2.shex> .

<negativeSyntax/manifest#1literalTotaldigitsxsd-integer> a sht:NegativeSyntaxTest;
   mf:name "1literalTotaldigitsxsd-integer";
   sx:shex <negativeSyntax/1literalTotaldigitsxsd-integer.shex> .

<negativeSyntax/manifest#1negatedinversenegateddot> a sht:NegativeSyntaxTest;
   mf:name "1negatedinversenegateddot";
   sx:shex <negativeSyntax/1negatedinversenegateddot.shex> .

<negativeSyntax/manifest#1negatednegateddot> a sht:NegativeSyntaxTest;
   mf:name "1negatednegateddot";
   sx:shex <negativeSyntax/1negatednegateddot.shex> .

<negativeSyntax/manifest#1unknowndatatypeMaxInclusive> a sht:NegativeSyntaxTest;
   mf:name "1unknowndatatypeMaxInclusive";
   sx:shex <negativeSyntax/1unknowndatatypeMaxInclusive.shex> .

<negativeSyntax/manifest#1val1bnode> a sht:NegativeSyntaxTest;
   mf:name "1val1bnode";
   sx:shex <negativeSyntax/1val1bnode.shex> .

<negativeSyntax/manifest#1val1iriMinusiri1> a sht:NegativeSyntaxTest;
   mf:name "1val1iriMinusiri1";
   sx:shex <negativeSyntax/1val1iriMinusiri1.shex> .

<negativeSyntax/manifest#1val1vcrefSTRING_LITERAL1> a sht:NegativeSyntaxTest;
   mf:name "1val1vcrefSTRING_LITERAL1";
   sx:shex <negativeSyntax/1val1vcrefSTRING_LITERAL1.shex> .

<negativeSyntax/manifest#1valA> a sht:NegativeSyntaxTest;
   mf:name "1valA";
   sx:shex <negativeSyntax/1valA.shex> .

<negativeSyntax/manifest#DECIMAL-123.abc> a sht:NegativeSyntaxTest;
   mf:name "DECIMAL-123.abc";
   sx:shex <negativeSyntax/DECIMAL-123.abc.shex> .

<negativeSyntax/manifest#DOUBLE-123e> a sht:NegativeSyntaxTest;
   mf:name "DOUBLE-123e";
   sx:shex <negativeSyntax/DOUBLE-123e.shex> .

<negativeSyntax/manifest#INTEGER-+-1> a sht:NegativeSyntaxTest;
   mf:name "INTEGER-+-1";
   sx:shex <negativeSyntax/INTEGER-+-1.shex> .

<negativeSyntax/manifest#INTEGER-123abc> a sht:NegativeSyntaxTest;
   mf:name "INTEGER-123abc";
   sx:shex <negativeSyntax/INTEGER-123abc.shex> .

<negativeSyntax/manifest#IRIREF-with-ECHAR> a sht:NegativeSyntaxTest;
   mf:name "IRIREF-with-ECHAR";
   sx:shex <negativeSyntax/IRIREF-with-ECHAR.shex> .

<negativeSyntax/manifest#IRIREF-with-PN_LOCAL_ESC> a sht:NegativeSyntaxTest;
   mf:name "IRIREF-with-PN_LOCAL_ESC";
   sx:shex <negativeSyntax/IRIREF-with-PN_LOCAL_ESC.shex> .

<negativeSyntax/manifest#IRIREF-with-SPACE> a sht:NegativeSyntaxTest;
   mf:name "IRIREF-with-SPACE";
   sx:shex <negativeSyntax/IRIREF-with-SPACE.shex> .

<negativeSyntax/manifest#IRIREF-with-bad-UCHAR.1> a sht:NegativeSyntaxTest;
   mf:name "IRIREF-with-bad-UCHAR.1";
   sx:shex <negativeSyntax/IRIREF-with-bad-UCHAR.1.shex> .

<negativeSyntax/manifest#IRIREF-with-bad-UCHAR.2> a sht:NegativeSyntaxTest;
   mf:name "IRIREF-with-bad-UCHAR.2";
   sx:shex <negativeSyntax/IRIREF-with-bad-UCHAR.2.shex> .

<negativeSyntax/manifest#PNAME_NS-dot-at-end-declared> a sht:NegativeSyntaxTest;
   mf:name "PNAME_NS-dot-at-end-declared";
   sx:shex <negativeSyntax/PNAME_NS-dot-at-end-declared.shex> .

<negativeSyntax/manifest#PNAME_NS-dot-at-end-undeclared> a sht:NegativeSyntaxTest;
   mf:name "PNAME_NS-dot-at-end-undeclared";
   sx:shex <negativeSyntax/PNAME_NS-dot-at-end-undeclared.shex> .

<negativeSyntax/manifest#PNAME_NS-dot-at-start-declared> a sht:NegativeSyntaxTest;
   mf:name "PNAME_NS-dot-at-start-declared";
   sx:shex <negativeSyntax/PNAME_NS-dot-at-start-declared.shex> .

<negativeSyntax/manifest#PNAME_NS-dot-at-start-undeclared> a sht:NegativeSyntaxTest;
   mf:name "PNAME_NS-dot-at-start-undeclared";
   sx:shex <negativeSyntax/PNAME_NS-dot-at-start-undeclared.shex> .

<negativeSyntax/manifest#PN_LOCAL-PERCENT-end> a sht:NegativeSyntaxTest;
   mf:name "PN_LOCAL-PERCENT-end";
   sx:shex <negativeSyntax/PN_LOCAL-PERCENT-end.shex> .

<negativeSyntax/manifest#PN_LOCAL-PERCENT-mid> a sht:NegativeSyntaxTest;
   mf:name "PN_LOCAL-PERCENT-mid";
   sx:shex <negativeSyntax/PN_LOCAL-PERCENT-mid.shex> .

<negativeSyntax/manifest#PN_LOCAL-PERCENT-start> a sht:NegativeSyntaxTest;
   mf:name "PN_LOCAL-PERCENT-start";
   sx:shex <negativeSyntax/PN_LOCAL-PERCENT-start.shex> .

<negativeSyntax/manifest#PN_LOCAL-dash-start> a sht:NegativeSyntaxTest;
   mf:name "PN_LOCAL-dash-start";
   sx:shex <negativeSyntax/PN_LOCAL-dash-start.shex> .

<negativeSyntax/manifest#PN_LOCAL-unescaped-TILDE> a sht:NegativeSyntaxTest;
   mf:name "PN_LOCAL-unescaped-TILDE";
   sx:shex <negativeSyntax/PN_LOCAL-unescaped-TILDE.shex> .

<negativeSyntax/manifest#PN_LOCAL-with-UCHAR.1> a sht:NegativeSyntaxTest;
   mf:name "PN_LOCAL-with-UCHAR.1";
   sx:shex <negativeSyntax/PN_LOCAL-with-UCHAR.1.shex> .

<negativeSyntax/manifest#STRING_LITERAL1-ending-QUOTATION_MARK> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL1-ending-QUOTATION_MARK";
   sx:shex <negativeSyntax/STRING_LITERAL1-ending-QUOTATION_MARK.shex> .

<negativeSyntax/manifest#STRING_LITERAL2-bad-ECHAR> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL2-bad-ECHAR";
   sx:shex <negativeSyntax/STRING_LITERAL2-bad-ECHAR.shex> .

<negativeSyntax/manifest#STRING_LITERAL2-bad-LANGTAG> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL2-bad-LANGTAG";
   sx:shex <negativeSyntax/STRING_LITERAL2-bad-LANGTAG.shex> .

<negativeSyntax/manifest#STRING_LITERAL2-bad-UCHAR1> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL2-bad-UCHAR1";
   sx:shex <negativeSyntax/STRING_LITERAL2-bad-UCHAR1.shex> .

<negativeSyntax/manifest#STRING_LITERAL2-bad-UCHAR2-value> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL2-bad-UCHAR2-value";
   sx:shex <negativeSyntax/STRING_LITERAL2-bad-UCHAR2-value.shex> .

<negativeSyntax/manifest#STRING_LITERAL2-ending-APOSTROPHE> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL2-ending-APOSTROPHE";
   sx:shex <negativeSyntax/STRING_LITERAL2-ending-APOSTROPHE.shex> .

<negativeSyntax/manifest#STRING_LITERAL2-illegal-UCHAR1-value> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL2-illegal-UCHAR1-value";
   sx:shex <negativeSyntax/STRING_LITERAL2-illegal-UCHAR1-value.shex> .

<negativeSyntax/manifest#STRING_LITERAL2-with-LANGTAG-and-datatype> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL2-with-LANGTAG-and-datatype";
   sx:shex <negativeSyntax/STRING_LITERAL2-with-LANGTAG-and-datatype.shex> .

<negativeSyntax/manifest#STRING_LITERAL_LONG1-ending-APOSTROPHE> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL_LONG1-ending-APOSTROPHE";
   sx:shex <negativeSyntax/STRING_LITERAL_LONG1-ending-APOSTROPHE.shex> .

<negativeSyntax/manifest#STRING_LITERAL_LONG1-ending-APOSTROPHE4> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL_LONG1-ending-APOSTROPHE4";
   sx:shex <negativeSyntax/STRING_LITERAL_LONG1-ending-APOSTROPHE4.shex> .

<negativeSyntax/manifest#STRING_LITERAL_LONG2-ending-APOSTROPHE3> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL_LONG2-ending-APOSTROPHE3";
   sx:shex <negativeSyntax/STRING_LITERAL_LONG2-ending-APOSTROPHE3.shex> .

<negativeSyntax/manifest#STRING_LITERAL_LONG2-ending-QUOTATION_MARK4> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL_LONG2-ending-QUOTATION_MARK4";
   sx:shex <negativeSyntax/STRING_LITERAL_LONG2-ending-QUOTATION_MARK4.shex> .

<negativeSyntax/manifest#STRING_LITERAL_LONG2-unterminated> a sht:NegativeSyntaxTest;
   mf:name "STRING_LITERAL_LONG2-unterminated";
   sx:shex <negativeSyntax/STRING_LITERAL_LONG2-unterminated.shex> .

<negativeSyntax/manifest#a> a sht:NegativeSyntaxTest;
   mf:name "a";
   sx:shex <negativeSyntax/a.shex> .

<negativeSyntax/manifest#base-no-uri> a sht:NegativeSyntaxTest;
   mf:name "base-no-uri";
   sx:shex <negativeSyntax/base-no-uri.shex> .

<negativeSyntax/manifest#base-uri-dot> a sht:NegativeSyntaxTest;
   mf:name "base-uri-dot";
   sx:shex <negativeSyntax/base-uri-dot.shex> .

<negativeSyntax/manifest#bnodedot> a sht:NegativeSyntaxTest;
   mf:name "bnodedot";
   sx:shex <negativeSyntax/bnodedot.shex> .

<negativeSyntax/manifest#capitol-A> a sht:NegativeSyntaxTest;
   mf:name "capitol-A";
   sx:shex <negativeSyntax/capitol-A.shex> .

<negativeSyntax/manifest#group-no-COMMA-separators> a sht:NegativeSyntaxTest;
   mf:name "group-no-COMMA-separators";
   sx:shex <negativeSyntax/group-no-COMMA-separators.shex> .

<negativeSyntax/manifest#groupShapeConstr-trailing-OR> a sht:NegativeSyntaxTest;
   mf:name "groupShapeConstr-trailing-OR";
   sx:shex <negativeSyntax/groupShapeConstr-trailing-OR.shex> .

<negativeSyntax/manifest#literal-0x123> a sht:NegativeSyntaxTest;
   mf:name "literal-0x123";
   sx:shex <negativeSyntax/literal-0x123.shex> .

<negativeSyntax/manifest#open1dotclose> a sht:NegativeSyntaxTest;
   mf:name "open1dotclose";
   sx:shex <negativeSyntax/open1dotclose.shex> .

<negativeSyntax/manifest#open1dotcloseAnnot3> a sht:NegativeSyntaxTest;
   mf:name "open1dotcloseAnnot3";
   sx:shex <negativeSyntax/open1dotcloseAnnot3.shex> .

<negativeSyntax/manifest#open1dotcloseCode1> a sht:NegativeSyntaxTest;
   mf:name "open1dotcloseCode1";
   sx:shex <negativeSyntax/open1dotcloseCode1.shex> .

<negativeSyntax/manifest#open1dotclosecardOpt> a sht:NegativeSyntaxTest;
   mf:name "open1dotclosecardOpt";
   sx:shex <negativeSyntax/open1dotclosecardOpt.shex> .

<negativeSyntax/manifest#openopen1dotOr1dotclose> a sht:NegativeSyntaxTest;
   mf:name "openopen1dotOr1dotclose";
   sx:shex <negativeSyntax/openopen1dotOr1dotclose.shex> .

<negativeSyntax/manifest#openopen1dotcloseCode1closeCode2> a sht:NegativeSyntaxTest;
   mf:name "openopen1dotcloseCode1closeCode2";
   sx:shex <negativeSyntax/openopen1dotcloseCode1closeCode2.shex> .

<negativeSyntax/manifest#predicate-ANON> a sht:NegativeSyntaxTest;
   mf:name "predicate-ANON";
   sx:shex <negativeSyntax/predicate-ANON.shex> .

<negativeSyntax/manifest#predicate-BLANK_NODE_LABEL> a sht:NegativeSyntaxTest;
   mf:name "predicate-BLANK_NODE_LABEL";
   sx:shex <negativeSyntax/predicate-BLANK_NODE_LABEL.shex> .

<negativeSyntax/manifest#predicate-literal> a sht:NegativeSyntaxTest;
   mf:name "predicate-literal";
   sx:shex <negativeSyntax/predicate-literal.shex> .

<negativeSyntax/manifest#predicate-true> a sht:NegativeSyntaxTest;
   mf:name "predicate-true";
   sx:shex <negativeSyntax/predicate-true.shex> .

<negativeSyntax/manifest#prefix-missing> a sht:NegativeSyntaxTest;
   mf:name "prefix-missing";
   sx:shex <negativeSyntax/prefix-missing.shex> .

<negativeSyntax/manifest#prefix-no-COLON> a sht:NegativeSyntaxTest;
   mf:name "prefix-no-COLON";
   sx:shex <negativeSyntax/prefix-no-COLON.shex> .

<negativeSyntax/manifest#prefix-no-PNAME_NS> a sht:NegativeSyntaxTest;
   mf:name "prefix-no-PNAME_NS";
   sx:shex <negativeSyntax/prefix-no-PNAME_NS.shex> .

<negativeSyntax/manifest#prefix-no-uri> a sht:NegativeSyntaxTest;
   mf:name "prefix-no-uri";
   sx:shex <negativeSyntax/prefix-no-uri.shex> .

<negativeSyntax/manifest#prefix-none> a sht:NegativeSyntaxTest;
   mf:name "prefix-none";
   sx:shex <negativeSyntax/prefix-none.shex> .

<negativeSyntax/manifest#shapename-a> a sht:NegativeSyntaxTest;
   mf:name "shapename-a";
   sx:shex <negativeSyntax/shapename-a.shex> .

<negativeSyntax/manifest#shapename-literal> a sht:NegativeSyntaxTest;
   mf:name "shapename-literal";
   sx:shex <negativeSyntax/shapename-literal.shex> .

<negativeSyntax/manifest#shapename-true> a sht:NegativeSyntaxTest;
   mf:name "shapename-true";
   sx:shex <negativeSyntax/shapename-true.shex> .

<negativeSyntax/manifest#tripleConsraint-no-valueClass> a sht:NegativeSyntaxTest;
   mf:name "tripleConsraint-no-valueClass";
   sx:shex <negativeSyntax/tripleConsraint-no-valueClass.shex> .

<negativeSyntax/manifest#tripleConsraint-with-datatype-and-dot> a sht:NegativeSyntaxTest;
   mf:name "tripleConsraint-with-datatype-and-dot";
   sx:shex <negativeSyntax/tripleConsraint-with-datatype-and-dot.shex> .

<negativeSyntax/manifest#tripleConsraint-with-datatype-and-valueSet> a sht:NegativeSyntaxTest;
   mf:name "tripleConsraint-with-datatype-and-valueSet";
   sx:shex <negativeSyntax/tripleConsraint-with-datatype-and-valueSet.shex> .

<negativeSyntax/manifest#tripleConsraint-with-dot-and-datatype> a sht:NegativeSyntaxTest;
   mf:name "tripleConsraint-with-dot-and-datatype";
   sx:shex <negativeSyntax/tripleConsraint-with-dot-and-datatype.shex> .

<negativeSyntax/manifest#tripleConsraint-with-two-cardinalities> a sht:NegativeSyntaxTest;
   mf:name "tripleConsraint-with-two-cardinalities";
   sx:shex <negativeSyntax/tripleConsraint-with-two-cardinalities.shex> .

<schemas/manifest#0> a sht:RepresentationTest;
   mf:name "0";
   mf:status mf:proposed;
   sx:json <schemas/0.json>;
   sx:shex <schemas/0.shex> .

<schemas/manifest#0focusBNODE> a sht:RepresentationTest;
   mf:name "0focusBNODE";
   mf:status mf:proposed;
   sx:json <schemas/0focusBNODE.json>;
   sx:shex <schemas/0focusBNODE.shex> .

<schemas/manifest#0focusIRI> a sht:RepresentationTest;
   mf:name "0focusIRI";
   mf:status mf:proposed;
   sx:json <schemas/0focusIRI.json>;
   sx:shex <schemas/0focusIRI.shex> .

<schemas/manifest#1Adot> a sht:RepresentationTest;
   mf:name "1Adot";
   mf:status mf:proposed;
   sx:json <schemas/1Adot.json>;
   sx:shex <schemas/1Adot.shex> .

<schemas/manifest#1Length> a sht:RepresentationTest;
   mf:name "1Length";
   mf:status mf:proposed;
   sx:json <schemas/1Length.json>;
   sx:shex <schemas/1Length.shex> .

<schemas/manifest#1bnode> a sht:RepresentationTest;
   mf:name "1bnode";
   mf:status mf:proposed;
   sx:json <schemas/1bnode.json>;
   sx:shex <schemas/1bnode.shex> .

<schemas/manifest#1bnodeLength> a sht:RepresentationTest;
   mf:name "1bnodeLength";
   mf:status mf:proposed;
   sx:json <schemas/1bnodeLength.json>;
   sx:shex <schemas/1bnodeLength.shex> .

<schemas/manifest#1bnodeMaxlength> a sht:RepresentationTest;
   mf:name "1bnodeMaxlength";
   mf:status mf:proposed;
   sx:json <schemas/1bnodeMaxlength.json>;
   sx:shex <schemas/1bnodeMaxlength.shex> .

<schemas/manifest#1bnodeMinlength> a sht:RepresentationTest;
   mf:name "1bnodeMinlength";
   mf:status mf:proposed;
   sx:json <schemas/1bnodeMinlength.json>;
   sx:shex <schemas/1bnodeMinlength.shex> .

<schemas/manifest#1bnodePattern> a sht:RepresentationTest;
   mf:name "1bnodePattern";
   mf:status mf:proposed;
   sx:json <schemas/1bnodePattern.json>;
   sx:shex <schemas/1bnodePattern.shex> .

<schemas/manifest#1bnodeRef1> a sht:RepresentationTest;
   mf:name "1bnodeRef1";
   mf:status mf:proposed;
   sx:json <schemas/1bnodeRef1.json>;
   sx:shex <schemas/1bnodeRef1.shex> .

<schemas/manifest#1bnodeRefORRefMinlength> a sht:RepresentationTest;
   mf:name "1bnodeRefORRefMinlength";
   mf:status mf:proposed;
   sx:json <schemas/1bnodeRefORRefMinlength.json>;
   sx:shex <schemas/1bnodeRefORRefMinlength.shex> .

<schemas/manifest#1card2> a sht:RepresentationTest;
   mf:name "1card2";
   mf:status mf:proposed;
   sx:json <schemas/1card2.json>;
   sx:shex <schemas/1card2.shex> .

<schemas/manifest#1card25> a sht:RepresentationTest;
   mf:name "1card25";
   mf:status mf:proposed;
   sx:json <schemas/1card25.json>;
   sx:shex <schemas/1card25.shex> .

<schemas/manifest#1card2Star> a sht:RepresentationTest;
   mf:name "1card2Star";
   mf:status mf:proposed;
   sx:json <schemas/1card2Star.json>;
   sx:shex <schemas/1card2Star.shex> .

<schemas/manifest#1card2blank> a sht:RepresentationTest;
   mf:name "1card2blank";
   mf:status mf:proposed;
   sx:json <schemas/1card2blank.json>;
   sx:shex <schemas/1card2blank.shex> .

<schemas/manifest#1cardOpt> a sht:RepresentationTest;
   mf:name "1cardOpt";
   mf:status mf:proposed;
   sx:json <schemas/1cardOpt.json>;
   sx:shex <schemas/1cardOpt.shex> .

<schemas/manifest#1cardPlus> a sht:RepresentationTest;
   mf:name "1cardPlus";
   mf:status mf:proposed;
   sx:json <schemas/1cardPlus.json>;
   sx:shex <schemas/1cardPlus.shex> .

<schemas/manifest#1cardStar> a sht:RepresentationTest;
   mf:name "1cardStar";
   mf:status mf:proposed;
   sx:json <schemas/1cardStar.json>;
   sx:shex <schemas/1cardStar.shex> .

<schemas/manifest#1datatype> a sht:RepresentationTest;
   mf:name "1datatype";
   mf:status mf:proposed;
   sx:json <schemas/1datatype.json>;
   sx:shex <schemas/1datatype.shex> .

<schemas/manifest#1datatypeLength> a sht:RepresentationTest;
   mf:name "1datatypeLength";
   mf:status mf:proposed;
   sx:json <schemas/1datatypeLength.json>;
   sx:shex <schemas/1datatypeLength.shex> .

<schemas/manifest#1datatypeRef1> a sht:RepresentationTest;
   mf:name "1datatypeRef1";
   mf:status mf:proposed;
   sx:json <schemas/1datatypeRef1.json>;
   sx:shex <schemas/1datatypeRef1.shex> .

<schemas/manifest#1datatypelangString> a sht:RepresentationTest;
   mf:name "1datatypelangString";
   mf:status mf:proposed;
   sx:json <schemas/1datatypelangString.json>;
   sx:shex <schemas/1datatypelangString.shex> .

<schemas/manifest#1decimalMaxexclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1decimalMaxexclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMaxexclusiveDECIMAL.json>;
   sx:shex <schemas/1decimalMaxexclusiveDECIMAL.shex> .

<schemas/manifest#1decimalMaxexclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1decimalMaxexclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMaxexclusiveDOUBLE.json>;
   sx:shex <schemas/1decimalMaxexclusiveDOUBLE.shex> .

<schemas/manifest#1decimalMaxexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1decimalMaxexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMaxexclusiveINTEGER.json>;
   sx:shex <schemas/1decimalMaxexclusiveINTEGER.shex> .

<schemas/manifest#1decimalMaxexclusivexsd-byte> a sht:RepresentationTest;
   mf:name "1decimalMaxexclusivexsd-byte";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMaxexclusivexsd-byte.json>;
   sx:shex <schemas/1decimalMaxexclusivexsd-byte.shex> .

<schemas/manifest#1decimalMaxexclusivexsd-decimal> a sht:RepresentationTest;
   mf:name "1decimalMaxexclusivexsd-decimal";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMaxexclusivexsd-decimal.json>;
   sx:shex <schemas/1decimalMaxexclusivexsd-decimal.shex> .

<schemas/manifest#1decimalMaxinclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1decimalMaxinclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMaxinclusiveDECIMAL.json>;
   sx:shex <schemas/1decimalMaxinclusiveDECIMAL.shex> .

<schemas/manifest#1decimalMaxinclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1decimalMaxinclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMaxinclusiveDOUBLE.json>;
   sx:shex <schemas/1decimalMaxinclusiveDOUBLE.shex> .

<schemas/manifest#1decimalMaxinclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1decimalMaxinclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMaxinclusiveINTEGER.json>;
   sx:shex <schemas/1decimalMaxinclusiveINTEGER.shex> .

<schemas/manifest#1decimalMinexclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1decimalMinexclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMinexclusiveDECIMAL.json>;
   sx:shex <schemas/1decimalMinexclusiveDECIMAL.shex> .

<schemas/manifest#1decimalMinexclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1decimalMinexclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMinexclusiveDOUBLE.json>;
   sx:shex <schemas/1decimalMinexclusiveDOUBLE.shex> .

<schemas/manifest#1decimalMinexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1decimalMinexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMinexclusiveINTEGER.json>;
   sx:shex <schemas/1decimalMinexclusiveINTEGER.shex> .

<schemas/manifest#1decimalMininclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1decimalMininclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusiveDECIMAL.json>;
   sx:shex <schemas/1decimalMininclusiveDECIMAL.shex> .

<schemas/manifest#1decimalMininclusiveDECIMALLeadTrail> a sht:RepresentationTest;
   mf:name "1decimalMininclusiveDECIMALLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusiveDECIMALLeadTrail.json>;
   sx:shex <schemas/1decimalMininclusiveDECIMALLeadTrail.shex> .

<schemas/manifest#1decimalMininclusiveDECIMALintLeadTrail> a sht:RepresentationTest;
   mf:name "1decimalMininclusiveDECIMALintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusiveDECIMALintLeadTrail.json>;
   sx:shex <schemas/1decimalMininclusiveDECIMALintLeadTrail.shex> .

<schemas/manifest#1decimalMininclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1decimalMininclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusiveDOUBLE.json>;
   sx:shex <schemas/1decimalMininclusiveDOUBLE.shex> .

<schemas/manifest#1decimalMininclusiveDOUBLELeadTrail> a sht:RepresentationTest;
   mf:name "1decimalMininclusiveDOUBLELeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusiveDOUBLELeadTrail.json>;
   sx:shex <schemas/1decimalMininclusiveDOUBLELeadTrail.shex> .

<schemas/manifest#1decimalMininclusiveDOUBLEintLeadTrail> a sht:RepresentationTest;
   mf:name "1decimalMininclusiveDOUBLEintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusiveDOUBLEintLeadTrail.json>;
   sx:shex <schemas/1decimalMininclusiveDOUBLEintLeadTrail.shex> .

<schemas/manifest#1decimalMininclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1decimalMininclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusiveINTEGER.json>;
   sx:shex <schemas/1decimalMininclusiveINTEGER.shex> .

<schemas/manifest#1decimalMininclusiveINTEGERLead> a sht:RepresentationTest;
   mf:name "1decimalMininclusiveINTEGERLead";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusiveINTEGERLead.json>;
   sx:shex <schemas/1decimalMininclusiveINTEGERLead.shex> .

<schemas/manifest#1decimalMininclusivexsd-decimal> a sht:RepresentationTest;
   mf:name "1decimalMininclusivexsd-decimal";
   mf:status mf:proposed;
   sx:json <schemas/1decimalMininclusivexsd-decimal.json>;
   sx:shex <schemas/1decimalMininclusivexsd-decimal.shex> .

<schemas/manifest#1dot> a sht:RepresentationTest;
   mf:name "1dot";
   mf:status mf:proposed;
   sx:json <schemas/1dot.json>;
   sx:shex <schemas/1dot.shex> .

<schemas/manifest#1dot-base> a sht:RepresentationTest;
   mf:name "1dot-base";
   mf:status mf:proposed;
   sx:json <schemas/1dot-base.json>;
   sx:shex <schemas/1dot-base.shex> .

<schemas/manifest#1dotAnnot3> a sht:RepresentationTest;
   mf:name "1dotAnnot3";
   mf:status mf:proposed;
   sx:json <schemas/1dotAnnot3.json>;
   sx:shex <schemas/1dotAnnot3.shex> .

<schemas/manifest#1dotAnnotAIRIREF> a sht:RepresentationTest;
   mf:name "1dotAnnotAIRIREF";
   mf:status mf:proposed;
   sx:json <schemas/1dotAnnotAIRIREF.json>;
   sx:shex <schemas/1dotAnnotAIRIREF.shex> .

<schemas/manifest#1dotAnnotIRIREF> a sht:RepresentationTest;
   mf:name "1dotAnnotIRIREF";
   mf:status mf:proposed;
   sx:json <schemas/1dotAnnotIRIREF.json>;
   sx:shex <schemas/1dotAnnotIRIREF.shex> .

<schemas/manifest#1dotAnnotSTRING_LITERAL1> a sht:RepresentationTest;
   mf:name "1dotAnnotSTRING_LITERAL1";
   mf:status mf:proposed;
   sx:json <schemas/1dotAnnotSTRING_LITERAL1.json>;
   sx:shex <schemas/1dotAnnotSTRING_LITERAL1.shex> .

<schemas/manifest#1dotClosed> a sht:RepresentationTest;
   mf:name "1dotClosed";
   mf:status mf:proposed;
   sx:json <schemas/1dotClosed.json>;
   sx:shex <schemas/1dotClosed.shex> .

<schemas/manifest#1dotCode1> a sht:RepresentationTest;
   mf:name "1dotCode1";
   mf:status mf:proposed;
   sx:json <schemas/1dotCode1.json>;
   sx:shex <schemas/1dotCode1.shex> .

<schemas/manifest#1dotCode3> a sht:RepresentationTest;
   mf:name "1dotCode3";
   mf:status mf:proposed;
   sx:json <schemas/1dotCode3.json>;
   sx:shex <schemas/1dotCode3.shex> .

<schemas/manifest#1dotCode3fail> a sht:RepresentationTest;
   mf:name "1dotCode3fail";
   mf:status mf:proposed;
   sx:json <schemas/1dotCode3fail.json>;
   sx:shex <schemas/1dotCode3fail.shex> .

<schemas/manifest#1dotCodeWithEscapes1> a sht:RepresentationTest;
   mf:name "1dotCodeWithEscapes1";
   mf:status mf:proposed;
   sx:json <schemas/1dotCodeWithEscapes1.json>;
   sx:shex <schemas/1dotCodeWithEscapes1.shex> .

<schemas/manifest#1dotExtra1> a sht:RepresentationTest;
   mf:name "1dotExtra1";
   mf:status mf:proposed;
   sx:json <schemas/1dotExtra1.json>;
   sx:shex <schemas/1dotExtra1.shex> .

<schemas/manifest#1dotInline1> a sht:RepresentationTest;
   mf:name "1dotInline1";
   mf:status mf:proposed;
   sx:json <schemas/1dotInline1.json>;
   sx:shex <schemas/1dotInline1.shex> .

<schemas/manifest#1dotLNdefault> a sht:RepresentationTest;
   mf:name "1dotLNdefault";
   mf:status mf:proposed;
   sx:json <schemas/1dotLNdefault.json>;
   sx:shex <schemas/1dotLNdefault.shex> .

<schemas/manifest#1dotLNex> a sht:RepresentationTest;
   mf:name "1dotLNex";
   mf:status mf:proposed;
   sx:json <schemas/1dotLNex.json>;
   sx:shex <schemas/1dotLNex.shex> .

<schemas/manifest#1dotLNex-HYPHEN_MINUS> a sht:RepresentationTest;
   mf:name "1dotLNex-HYPHEN_MINUS";
   mf:status mf:proposed;
   sx:json <schemas/1dotLNex-HYPHEN_MINUS.json>;
   sx:shex <schemas/1dotLNex-HYPHEN_MINUS.shex> .

<schemas/manifest#1dotLNexComment> a sht:RepresentationTest;
   mf:name "1dotLNexComment";
   mf:status mf:proposed;
   sx:json <schemas/1dotLNexComment.json>;
   sx:shex <schemas/1dotLNexComment.shex> .

<schemas/manifest#1dotNS2> a sht:RepresentationTest;
   mf:name "1dotNS2";
   mf:status mf:proposed;
   sx:json <schemas/1dotNS2.json>;
   sx:shex <schemas/1dotNS2.shex> .

<schemas/manifest#1dotNS2Comment> a sht:RepresentationTest;
   mf:name "1dotNS2Comment";
   mf:status mf:proposed;
   sx:json <schemas/1dotNS2Comment.json>;
   sx:shex <schemas/1dotNS2Comment.shex> .

<schemas/manifest#1dotNSdefault> a sht:RepresentationTest;
   mf:name "1dotNSdefault";
   mf:status mf:proposed;
   sx:json <schemas/1dotNSdefault.json>;
   sx:shex <schemas/1dotNSdefault.shex> .

<schemas/manifest#1dotNoCode1> a sht:RepresentationTest;
   mf:name "1dotNoCode1";
   mf:status mf:proposed;
   sx:json <schemas/1dotNoCode1.json>;
   sx:shex <schemas/1dotNoCode1.shex> .

<schemas/manifest#1dotNoCode3> a sht:RepresentationTest;
   mf:name "1dotNoCode3";
   mf:status mf:proposed;
   sx:json <schemas/1dotNoCode3.json>;
   sx:shex <schemas/1dotNoCode3.shex> .

<schemas/manifest#1dotOne1dot> a sht:RepresentationTest;
   mf:name "1dotOne1dot";
   mf:status mf:proposed;
   sx:json <schemas/1dotOne1dot.json>;
   sx:shex <schemas/1dotOne1dot.shex> .

<schemas/manifest#1dotOne2dot> a sht:RepresentationTest;
   mf:name "1dotOne2dot";
   mf:status mf:proposed;
   sx:json <schemas/1dotOne2dot.json>;
   sx:shex <schemas/1dotOne2dot.shex> .

<schemas/manifest#1dotPlusAnnotIRIREF> a sht:RepresentationTest;
   mf:name "1dotPlusAnnotIRIREF";
   mf:status mf:proposed;
   sx:json <schemas/1dotPlusAnnotIRIREF.json>;
   sx:shex <schemas/1dotPlusAnnotIRIREF.shex> .

<schemas/manifest#1dotRef1> a sht:RepresentationTest;
   mf:name "1dotRef1";
   mf:status mf:proposed;
   sx:json <schemas/1dotRef1.json>;
   sx:shex <schemas/1dotRef1.shex> .

<schemas/manifest#1dotRefAND3> a sht:RepresentationTest;
   mf:name "1dotRefAND3";
   mf:status mf:proposed;
   sx:json <schemas/1dotRefAND3.json>;
   sx:shex <schemas/1dotRefAND3.shex> .

<schemas/manifest#1dotRefLNex1> a sht:RepresentationTest;
   mf:name "1dotRefLNex1";
   mf:status mf:proposed;
   sx:json <schemas/1dotRefLNex1.json>;
   sx:shex <schemas/1dotRefLNex1.shex> .

<schemas/manifest#1dotRefNS1> a sht:RepresentationTest;
   mf:name "1dotRefNS1";
   mf:status mf:proposed;
   sx:json <schemas/1dotRefNS1.json>;
   sx:shex <schemas/1dotRefNS1.shex> .

<schemas/manifest#1dotRefOR3> a sht:RepresentationTest;
   mf:name "1dotRefOR3";
   mf:status mf:proposed;
   sx:json <schemas/1dotRefOR3.json>;
   sx:shex <schemas/1dotRefOR3.shex> .

<schemas/manifest#1dotRefSpaceLNex1> a sht:RepresentationTest;
   mf:name "1dotRefSpaceLNex1";
   mf:status mf:proposed;
   sx:json <schemas/1dotRefSpaceLNex1.json>;
   sx:shex <schemas/1dotRefSpaceLNex1.shex> .

<schemas/manifest#1dotRefSpaceNS1> a sht:RepresentationTest;
   mf:name "1dotRefSpaceNS1";
   mf:status mf:proposed;
   sx:json <schemas/1dotRefSpaceNS1.json>;
   sx:shex <schemas/1dotRefSpaceNS1.shex> .

<schemas/manifest#1dotSemi> a sht:RepresentationTest;
   mf:name "1dotSemi";
   mf:status mf:proposed;
   sx:json <schemas/1dotSemi.json>;
   sx:shex <schemas/1dotSemi.shex> .

<schemas/manifest#1dotSemiOne1dotSemi> a sht:RepresentationTest;
   mf:name "1dotSemiOne1dotSemi";
   mf:status mf:proposed;
   sx:json <schemas/1dotSemiOne1dotSemi.json>;
   sx:shex <schemas/1dotSemiOne1dotSemi.shex> .

<schemas/manifest#1dotSemiOne2dotSemis> a sht:RepresentationTest;
   mf:name "1dotSemiOne2dotSemis";
   mf:status mf:proposed;
   sx:json <schemas/1dotSemiOne2dotSemis.json>;
   sx:shex <schemas/1dotSemiOne2dotSemis.shex> .

<schemas/manifest#1dotShapeAND1dot3X> a sht:RepresentationTest;
   mf:name "1dotShapeAND1dot3X";
   mf:status mf:proposed;
   sx:json <schemas/1dotShapeAND1dot3X.json>;
   sx:shex <schemas/1dotShapeAND1dot3X.shex> .

<schemas/manifest#1dotShapeCode1> a sht:RepresentationTest;
   mf:name "1dotShapeCode1";
   mf:status mf:proposed;
   sx:json <schemas/1dotShapeCode1.json>;
   sx:shex <schemas/1dotShapeCode1.shex> .

<schemas/manifest#1dotShapeNoCode1> a sht:RepresentationTest;
   mf:name "1dotShapeNoCode1";
   mf:status mf:proposed;
   sx:json <schemas/1dotShapeNoCode1.json>;
   sx:shex <schemas/1dotShapeNoCode1.shex> .

<schemas/manifest#1doubleMaxexclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveDECIMAL.json>;
   sx:shex <schemas/1doubleMaxexclusiveDECIMAL.shex> .

<schemas/manifest#1doubleMaxexclusiveDECIMALLeadTrail> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveDECIMALLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveDECIMALLeadTrail.json>;
   sx:shex <schemas/1doubleMaxexclusiveDECIMALLeadTrail.shex> .

<schemas/manifest#1doubleMaxexclusiveDECIMALint> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveDECIMALint";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveDECIMALint.json>;
   sx:shex <schemas/1doubleMaxexclusiveDECIMALint.shex> .

<schemas/manifest#1doubleMaxexclusiveDECIMALintLeadTrail> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveDECIMALintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveDECIMALintLeadTrail.json>;
   sx:shex <schemas/1doubleMaxexclusiveDECIMALintLeadTrail.shex> .

<schemas/manifest#1doubleMaxexclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveDOUBLE.json>;
   sx:shex <schemas/1doubleMaxexclusiveDOUBLE.shex> .

<schemas/manifest#1doubleMaxexclusiveDOUBLELeadTrail> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveDOUBLELeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveDOUBLELeadTrail.json>;
   sx:shex <schemas/1doubleMaxexclusiveDOUBLELeadTrail.shex> .

<schemas/manifest#1doubleMaxexclusiveDOUBLEint> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveDOUBLEint";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveDOUBLEint.json>;
   sx:shex <schemas/1doubleMaxexclusiveDOUBLEint.shex> .

<schemas/manifest#1doubleMaxexclusiveDOUBLEintLeadTrail> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveDOUBLEintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveDOUBLEintLeadTrail.json>;
   sx:shex <schemas/1doubleMaxexclusiveDOUBLEintLeadTrail.shex> .

<schemas/manifest#1doubleMaxexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveINTEGER.json>;
   sx:shex <schemas/1doubleMaxexclusiveINTEGER.shex> .

<schemas/manifest#1doubleMaxexclusiveINTEGERLead> a sht:RepresentationTest;
   mf:name "1doubleMaxexclusiveINTEGERLead";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxexclusiveINTEGERLead.json>;
   sx:shex <schemas/1doubleMaxexclusiveINTEGERLead.shex> .

<schemas/manifest#1doubleMaxinclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1doubleMaxinclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxinclusiveDECIMAL.json>;
   sx:shex <schemas/1doubleMaxinclusiveDECIMAL.shex> .

<schemas/manifest#1doubleMaxinclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1doubleMaxinclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxinclusiveDOUBLE.json>;
   sx:shex <schemas/1doubleMaxinclusiveDOUBLE.shex> .

<schemas/manifest#1doubleMaxinclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1doubleMaxinclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMaxinclusiveINTEGER.json>;
   sx:shex <schemas/1doubleMaxinclusiveINTEGER.shex> .

<schemas/manifest#1doubleMinexclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1doubleMinexclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMinexclusiveDECIMAL.json>;
   sx:shex <schemas/1doubleMinexclusiveDECIMAL.shex> .

<schemas/manifest#1doubleMinexclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1doubleMinexclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMinexclusiveDOUBLE.json>;
   sx:shex <schemas/1doubleMinexclusiveDOUBLE.shex> .

<schemas/manifest#1doubleMinexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1doubleMinexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMinexclusiveINTEGER.json>;
   sx:shex <schemas/1doubleMinexclusiveINTEGER.shex> .

<schemas/manifest#1doubleMininclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1doubleMininclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMininclusiveDECIMAL.json>;
   sx:shex <schemas/1doubleMininclusiveDECIMAL.shex> .

<schemas/manifest#1doubleMininclusiveDECIMALLeadTrail> a sht:RepresentationTest;
   mf:name "1doubleMininclusiveDECIMALLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMininclusiveDECIMALLeadTrail.json>;
   sx:shex <schemas/1doubleMininclusiveDECIMALLeadTrail.shex> .

<schemas/manifest#1doubleMininclusiveDECIMALintLeadTrail> a sht:RepresentationTest;
   mf:name "1doubleMininclusiveDECIMALintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMininclusiveDECIMALintLeadTrail.json>;
   sx:shex <schemas/1doubleMininclusiveDECIMALintLeadTrail.shex> .

<schemas/manifest#1doubleMininclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1doubleMininclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMininclusiveDOUBLE.json>;
   sx:shex <schemas/1doubleMininclusiveDOUBLE.shex> .

<schemas/manifest#1doubleMininclusiveDOUBLELeadTrail> a sht:RepresentationTest;
   mf:name "1doubleMininclusiveDOUBLELeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMininclusiveDOUBLELeadTrail.json>;
   sx:shex <schemas/1doubleMininclusiveDOUBLELeadTrail.shex> .

<schemas/manifest#1doubleMininclusiveDOUBLEintLeadTrail> a sht:RepresentationTest;
   mf:name "1doubleMininclusiveDOUBLEintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMininclusiveDOUBLEintLeadTrail.json>;
   sx:shex <schemas/1doubleMininclusiveDOUBLEintLeadTrail.shex> .

<schemas/manifest#1doubleMininclusiveINTEGERLead> a sht:RepresentationTest;
   mf:name "1doubleMininclusiveINTEGERLead";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMininclusiveINTEGERLead.json>;
   sx:shex <schemas/1doubleMininclusiveINTEGERLead.shex> .

<schemas/manifest#1doubleMininclusivexsd-double> a sht:RepresentationTest;
   mf:name "1doubleMininclusivexsd-double";
   mf:status mf:proposed;
   sx:json <schemas/1doubleMininclusivexsd-double.json>;
   sx:shex <schemas/1doubleMininclusivexsd-double.shex> .

<schemas/manifest#1floatMaxexclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1floatMaxexclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1floatMaxexclusiveDECIMAL.json>;
   sx:shex <schemas/1floatMaxexclusiveDECIMAL.shex> .

<schemas/manifest#1floatMaxexclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1floatMaxexclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1floatMaxexclusiveDOUBLE.json>;
   sx:shex <schemas/1floatMaxexclusiveDOUBLE.shex> .

<schemas/manifest#1floatMaxexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1floatMaxexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1floatMaxexclusiveINTEGER.json>;
   sx:shex <schemas/1floatMaxexclusiveINTEGER.shex> .

<schemas/manifest#1floatMaxinclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1floatMaxinclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1floatMaxinclusiveDECIMAL.json>;
   sx:shex <schemas/1floatMaxinclusiveDECIMAL.shex> .

<schemas/manifest#1floatMaxinclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1floatMaxinclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1floatMaxinclusiveDOUBLE.json>;
   sx:shex <schemas/1floatMaxinclusiveDOUBLE.shex> .

<schemas/manifest#1floatMaxinclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1floatMaxinclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1floatMaxinclusiveINTEGER.json>;
   sx:shex <schemas/1floatMaxinclusiveINTEGER.shex> .

<schemas/manifest#1floatMaxinclusivexsd-float> a sht:RepresentationTest;
   mf:name "1floatMaxinclusivexsd-float";
   mf:status mf:proposed;
   sx:json <schemas/1floatMaxinclusivexsd-float.json>;
   sx:shex <schemas/1floatMaxinclusivexsd-float.shex> .

<schemas/manifest#1floatMinexclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1floatMinexclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1floatMinexclusiveDECIMAL.json>;
   sx:shex <schemas/1floatMinexclusiveDECIMAL.shex> .

<schemas/manifest#1floatMinexclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1floatMinexclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1floatMinexclusiveDOUBLE.json>;
   sx:shex <schemas/1floatMinexclusiveDOUBLE.shex> .

<schemas/manifest#1floatMinexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1floatMinexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1floatMinexclusiveINTEGER.json>;
   sx:shex <schemas/1floatMinexclusiveINTEGER.shex> .

<schemas/manifest#1floatMinexclusivexsd-float> a sht:RepresentationTest;
   mf:name "1floatMinexclusivexsd-float";
   mf:status mf:proposed;
   sx:json <schemas/1floatMinexclusivexsd-float.json>;
   sx:shex <schemas/1floatMinexclusivexsd-float.shex> .

<schemas/manifest#1floatMininclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1floatMininclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusiveDECIMAL.json>;
   sx:shex <schemas/1floatMininclusiveDECIMAL.shex> .

<schemas/manifest#1floatMininclusiveDECIMALLeadTrail> a sht:RepresentationTest;
   mf:name "1floatMininclusiveDECIMALLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusiveDECIMALLeadTrail.json>;
   sx:shex <schemas/1floatMininclusiveDECIMALLeadTrail.shex> .

<schemas/manifest#1floatMininclusiveDECIMALintLeadTrail> a sht:RepresentationTest;
   mf:name "1floatMininclusiveDECIMALintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusiveDECIMALintLeadTrail.json>;
   sx:shex <schemas/1floatMininclusiveDECIMALintLeadTrail.shex> .

<schemas/manifest#1floatMininclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1floatMininclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusiveDOUBLE.json>;
   sx:shex <schemas/1floatMininclusiveDOUBLE.shex> .

<schemas/manifest#1floatMininclusiveDOUBLELeadTrail> a sht:RepresentationTest;
   mf:name "1floatMininclusiveDOUBLELeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusiveDOUBLELeadTrail.json>;
   sx:shex <schemas/1floatMininclusiveDOUBLELeadTrail.shex> .

<schemas/manifest#1floatMininclusiveDOUBLEintLeadTrail> a sht:RepresentationTest;
   mf:name "1floatMininclusiveDOUBLEintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusiveDOUBLEintLeadTrail.json>;
   sx:shex <schemas/1floatMininclusiveDOUBLEintLeadTrail.shex> .

<schemas/manifest#1floatMininclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1floatMininclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusiveINTEGER.json>;
   sx:shex <schemas/1floatMininclusiveINTEGER.shex> .

<schemas/manifest#1floatMininclusiveINTEGERLead> a sht:RepresentationTest;
   mf:name "1floatMininclusiveINTEGERLead";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusiveINTEGERLead.json>;
   sx:shex <schemas/1floatMininclusiveINTEGERLead.shex> .

<schemas/manifest#1floatMininclusivexsd-float> a sht:RepresentationTest;
   mf:name "1floatMininclusivexsd-float";
   mf:status mf:proposed;
   sx:json <schemas/1floatMininclusivexsd-float.json>;
   sx:shex <schemas/1floatMininclusivexsd-float.shex> .

<schemas/manifest#1focusBNODELength_dot> a sht:RepresentationTest;
   mf:name "1focusBNODELength_dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusBNODELength_dot.json>;
   sx:shex <schemas/1focusBNODELength_dot.shex> .

<schemas/manifest#1focusBNODE_dot> a sht:RepresentationTest;
   mf:name "1focusBNODE_dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusBNODE_dot.json>;
   sx:shex <schemas/1focusBNODE_dot.shex> .

<schemas/manifest#1focusIRILength_dot> a sht:RepresentationTest;
   mf:name "1focusIRILength_dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusIRILength_dot.json>;
   sx:shex <schemas/1focusIRILength_dot.shex> .

<schemas/manifest#1focusIRI_dot> a sht:RepresentationTest;
   mf:name "1focusIRI_dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusIRI_dot.json>;
   sx:shex <schemas/1focusIRI_dot.shex> .

<schemas/manifest#1focusLength-dot> a sht:RepresentationTest;
   mf:name "1focusLength-dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusLength-dot.json>;
   sx:shex <schemas/1focusLength-dot.shex> .

<schemas/manifest#1focusMaxLength-dot> a sht:RepresentationTest;
   mf:name "1focusMaxLength-dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusMaxLength-dot.json>;
   sx:shex <schemas/1focusMaxLength-dot.shex> .

<schemas/manifest#1focusMinLength-dot> a sht:RepresentationTest;
   mf:name "1focusMinLength-dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusMinLength-dot.json>;
   sx:shex <schemas/1focusMinLength-dot.shex> .

<schemas/manifest#1focusPattern-dot> a sht:RepresentationTest;
   mf:name "1focusPattern-dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusPattern-dot.json>;
   sx:shex <schemas/1focusPattern-dot.shex> .

<schemas/manifest#1focusPatternB-dot> a sht:RepresentationTest;
   mf:name "1focusPatternB-dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusPatternB-dot.json>;
   sx:shex <schemas/1focusPatternB-dot.shex> .

<schemas/manifest#1focusnonLiteral-dot> a sht:RepresentationTest;
   mf:name "1focusnonLiteral-dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusnonLiteral-dot.json>;
   sx:shex <schemas/1focusnonLiteral-dot.shex> .

<schemas/manifest#1focusnonLiteralLength-dot> a sht:RepresentationTest;
   mf:name "1focusnonLiteralLength-dot";
   mf:status mf:proposed;
   sx:json <schemas/1focusnonLiteralLength-dot.json>;
   sx:shex <schemas/1focusnonLiteralLength-dot.shex> .

<schemas/manifest#1focusnonLiteralLength-nonLiteralLength> a sht:RepresentationTest;
   mf:name "1focusnonLiteralLength-nonLiteralLength";
   mf:status mf:proposed;
   sx:json <schemas/1focusnonLiteralLength-nonLiteralLength.json>;
   sx:shex <schemas/1focusnonLiteralLength-nonLiteralLength.shex> .

<schemas/manifest#1integerMaxexclusiveDECIMALint> a sht:RepresentationTest;
   mf:name "1integerMaxexclusiveDECIMALint";
   mf:status mf:proposed;
   sx:json <schemas/1integerMaxexclusiveDECIMALint.json>;
   sx:shex <schemas/1integerMaxexclusiveDECIMALint.shex> .

<schemas/manifest#1integerMaxexclusiveDOUBLEint> a sht:RepresentationTest;
   mf:name "1integerMaxexclusiveDOUBLEint";
   mf:status mf:proposed;
   sx:json <schemas/1integerMaxexclusiveDOUBLEint.json>;
   sx:shex <schemas/1integerMaxexclusiveDOUBLEint.shex> .

<schemas/manifest#1integerMaxexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1integerMaxexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1integerMaxexclusiveINTEGER.json>;
   sx:shex <schemas/1integerMaxexclusiveINTEGER.shex> .

<schemas/manifest#1integerMaxinclusiveDECIMALint> a sht:RepresentationTest;
   mf:name "1integerMaxinclusiveDECIMALint";
   mf:status mf:proposed;
   sx:json <schemas/1integerMaxinclusiveDECIMALint.json>;
   sx:shex <schemas/1integerMaxinclusiveDECIMALint.shex> .

<schemas/manifest#1integerMaxinclusiveDOUBLEint> a sht:RepresentationTest;
   mf:name "1integerMaxinclusiveDOUBLEint";
   mf:status mf:proposed;
   sx:json <schemas/1integerMaxinclusiveDOUBLEint.json>;
   sx:shex <schemas/1integerMaxinclusiveDOUBLEint.shex> .

<schemas/manifest#1integerMaxinclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1integerMaxinclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1integerMaxinclusiveINTEGER.json>;
   sx:shex <schemas/1integerMaxinclusiveINTEGER.shex> .

<schemas/manifest#1integerMinexclusiveDECIMALint> a sht:RepresentationTest;
   mf:name "1integerMinexclusiveDECIMALint";
   mf:status mf:proposed;
   sx:json <schemas/1integerMinexclusiveDECIMALint.json>;
   sx:shex <schemas/1integerMinexclusiveDECIMALint.shex> .

<schemas/manifest#1integerMinexclusiveDOUBLEint> a sht:RepresentationTest;
   mf:name "1integerMinexclusiveDOUBLEint";
   mf:status mf:proposed;
   sx:json <schemas/1integerMinexclusiveDOUBLEint.json>;
   sx:shex <schemas/1integerMinexclusiveDOUBLEint.shex> .

<schemas/manifest#1integerMinexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1integerMinexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1integerMinexclusiveINTEGER.json>;
   sx:shex <schemas/1integerMinexclusiveINTEGER.shex> .

<schemas/manifest#1integerMininclusiveDECIMAL> a sht:RepresentationTest;
   mf:name "1integerMininclusiveDECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveDECIMAL.json>;
   sx:shex <schemas/1integerMininclusiveDECIMAL.shex> .

<schemas/manifest#1integerMininclusiveDECIMALLeadTrail> a sht:RepresentationTest;
   mf:name "1integerMininclusiveDECIMALLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveDECIMALLeadTrail.json>;
   sx:shex <schemas/1integerMininclusiveDECIMALLeadTrail.shex> .

<schemas/manifest#1integerMininclusiveDECIMALint> a sht:RepresentationTest;
   mf:name "1integerMininclusiveDECIMALint";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveDECIMALint.json>;
   sx:shex <schemas/1integerMininclusiveDECIMALint.shex> .

<schemas/manifest#1integerMininclusiveDECIMALintLeadTrail> a sht:RepresentationTest;
   mf:name "1integerMininclusiveDECIMALintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveDECIMALintLeadTrail.json>;
   sx:shex <schemas/1integerMininclusiveDECIMALintLeadTrail.shex> .

<schemas/manifest#1integerMininclusiveDOUBLE> a sht:RepresentationTest;
   mf:name "1integerMininclusiveDOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveDOUBLE.json>;
   sx:shex <schemas/1integerMininclusiveDOUBLE.shex> .

<schemas/manifest#1integerMininclusiveDOUBLELeadTrail> a sht:RepresentationTest;
   mf:name "1integerMininclusiveDOUBLELeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveDOUBLELeadTrail.json>;
   sx:shex <schemas/1integerMininclusiveDOUBLELeadTrail.shex> .

<schemas/manifest#1integerMininclusiveDOUBLEint> a sht:RepresentationTest;
   mf:name "1integerMininclusiveDOUBLEint";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveDOUBLEint.json>;
   sx:shex <schemas/1integerMininclusiveDOUBLEint.shex> .

<schemas/manifest#1integerMininclusiveDOUBLEintLeadTrail> a sht:RepresentationTest;
   mf:name "1integerMininclusiveDOUBLEintLeadTrail";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveDOUBLEintLeadTrail.json>;
   sx:shex <schemas/1integerMininclusiveDOUBLEintLeadTrail.shex> .

<schemas/manifest#1integerMininclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1integerMininclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveINTEGER.json>;
   sx:shex <schemas/1integerMininclusiveINTEGER.shex> .

<schemas/manifest#1integerMininclusiveINTEGERLead> a sht:RepresentationTest;
   mf:name "1integerMininclusiveINTEGERLead";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusiveINTEGERLead.json>;
   sx:shex <schemas/1integerMininclusiveINTEGERLead.shex> .

<schemas/manifest#1integerMininclusivexsd-integer> a sht:RepresentationTest;
   mf:name "1integerMininclusivexsd-integer";
   mf:status mf:proposed;
   sx:json <schemas/1integerMininclusivexsd-integer.json>;
   sx:shex <schemas/1integerMininclusivexsd-integer.shex> .

<schemas/manifest#1inversedot> a sht:RepresentationTest;
   mf:name "1inversedot";
   mf:status mf:proposed;
   sx:json <schemas/1inversedot.json>;
   sx:shex <schemas/1inversedot.shex> .

<schemas/manifest#1inversedotAnnot3> a sht:RepresentationTest;
   mf:name "1inversedotAnnot3";
   mf:status mf:proposed;
   sx:json <schemas/1inversedotAnnot3.json>;
   sx:shex <schemas/1inversedotAnnot3.shex> .

<schemas/manifest#1inversedotCode1> a sht:RepresentationTest;
   mf:name "1inversedotCode1";
   mf:status mf:proposed;
   sx:json <schemas/1inversedotCode1.json>;
   sx:shex <schemas/1inversedotCode1.shex> .

<schemas/manifest#1iri> a sht:RepresentationTest;
   mf:name "1iri";
   mf:status mf:proposed;
   sx:json <schemas/1iri.json>;
   sx:shex <schemas/1iri.shex> .

<schemas/manifest#1iriLength> a sht:RepresentationTest;
   mf:name "1iriLength";
   mf:status mf:proposed;
   sx:json <schemas/1iriLength.json>;
   sx:shex <schemas/1iriLength.shex> .

<schemas/manifest#1iriMaxlength> a sht:RepresentationTest;
   mf:name "1iriMaxlength";
   mf:status mf:proposed;
   sx:json <schemas/1iriMaxlength.json>;
   sx:shex <schemas/1iriMaxlength.shex> .

<schemas/manifest#1iriMinlength> a sht:RepresentationTest;
   mf:name "1iriMinlength";
   mf:status mf:proposed;
   sx:json <schemas/1iriMinlength.json>;
   sx:shex <schemas/1iriMinlength.shex> .

<schemas/manifest#1iriPattern> a sht:RepresentationTest;
   mf:name "1iriPattern";
   mf:status mf:proposed;
   sx:json <schemas/1iriPattern.json>;
   sx:shex <schemas/1iriPattern.shex> .

<schemas/manifest#1iriPatternbc> a sht:RepresentationTest;
   mf:name "1iriPatternbc";
   mf:status mf:proposed;
   sx:json <schemas/1iriPatternbc.json>;
   sx:shex <schemas/1iriPatternbc.shex> .

<schemas/manifest#1iriRef1> a sht:RepresentationTest;
   mf:name "1iriRef1";
   mf:status mf:proposed;
   sx:json <schemas/1iriRef1.json>;
   sx:shex <schemas/1iriRef1.shex> .

<schemas/manifest#1iriRefLength1> a sht:RepresentationTest;
   mf:name "1iriRefLength1";
   mf:status mf:proposed;
   sx:json <schemas/1iriRefLength1.json>;
   sx:shex <schemas/1iriRefLength1.shex> .

<schemas/manifest#1literal> a sht:RepresentationTest;
   mf:name "1literal";
   mf:status mf:proposed;
   sx:json <schemas/1literal.json>;
   sx:shex <schemas/1literal.shex> .

<schemas/manifest#1literalCarrotPatternDollar> a sht:RepresentationTest;
   mf:name "1literalCarrotPatternDollar";
   mf:status mf:proposed;
   sx:json <schemas/1literalCarrotPatternDollar.json>;
   sx:shex <schemas/1literalCarrotPatternDollar.shex> .

<schemas/manifest#1literalFractiondigits4> a sht:RepresentationTest;
   mf:name "1literalFractiondigits4";
   mf:status mf:proposed;
   sx:json <schemas/1literalFractiondigits4.json>;
   sx:shex <schemas/1literalFractiondigits4.shex> .

<schemas/manifest#1literalFractiondigits5> a sht:RepresentationTest;
   mf:name "1literalFractiondigits5";
   mf:status mf:proposed;
   sx:json <schemas/1literalFractiondigits5.json>;
   sx:shex <schemas/1literalFractiondigits5.shex> .

<schemas/manifest#1literalLength> a sht:RepresentationTest;
   mf:name "1literalLength";
   mf:status mf:proposed;
   sx:json <schemas/1literalLength.json>;
   sx:shex <schemas/1literalLength.shex> .

<schemas/manifest#1literalLength19> a sht:RepresentationTest;
   mf:name "1literalLength19";
   mf:status mf:proposed;
   sx:json <schemas/1literalLength19.json>;
   sx:shex <schemas/1literalLength19.shex> .

<schemas/manifest#1literalMaxexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1literalMaxexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1literalMaxexclusiveINTEGER.json>;
   sx:shex <schemas/1literalMaxexclusiveINTEGER.shex> .

<schemas/manifest#1literalMaxinclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1literalMaxinclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1literalMaxinclusiveINTEGER.json>;
   sx:shex <schemas/1literalMaxinclusiveINTEGER.shex> .

<schemas/manifest#1literalMaxlength> a sht:RepresentationTest;
   mf:name "1literalMaxlength";
   mf:status mf:proposed;
   sx:json <schemas/1literalMaxlength.json>;
   sx:shex <schemas/1literalMaxlength.shex> .

<schemas/manifest#1literalMinexclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1literalMinexclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1literalMinexclusiveINTEGER.json>;
   sx:shex <schemas/1literalMinexclusiveINTEGER.shex> .

<schemas/manifest#1literalMininclusiveINTEGER> a sht:RepresentationTest;
   mf:name "1literalMininclusiveINTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1literalMininclusiveINTEGER.json>;
   sx:shex <schemas/1literalMininclusiveINTEGER.shex> .

<schemas/manifest#1literalMinlength> a sht:RepresentationTest;
   mf:name "1literalMinlength";
   mf:status mf:proposed;
   sx:json <schemas/1literalMinlength.json>;
   sx:shex <schemas/1literalMinlength.shex> .

<schemas/manifest#1literalPattern> a sht:RepresentationTest;
   mf:name "1literalPattern";
   mf:status mf:proposed;
   sx:json <schemas/1literalPattern.json>;
   sx:shex <schemas/1literalPattern.shex> .

<schemas/manifest#1literalPattern19> a sht:RepresentationTest;
   mf:name "1literalPattern19";
   mf:status mf:proposed;
   sx:json <schemas/1literalPattern19.json>;
   sx:shex <schemas/1literalPattern19.shex> .

<schemas/manifest#1literalPatternDollar> a sht:RepresentationTest;
   mf:name "1literalPatternDollar";
   mf:status mf:proposed;
   sx:json <schemas/1literalPatternDollar.json>;
   sx:shex <schemas/1literalPatternDollar.shex> .

<schemas/manifest#1literalPatternEnd> a sht:RepresentationTest;
   mf:name "1literalPatternEnd";
   mf:status mf:proposed;
   sx:json <schemas/1literalPatternEnd.json>;
   sx:shex <schemas/1literalPatternEnd.shex> .

<schemas/manifest#1literalPatternabEnd> a sht:RepresentationTest;
   mf:name "1literalPatternabEnd";
   mf:status mf:proposed;
   sx:json <schemas/1literalPatternabEnd.json>;
   sx:shex <schemas/1literalPatternabEnd.shex> .

<schemas/manifest#1literalPlus> a sht:RepresentationTest;
   mf:name "1literalPlus";
   mf:status mf:proposed;
   sx:json <schemas/1literalPlus.json>;
   sx:shex <schemas/1literalPlus.shex> .

<schemas/manifest#1literalStartPattern> a sht:RepresentationTest;
   mf:name "1literalStartPattern";
   mf:status mf:proposed;
   sx:json <schemas/1literalStartPattern.json>;
   sx:shex <schemas/1literalStartPattern.shex> .

<schemas/manifest#1literalStartPatternEnd> a sht:RepresentationTest;
   mf:name "1literalStartPatternEnd";
   mf:status mf:proposed;
   sx:json <schemas/1literalStartPatternEnd.json>;
   sx:shex <schemas/1literalStartPatternEnd.shex> .

<schemas/manifest#1literalTotaldigits2> a sht:RepresentationTest;
   mf:name "1literalTotaldigits2";
   mf:status mf:proposed;
   sx:json <schemas/1literalTotaldigits2.json>;
   sx:shex <schemas/1literalTotaldigits2.shex> .

<schemas/manifest#1literalTotaldigits5> a sht:RepresentationTest;
   mf:name "1literalTotaldigits5";
   mf:status mf:proposed;
   sx:json <schemas/1literalTotaldigits5.json>;
   sx:shex <schemas/1literalTotaldigits5.shex> .

<schemas/manifest#1literalTotaldigits6> a sht:RepresentationTest;
   mf:name "1literalTotaldigits6";
   mf:status mf:proposed;
   sx:json <schemas/1literalTotaldigits6.json>;
   sx:shex <schemas/1literalTotaldigits6.shex> .

<schemas/manifest#1nonliteral> a sht:RepresentationTest;
   mf:name "1nonliteral";
   mf:status mf:proposed;
   sx:json <schemas/1nonliteral.json>;
   sx:shex <schemas/1nonliteral.shex> .

<schemas/manifest#1nonliteralLength> a sht:RepresentationTest;
   mf:name "1nonliteralLength";
   mf:status mf:proposed;
   sx:json <schemas/1nonliteralLength.json>;
   sx:shex <schemas/1nonliteralLength.shex> .

<schemas/manifest#1nonliteralMaxlength> a sht:RepresentationTest;
   mf:name "1nonliteralMaxlength";
   mf:status mf:proposed;
   sx:json <schemas/1nonliteralMaxlength.json>;
   sx:shex <schemas/1nonliteralMaxlength.shex> .

<schemas/manifest#1nonliteralMinlength> a sht:RepresentationTest;
   mf:name "1nonliteralMinlength";
   mf:status mf:proposed;
   sx:json <schemas/1nonliteralMinlength.json>;
   sx:shex <schemas/1nonliteralMinlength.shex> .

<schemas/manifest#1nonliteralPattern> a sht:RepresentationTest;
   mf:name "1nonliteralPattern";
   mf:status mf:proposed;
   sx:json <schemas/1nonliteralPattern.json>;
   sx:shex <schemas/1nonliteralPattern.shex> .

<schemas/manifest#1refbnode1> a sht:RepresentationTest;
   mf:name "1refbnode1";
   mf:status mf:proposed;
   sx:json <schemas/1refbnode1.json>;
   sx:shex <schemas/1refbnode1.shex> .

<schemas/manifest#1refbnode_with_leading_digit1> a sht:RepresentationTest;
   mf:name "1refbnode_with_leading_digit1";
   mf:status mf:proposed;
   sx:json <schemas/1refbnode_with_leading_digit1.json>;
   sx:shex <schemas/1refbnode_with_leading_digit1.shex> .

<schemas/manifest#1refbnode_with_leading_underscore1> a sht:RepresentationTest;
   mf:name "1refbnode_with_leading_underscore1";
   mf:status mf:proposed;
   sx:json <schemas/1refbnode_with_leading_underscore1.json>;
   sx:shex <schemas/1refbnode_with_leading_underscore1.shex> .

<schemas/manifest#1refbnode_with_spanning_PN_CHARS1> a sht:RepresentationTest;
   mf:name "1refbnode_with_spanning_PN_CHARS1";
   mf:status mf:proposed;
   sx:json <schemas/1refbnode_with_spanning_PN_CHARS1.json>;
   sx:shex <schemas/1refbnode_with_spanning_PN_CHARS1.shex> .

<schemas/manifest#1refbnode_with_spanning_PN_CHARS_BASE1> a sht:RepresentationTest;
   mf:name "1refbnode_with_spanning_PN_CHARS_BASE1";
   mf:status mf:proposed;
   sx:json <schemas/1refbnode_with_spanning_PN_CHARS_BASE1.json>;
   sx:shex <schemas/1refbnode_with_spanning_PN_CHARS_BASE1.shex> .

<schemas/manifest#1val1DECIMAL> a sht:RepresentationTest;
   mf:name "1val1DECIMAL";
   mf:status mf:proposed;
   sx:json <schemas/1val1DECIMAL.json>;
   sx:shex <schemas/1val1DECIMAL.shex> .

<schemas/manifest#1val1DOUBLE> a sht:RepresentationTest;
   mf:name "1val1DOUBLE";
   mf:status mf:proposed;
   sx:json <schemas/1val1DOUBLE.json>;
   sx:shex <schemas/1val1DOUBLE.shex> .

<schemas/manifest#1val1DOUBLElowercase> a sht:RepresentationTest;
   mf:name "1val1DOUBLElowercase";
   mf:status mf:proposed;
   sx:json <schemas/1val1DOUBLElowercase.json>;
   sx:shex <schemas/1val1DOUBLElowercase.shex> .

<schemas/manifest#1val1INTEGER> a sht:RepresentationTest;
   mf:name "1val1INTEGER";
   mf:status mf:proposed;
   sx:json <schemas/1val1INTEGER.json>;
   sx:shex <schemas/1val1INTEGER.shex> .

<schemas/manifest#1val1IRIREF> a sht:RepresentationTest;
   mf:name "1val1IRIREF";
   mf:status mf:proposed;
   sx:json <schemas/1val1IRIREF.json>;
   sx:shex <schemas/1val1IRIREF.shex> .

<schemas/manifest#1val1IRIREFDatatype> a sht:RepresentationTest;
   mf:name "1val1IRIREFDatatype";
   mf:status mf:proposed;
   sx:json <schemas/1val1IRIREFDatatype.json>;
   sx:shex <schemas/1val1IRIREFDatatype.shex> .

<schemas/manifest#1val1IRIREFExtra1> a sht:RepresentationTest;
   mf:name "1val1IRIREFExtra1";
   mf:status mf:proposed;
   sx:json <schemas/1val1IRIREFExtra1.json>;
   sx:shex <schemas/1val1IRIREFExtra1.shex> .

<schemas/manifest#1val1IRIREFExtra1One> a sht:RepresentationTest;
   mf:name "1val1IRIREFExtra1One";
   mf:status mf:proposed;
   sx:json <schemas/1val1IRIREFExtra1One.json>;
   sx:shex <schemas/1val1IRIREFExtra1One.shex> .

<schemas/manifest#1val1IRIREFExtra1p2> a sht:RepresentationTest;
   mf:name "1val1IRIREFExtra1p2";
   mf:status mf:proposed;
   sx:json <schemas/1val1IRIREFExtra1p2.json>;
   sx:shex <schemas/1val1IRIREFExtra1p2.shex> .

<schemas/manifest#1val1LANGTAG> a sht:RepresentationTest;
   mf:name "1val1LANGTAG";
   mf:status mf:proposed;
   sx:json <schemas/1val1LANGTAG.json>;
   sx:shex <schemas/1val1LANGTAG.shex> .

<schemas/manifest#1val1dotMinusiri3> a sht:RepresentationTest;
   mf:name "1val1dotMinusiri3";
   mf:status mf:proposed;
   sx:json <schemas/1val1dotMinusiri3.json>;
   sx:shex <schemas/1val1dotMinusiri3.shex> .

<schemas/manifest#1val1dotMinusiriStem3> a sht:RepresentationTest;
   mf:name "1val1dotMinusiriStem3";
   mf:status mf:proposed;
   sx:json <schemas/1val1dotMinusiriStem3.json>;
   sx:shex <schemas/1val1dotMinusiriStem3.shex> .

<schemas/manifest#1val1false> a sht:RepresentationTest;
   mf:name "1val1false";
   mf:status mf:proposed;
   sx:json <schemas/1val1false.json>;
   sx:shex <schemas/1val1false.shex> .

<schemas/manifest#1val1iriStem> a sht:RepresentationTest;
   mf:name "1val1iriStem";
   mf:status mf:proposed;
   sx:json <schemas/1val1iriStem.json>;
   sx:shex <schemas/1val1iriStem.shex> .

<schemas/manifest#1val1iriStemMinusiri3> a sht:RepresentationTest;
   mf:name "1val1iriStemMinusiri3";
   mf:status mf:proposed;
   sx:json <schemas/1val1iriStemMinusiri3.json>;
   sx:shex <schemas/1val1iriStemMinusiri3.shex> .

<schemas/manifest#1val1iriStemMinusiriStem3> a sht:RepresentationTest;
   mf:name "1val1iriStemMinusiriStem3";
   mf:status mf:proposed;
   sx:json <schemas/1val1iriStemMinusiriStem3.json>;
   sx:shex <schemas/1val1iriStemMinusiriStem3.shex> .

<schemas/manifest#1val1refvsMinusiri3> a sht:RepresentationTest;
   mf:name "1val1refvsMinusiri3";
   mf:status mf:proposed;
   sx:json <schemas/1val1refvsMinusiri3.json>;
   sx:shex <schemas/1val1refvsMinusiri3.shex> .

<schemas/manifest#1val1true> a sht:RepresentationTest;
   mf:name "1val1true";
   mf:status mf:proposed;
   sx:json <schemas/1val1true.json>;
   sx:shex <schemas/1val1true.shex> .

<schemas/manifest#1val1vExpr1AND1AND1Ref3> a sht:RepresentationTest;
   mf:name "1val1vExpr1AND1AND1Ref3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExpr1AND1AND1Ref3.json>;
   sx:shex <schemas/1val1vExpr1AND1AND1Ref3.shex> .

<schemas/manifest#1val1vExpr1AND1OR1Ref3> a sht:RepresentationTest;
   mf:name "1val1vExpr1AND1OR1Ref3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExpr1AND1OR1Ref3.json>;
   sx:shex <schemas/1val1vExpr1AND1OR1Ref3.shex> .

<schemas/manifest#1val1vExpr1OR1AND1Ref3> a sht:RepresentationTest;
   mf:name "1val1vExpr1OR1AND1Ref3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExpr1OR1AND1Ref3.json>;
   sx:shex <schemas/1val1vExpr1OR1AND1Ref3.shex> .

<schemas/manifest#1val1vExpr1OR1OR1Ref3> a sht:RepresentationTest;
   mf:name "1val1vExpr1OR1OR1Ref3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExpr1OR1OR1Ref3.json>;
   sx:shex <schemas/1val1vExpr1OR1OR1Ref3.shex> .

<schemas/manifest#1val1vExprAND3> a sht:RepresentationTest;
   mf:name "1val1vExprAND3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExprAND3.json>;
   sx:shex <schemas/1val1vExprAND3.shex> .

<schemas/manifest#1val1vExprOR3> a sht:RepresentationTest;
   mf:name "1val1vExprOR3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExprOR3.json>;
   sx:shex <schemas/1val1vExprOR3.shex> .

<schemas/manifest#1val1vExprRefAND3> a sht:RepresentationTest;
   mf:name "1val1vExprRefAND3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExprRefAND3.json>;
   sx:shex <schemas/1val1vExprRefAND3.shex> .

<schemas/manifest#1val1vExprRefIRIREF1> a sht:RepresentationTest;
   mf:name "1val1vExprRefIRIREF1";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExprRefIRIREF1.json>;
   sx:shex <schemas/1val1vExprRefIRIREF1.shex> .

<schemas/manifest#1val1vExprRefOR3> a sht:RepresentationTest;
   mf:name "1val1vExprRefOR3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExprRefOR3.json>;
   sx:shex <schemas/1val1vExprRefOR3.shex> .

<schemas/manifest#1val1vExprRefbnode1> a sht:RepresentationTest;
   mf:name "1val1vExprRefbnode1";
   mf:status mf:proposed;
   sx:json <schemas/1val1vExprRefbnode1.json>;
   sx:shex <schemas/1val1vExprRefbnode1.shex> .

<schemas/manifest#1val1vShapeANDRef3> a sht:RepresentationTest;
   mf:name "1val1vShapeANDRef3";
   mf:status mf:proposed;
   sx:json <schemas/1val1vShapeANDRef3.json>;
   sx:shex <schemas/1val1vShapeANDRef3.shex> .

<schemas/manifest#1val2IRIREFExtra1> a sht:RepresentationTest;
   mf:name "1val2IRIREFExtra1";
   mf:status mf:proposed;
   sx:json <schemas/1val2IRIREFExtra1.json>;
   sx:shex <schemas/1val2IRIREFExtra1.shex> .

<schemas/manifest#1val2IRIREFPlusExtra1> a sht:RepresentationTest;
   mf:name "1val2IRIREFPlusExtra1";
   mf:status mf:proposed;
   sx:json <schemas/1val2IRIREFPlusExtra1.json>;
   sx:shex <schemas/1val2IRIREFPlusExtra1.shex> .

<schemas/manifest#2EachInclude1> a sht:RepresentationTest;
   mf:name "2EachInclude1";
   mf:status mf:proposed;
   sx:json <schemas/2EachInclude1.json>;
   sx:shex <schemas/2EachInclude1.shex> .

<schemas/manifest#2EachInclude1-after> a sht:RepresentationTest;
   mf:name "2EachInclude1-after";
   mf:status mf:proposed;
   sx:json <schemas/2EachInclude1-after.json>;
   sx:shex <schemas/2EachInclude1-after.shex> .

<schemas/manifest#2OneInclude1> a sht:RepresentationTest;
   mf:name "2OneInclude1";
   mf:status mf:proposed;
   sx:json <schemas/2OneInclude1.json>;
   sx:shex <schemas/2OneInclude1.shex> .

<schemas/manifest#2OneInclude1-after> a sht:RepresentationTest;
   mf:name "2OneInclude1-after";
   mf:status mf:proposed;
   sx:json <schemas/2OneInclude1-after.json>;
   sx:shex <schemas/2OneInclude1-after.shex> .

<schemas/manifest#2dot> a sht:RepresentationTest;
   mf:name "2dot";
   mf:status mf:proposed;
   sx:json <schemas/2dot.json>;
   sx:shex <schemas/2dot.shex> .

<schemas/manifest#2dotOne1dot> a sht:RepresentationTest;
   mf:name "2dotOne1dot";
   mf:status mf:proposed;
   sx:json <schemas/2dotOne1dot.json>;
   sx:shex <schemas/2dotOne1dot.shex> .

<schemas/manifest#2dotSemiOne1dotSemi> a sht:RepresentationTest;
   mf:name "2dotSemiOne1dotSemi";
   mf:status mf:proposed;
   sx:json <schemas/2dotSemiOne1dotSemi.json>;
   sx:shex <schemas/2dotSemiOne1dotSemi.shex> .

<schemas/manifest#2dotSemis> a sht:RepresentationTest;
   mf:name "2dotSemis";
   mf:status mf:proposed;
   sx:json <schemas/2dotSemis.json>;
   sx:shex <schemas/2dotSemis.shex> .

<schemas/manifest#3circularRef1> a sht:RepresentationTest;
   mf:name "3circularRef1";
   mf:status mf:proposed;
   sx:json <schemas/3circularRef1.json>;
   sx:shex <schemas/3circularRef1.shex> .

<schemas/manifest#3groupdot> a sht:RepresentationTest;
   mf:name "3groupdot";
   mf:status mf:proposed;
   sx:json <schemas/3groupdot.json>;
   sx:shex <schemas/3groupdot.shex> .

<schemas/manifest#3groupdot3Extra> a sht:RepresentationTest;
   mf:name "3groupdot3Extra";
   mf:status mf:proposed;
   sx:json <schemas/3groupdot3Extra.json>;
   sx:shex <schemas/3groupdot3Extra.shex> .

<schemas/manifest#3groupdotExtra3> a sht:RepresentationTest;
   mf:name "3groupdotExtra3";
   mf:status mf:proposed;
   sx:json <schemas/3groupdotExtra3.json>;
   sx:shex <schemas/3groupdotExtra3.shex> .

<schemas/manifest#3groupdotExtra3NLex> a sht:RepresentationTest;
   mf:name "3groupdotExtra3NLex";
   mf:status mf:proposed;
   sx:json <schemas/3groupdotExtra3NLex.json>;
   sx:shex <schemas/3groupdotExtra3NLex.shex> .

<schemas/manifest#FocusIRI2groupBnodeNested2groupIRIRef> a sht:RepresentationTest;
   mf:name "FocusIRI2groupBnodeNested2groupIRIRef";
   mf:status mf:proposed;
   sx:json <schemas/FocusIRI2groupBnodeNested2groupIRIRef.json>;
   sx:shex <schemas/FocusIRI2groupBnodeNested2groupIRIRef.shex> .

<schemas/manifest#NOT1dotOR2dot> a sht:RepresentationTest;
   mf:name "NOT1dotOR2dot";
   mf:status mf:proposed;
   sx:json <schemas/NOT1dotOR2dot.json>;
   sx:shex <schemas/NOT1dotOR2dot.shex> .

<schemas/manifest#NOT1dotOR2dotX3> a sht:RepresentationTest;
   mf:name "NOT1dotOR2dotX3";
   mf:status mf:proposed;
   sx:json <schemas/NOT1dotOR2dotX3.json>;
   sx:shex <schemas/NOT1dotOR2dotX3.shex> .

<schemas/manifest#NOT1dotOR2dotX3AND1> a sht:RepresentationTest;
   mf:name "NOT1dotOR2dotX3AND1";
   mf:status mf:proposed;
   sx:json <schemas/NOT1dotOR2dotX3AND1.json>;
   sx:shex <schemas/NOT1dotOR2dotX3AND1.shex> .

<schemas/manifest#_all> a sht:RepresentationTest;
   mf:name "_all";
   mf:status mf:proposed;
   sx:json <schemas/_all.json>;
   sx:shex <schemas/_all.shex> .

<schemas/manifest#bnode1dot> a sht:RepresentationTest;
   mf:name "bnode1dot";
   mf:status mf:proposed;
   sx:json <schemas/bnode1dot.json>;
   sx:shex <schemas/bnode1dot.shex> .

<schemas/manifest#focusdatatype> a sht:RepresentationTest;
   mf:name "focusdatatype";
   mf:status mf:proposed;
   sx:json <schemas/focusdatatype.json>;
   sx:shex <schemas/focusdatatype.shex> .

<schemas/manifest#focusvs> a sht:RepresentationTest;
   mf:name "focusvs";
   mf:status mf:proposed;
   sx:json <schemas/focusvs.json>;
   sx:shex <schemas/focusvs.shex> .

<schemas/manifest#focusvsANDIRI> a sht:RepresentationTest;
   mf:name "focusvsANDIRI";
   mf:status mf:proposed;
   sx:json <schemas/focusvsANDIRI.json>;
   sx:shex <schemas/focusvsANDIRI.shex> .

<schemas/manifest#focusvsANDdatatype> a sht:RepresentationTest;
   mf:name "focusvsANDdatatype";
   mf:status mf:proposed;
   sx:json <schemas/focusvsANDdatatype.json>;
   sx:shex <schemas/focusvsANDdatatype.shex> .

<schemas/manifest#focusvsORdatatype> a sht:RepresentationTest;
   mf:name "focusvsORdatatype";
   mf:status mf:proposed;
   sx:json <schemas/focusvsORdatatype.json>;
   sx:shex <schemas/focusvsORdatatype.shex> .

<schemas/manifest#kitchenSink> a sht:RepresentationTest;
   mf:name "kitchenSink";
   mf:status mf:proposed;
   sx:json <schemas/kitchenSink.json>;
   sx:shex <schemas/kitchenSink.shex> .

<schemas/manifest#open1dotOne1dotclose> a sht:RepresentationTest;
   mf:name "open1dotOne1dotclose";
   mf:status mf:proposed;
   sx:json <schemas/open1dotOne1dotclose.json>;
   sx:shex <schemas/open1dotOne1dotclose.shex> .

<schemas/manifest#open1dotOne2dotclose> a sht:RepresentationTest;
   mf:name "open1dotOne2dotclose";
   mf:status mf:proposed;
   sx:json <schemas/open1dotOne2dotclose.json>;
   sx:shex <schemas/open1dotOne2dotclose.shex> .

<schemas/manifest#open1dotOneopen2dotcloseclose> a sht:RepresentationTest;
   mf:name "open1dotOneopen2dotcloseclose";
   mf:status mf:proposed;
   sx:json <schemas/open1dotOneopen2dotcloseclose.json>;
   sx:shex <schemas/open1dotOneopen2dotcloseclose.shex> .

<schemas/manifest#open1dotSemiOne1dotSemicloseSemi> a sht:RepresentationTest;
   mf:name "open1dotSemiOne1dotSemicloseSemi";
   mf:status mf:proposed;
   sx:json <schemas/open1dotSemiOne1dotSemicloseSemi.json>;
   sx:shex <schemas/open1dotSemiOne1dotSemicloseSemi.shex> .

<schemas/manifest#open1dotSemiOne2dotsemisclose> a sht:RepresentationTest;
   mf:name "open1dotSemiOne2dotsemisclose";
   mf:status mf:proposed;
   sx:json <schemas/open1dotSemiOne2dotsemisclose.json>;
   sx:shex <schemas/open1dotSemiOne2dotsemisclose.shex> .

<schemas/manifest#open1dotSemiOneopen2dotSemiscloseclose> a sht:RepresentationTest;
   mf:name "open1dotSemiOneopen2dotSemiscloseclose";
   mf:status mf:proposed;
   sx:json <schemas/open1dotSemiOneopen2dotSemiscloseclose.json>;
   sx:shex <schemas/open1dotSemiOneopen2dotSemiscloseclose.shex> .

<schemas/manifest#open1dotopen1dotOne1dotcloseclose> a sht:RepresentationTest;
   mf:name "open1dotopen1dotOne1dotcloseclose";
   mf:status mf:proposed;
   sx:json <schemas/open1dotopen1dotOne1dotcloseclose.json>;
   sx:shex <schemas/open1dotopen1dotOne1dotcloseclose.shex> .

<schemas/manifest#open1dotopen1dotSemiOne1dotSemicloseSemicloseSemi> a sht:RepresentationTest;
   mf:name "open1dotopen1dotSemiOne1dotSemicloseSemicloseSemi";
   mf:status mf:proposed;
   sx:json <schemas/open1dotopen1dotSemiOne1dotSemicloseSemicloseSemi.json>;
   sx:shex <schemas/open1dotopen1dotSemiOne1dotSemicloseSemicloseSemi.shex> .

<schemas/manifest#open2dotOne1dotclose> a sht:RepresentationTest;
   mf:name "open2dotOne1dotclose";
   mf:status mf:proposed;
   sx:json <schemas/open2dotOne1dotclose.json>;
   sx:shex <schemas/open2dotOne1dotclose.shex> .

<schemas/manifest#open2dotSemisOne1dotSemiclose> a sht:RepresentationTest;
   mf:name "open2dotSemisOne1dotSemiclose";
   mf:status mf:proposed;
   sx:json <schemas/open2dotSemisOne1dotSemiclose.json>;
   sx:shex <schemas/open2dotSemisOne1dotSemiclose.shex> .

<schemas/manifest#open2dotclose> a sht:RepresentationTest;
   mf:name "open2dotclose";
   mf:status mf:proposed;
   sx:json <schemas/open2dotclose.json>;
   sx:shex <schemas/open2dotclose.shex> .

<schemas/manifest#open2dotsemisclose> a sht:RepresentationTest;
   mf:name "open2dotsemisclose";
   mf:status mf:proposed;
   sx:json <schemas/open2dotsemisclose.json>;
   sx:shex <schemas/open2dotsemisclose.shex> .

<schemas/manifest#open3Onedotclosecard2> a sht:RepresentationTest;
   mf:name "open3Onedotclosecard2";
   mf:status mf:proposed;
   sx:json <schemas/open3Onedotclosecard2.json>;
   sx:shex <schemas/open3Onedotclosecard2.shex> .

<schemas/manifest#open3Onedotclosecard23> a sht:RepresentationTest;
   mf:name "open3Onedotclosecard23";
   mf:status mf:proposed;
   sx:json <schemas/open3Onedotclosecard23.json>;
   sx:shex <schemas/open3Onedotclosecard23.shex> .

<schemas/manifest#open3groupdotclose> a sht:RepresentationTest;
   mf:name "open3groupdotclose";
   mf:status mf:proposed;
   sx:json <schemas/open3groupdotclose.json>;
   sx:shex <schemas/open3groupdotclose.shex> .

<schemas/manifest#open3groupdotcloseAnnot3> a sht:RepresentationTest;
   mf:name "open3groupdotcloseAnnot3";
   mf:status mf:proposed;
   sx:json <schemas/open3groupdotcloseAnnot3.json>;
   sx:shex <schemas/open3groupdotcloseAnnot3.shex> .

<schemas/manifest#open3groupdotcloseCode1> a sht:RepresentationTest;
   mf:name "open3groupdotcloseCode1";
   mf:status mf:proposed;
   sx:json <schemas/open3groupdotcloseCode1.json>;
   sx:shex <schemas/open3groupdotcloseCode1.shex> .

<schemas/manifest#open3groupdotclosecard23> a sht:RepresentationTest;
   mf:name "open3groupdotclosecard23";
   mf:status mf:proposed;
   sx:json <schemas/open3groupdotclosecard23.json>;
   sx:shex <schemas/open3groupdotclosecard23.shex> .

<schemas/manifest#open3groupdotclosecard23Annot3Code2> a sht:RepresentationTest;
   mf:name "open3groupdotclosecard23Annot3Code2";
   mf:status mf:proposed;
   sx:json <schemas/open3groupdotclosecard23Annot3Code2.json>;
   sx:shex <schemas/open3groupdotclosecard23Annot3Code2.shex> .

<schemas/manifest#open4Onedotclosecard23> a sht:RepresentationTest;
   mf:name "open4Onedotclosecard23";
   mf:status mf:proposed;
   sx:json <schemas/open4Onedotclosecard23.json>;
   sx:shex <schemas/open4Onedotclosecard23.shex> .

<schemas/manifest#openopen1dotOne1dotclose1dotclose> a sht:RepresentationTest;
   mf:name "openopen1dotOne1dotclose1dotclose";
   mf:status mf:proposed;
   sx:json <schemas/openopen1dotOne1dotclose1dotclose.json>;
   sx:shex <schemas/openopen1dotOne1dotclose1dotclose.shex> .

<schemas/manifest#openopen1dotSemiOne1dotSemiclose1dotSemicloseSemi> a sht:RepresentationTest;
   mf:name "openopen1dotSemiOne1dotSemiclose1dotSemicloseSemi";
   mf:status mf:proposed;
   sx:json <schemas/openopen1dotSemiOne1dotSemiclose1dotSemicloseSemi.json>;
   sx:shex <schemas/openopen1dotSemiOne1dotSemiclose1dotSemicloseSemi.shex> .

<schemas/manifest#openopen2dotSemiscloseOne1dotSemiclose> a sht:RepresentationTest;
   mf:name "openopen2dotSemiscloseOne1dotSemiclose";
   mf:status mf:proposed;
   sx:json <schemas/openopen2dotSemiscloseOne1dotSemiclose.json>;
   sx:shex <schemas/openopen2dotSemiscloseOne1dotSemiclose.shex> .

<schemas/manifest#openopen2dotcloseOne1dotclose> a sht:RepresentationTest;
   mf:name "openopen2dotcloseOne1dotclose";
   mf:status mf:proposed;
   sx:json <schemas/openopen2dotcloseOne1dotclose.json>;
   sx:shex <schemas/openopen2dotcloseOne1dotclose.shex> .

<schemas/manifest#shapeExtern> a sht:RepresentationTest;
   mf:name "shapeExtern";
   mf:status mf:proposed;
   sx:json <schemas/shapeExtern.json>;
   sx:shex <schemas/shapeExtern.shex> .

<schemas/manifest#shapeExternRef> a sht:RepresentationTest;
   mf:name "shapeExternRef";
   mf:status mf:proposed;
   sx:json <schemas/shapeExternRef.json>;
   sx:shex <schemas/shapeExternRef.shex> .

<schemas/manifest#startCode1> a sht:RepresentationTest;
   mf:name "startCode1";
   mf:status mf:proposed;
   sx:json <schemas/startCode1.json>;
   sx:shex <schemas/startCode1.shex> .

<schemas/manifest#startCode1fail> a sht:RepresentationTest;
   mf:name "startCode1fail";
   mf:status mf:proposed;
   sx:json <schemas/startCode1fail.json>;
   sx:shex <schemas/startCode1fail.shex> .

<schemas/manifest#startCode1startRef> a sht:RepresentationTest;
   mf:name "startCode1startRef";
   mf:status mf:proposed;
   sx:json <schemas/startCode1startRef.json>;
   sx:shex <schemas/startCode1startRef.shex> .

<schemas/manifest#startCode1startReffail> a sht:RepresentationTest;
   mf:name "startCode1startReffail";
   mf:status mf:proposed;
   sx:json <schemas/startCode1startReffail.json>;
   sx:shex <schemas/startCode1startReffail.shex> .

<schemas/manifest#startCode3> a sht:RepresentationTest;
   mf:name "startCode3";
   mf:status mf:proposed;
   sx:json <schemas/startCode3.json>;
   sx:shex <schemas/startCode3.shex> .

<schemas/manifest#startCode3fail> a sht:RepresentationTest;
   mf:name "startCode3fail";
   mf:status mf:proposed;
   sx:json <schemas/startCode3fail.json>;
   sx:shex <schemas/startCode3fail.shex> .

<schemas/manifest#startEqualSpaceInline> a sht:RepresentationTest;
   mf:name "startEqualSpaceInline";
   mf:status mf:proposed;
   sx:json <schemas/startEqualSpaceInline.json>;
   sx:shex <schemas/startEqualSpaceInline.shex> .

<schemas/manifest#startInline> a sht:RepresentationTest;
   mf:name "startInline";
   mf:status mf:proposed;
   sx:json <schemas/startInline.json>;
   sx:shex <schemas/startInline.shex> .

<schemas/manifest#startNoCode1> a sht:RepresentationTest;
   mf:name "startNoCode1";
   mf:status mf:proposed;
   sx:json <schemas/startNoCode1.json>;
   sx:shex <schemas/startNoCode1.shex> .

<schemas/manifest#startRefIRIREF> a sht:RepresentationTest;
   mf:name "startRefIRIREF";
   mf:status mf:proposed;
   sx:json <schemas/startRefIRIREF.json>;
   sx:shex <schemas/startRefIRIREF.shex> .

<schemas/manifest#startRefbnode> a sht:RepresentationTest;
   mf:name "startRefbnode";
   mf:status mf:proposed;
   sx:json <schemas/startRefbnode.json>;
   sx:shex <schemas/startRefbnode.shex> .

<schemas/manifest#startSpaceEqualInline> a sht:RepresentationTest;
   mf:name "startSpaceEqualInline";
   mf:status mf:proposed;
   sx:json <schemas/startSpaceEqualInline.json>;
   sx:shex <schemas/startSpaceEqualInline.shex> .

<validation/manifest#0_empty> a sht:ValidationTest;
   rdfs:comment "<S1> {  } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/dummy>;
     sht:schema <schemas/0.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0_empty";
   mf:status mf:proposed;
   sht:result <validation/0_dummy.val> .

<validation/manifest#0_other> a sht:ValidationTest;
   rdfs:comment "<S1> {  } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/0.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0_other";
   mf:status mf:proposed;
   sht:result <validation/0_pass.val> .

<validation/manifest#0_otherbnode> a sht:ValidationTest;
   rdfs:comment "<S1> {  } on { _:abcd <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/0.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0_otherbnode";
   mf:status mf:proposed;
   sht:result <validation/0abcd_pass.val> .

<validation/manifest#0focusBNODE_empty> a sht:ValidationTest;
   rdfs:comment "<S> BNODE {  } on { }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/0focusBNODE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0focusBNODE_empty";
   mf:status mf:proposed;
   sht:result <validation/0abcd_pass-focus.val> .

<validation/manifest#0focusBNODE_empty_fail-iriFocusLabel> a sht:ValidationFailure;
   rdfs:comment "<S> BNODE {  } on { }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/0focusBNODE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0focusBNODE_empty_fail-iriFocusLabel";
   mf:status mf:proposed .

<validation/manifest#0focusBNODE_other> a sht:ValidationTest;
   rdfs:comment "<S> BNODE {  } on { _:abcd <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/0focusBNODE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0focusBNODE_other";
   mf:status mf:proposed;
   sht:result <validation/0abcd_pass-focus.val> .

<validation/manifest#0focusBNODE_other_fail-iriFocusLabel> a sht:ValidationFailure;
   rdfs:comment "<S> BNODE {  } on { }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/0focusBNODE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0focusBNODE_other_fail-iriFocusLabel";
   mf:status mf:proposed .

<validation/manifest#0focusIRI_empty> a sht:ValidationTest;
   rdfs:comment "<S1> IRI {  } on { }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/0focusIRI.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0focusIRI_empty";
   mf:status mf:proposed;
   sht:result <validation/0_pass-focus.val> .

<validation/manifest#0focusIRI_empty_fail-bnodeFocusLabel> a sht:ValidationFailure;
   rdfs:comment "<S> IRI {  } on { }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus [];
     sht:schema <schemas/0focusIRI.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0focusIRI_empty_fail-bnodeFocusLabel";
   mf:status mf:proposed .

<validation/manifest#0focusIRI_other> a sht:ValidationTest;
   rdfs:comment "<S> IRI {  } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/0focusIRI.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0focusIRI_other";
   mf:status mf:proposed;
   sht:result <validation/0_pass-focus.val> .

<validation/manifest#0focusIRI_other_fail-bnodeFocusLabel> a sht:ValidationFailure;
   rdfs:comment "<S> IRI {  } on { }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/0focusIRI.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "0focusIRI_other_fail-bnodeFocusLabel";
   mf:status mf:proposed .

<validation/manifest#1Adot_pass> a sht:ValidationTest;
   rdfs:comment "<S> { a . } on { <s> a <o1> }";
   mf:action [
     sht:data <validation/Is1_a_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1Adot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1Adot_pass";
   mf:status mf:proposed;
   sht:result <validation/1Adot_pass.val> .

<validation/manifest#1Length_fail-lit-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LENGTH 5 } on { <s1> <p1> \"abcdef\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1Length.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1Length_fail-lit-long";
   mf:status mf:proposed .

<validation/manifest#1Length_fail-lit-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LENGTH 5 } on { <s1> <p1> \"abcd\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1Length.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1Length_fail-lit-short";
   mf:status mf:proposed .

<validation/manifest#1Length_pass-lit-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LENGTH 5 } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1Length.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1Length_pass-lit-equal";
   mf:status mf:proposed;
   sht:result <validation/1Length_pass-lit-equal.val> .

<validation/manifest#1bnodeLength_fail-bnode-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE LENGTH 5 } on { <s1> <p1> _:abcdef }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeLength_fail-bnode-long";
   mf:status mf:proposed .

<validation/manifest#1bnodeLength_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE LENGTH 5 } on { <s1> <p1> _:abcd }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeLength_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1bnodeLength_fail-iri-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE LENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeLength_fail-iri-equal";
   mf:status mf:proposed .

<validation/manifest#1bnodeLength_fail-lit-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE LENGTH 19 } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeLength_fail-lit-equal";
   mf:status mf:proposed .

<validation/manifest#1bnodeLength_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE LENGTH 5 } on { <s1> <p1> _:abcde }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeLength_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1bnodeLength_pass-bnode-equal.val> .

<validation/manifest#1bnodeMaxlength_fail-bnode-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE MAXLENGTH 5 } on { <s1> <p1> _:abcdef }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeMaxlength_fail-bnode-long";
   mf:status mf:proposed .

<validation/manifest#1bnodeMaxlength_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE MAXLENGTH 5 } on { <s1> <p1> _:abcde }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeMaxlength_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1bnodeMaxlength_pass-bnode-equal.val> .

<validation/manifest#1bnodeMaxlength_pass-bnode-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE MAXLENGTH 5 } on { <s1> <p1> _:abcd }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeMaxlength_pass-bnode-short";
   mf:status mf:proposed;
   sht:result <validation/1bnodeMaxlength_pass-bnode-short.val> .

<validation/manifest#1bnodeMinlength_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE MINLENGTH 5 } on { <s1> <p1> _:abcd }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeMinlength_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1bnodeMinlength_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE MINLENGTH 5 } on { <s1> <p1> _:abcde }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeMinlength_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1bnodeMinlength_pass-bnode-equal.val> .

<validation/manifest#1bnodeMinlength_pass-bnode-long> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE MINLENGTH 5 } on { <s1> <p1> _:abcdef }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodeMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeMinlength_pass-bnode-long";
   mf:status mf:proposed;
   sht:result <validation/1bnodeMinlength_pass-bnode-long.val> .

<validation/manifest#1bnodePattern_fail-bnode-long> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE PATTERN \"bc\" } on { <s1> <p1> _:abc }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodePattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodePattern_fail-bnode-long";
   mf:status mf:proposed;
   sht:result <validation/1bnodePattern_pass-bnode-into.val> .

<validation/manifest#1bnodePattern_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE PATTERN \"bc\" } on { <s1> <p1> _:a }";
   mf:action [
     sht:data <validation/Is1_Ip1_Ba.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodePattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodePattern_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1bnodePattern_fail-iri-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE PATTERN \"bc\" } on { BASE <http://a.example/> <s1> <p1> <bc> }";
   mf:action [
     sht:data <validation/BASE_Is1_Ip1_Iab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodePattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodePattern_fail-iri-match";
   mf:status mf:proposed .

<validation/manifest#1bnodePattern_fail-lit-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE PATTERN \"bc\" } on { <s1> <p1> \"ab\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodePattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodePattern_fail-lit-match";
   mf:status mf:proposed .

<validation/manifest#1bnodePattern_pass-bnode-match> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE PATTERN \"bc\" } on { <s1> <p1> _:bc }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnodePattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodePattern_pass-bnode-match";
   mf:status mf:proposed;
   sht:result <validation/1bnodePattern_pass-bnode-match.val> .

<validation/manifest#1bnodeRef1_fail-iri> a sht:ValidationFailure;
   rdfs:comment "<n1> in { <n1> <p1> <n2> . <n2> <p2> \"X\" } as <S1> in <S1> { <p1> BNODE @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1bnodeRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeRef1_fail-iri";
   mf:status mf:proposed .

<validation/manifest#1bnodeRef1_pass-bnode> a sht:ValidationTest;
   rdfs:comment "<n1> in { <n1> <p1> _:n1 . _:n1 <p2> \"X\" } as <S1> in <S1> { <p1> BNODE @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_Bn2.Bn2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1bnodeRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnodeRef1_pass-bnode";
   mf:status mf:proposed;
   sht:result <validation/1bnodeRef1_pass-bnode.val> .

<validation/manifest#1bnode_fail-iri> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnode.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnode_fail-iri";
   mf:status mf:proposed .

<validation/manifest#1bnode_fail-literal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE } on { <s1> <p1> \"ab\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnode.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnode_fail-literal";
   mf:status mf:proposed .

<validation/manifest#1bnode_pass-bnode> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE } on { <s1> <p1> _:ab }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1bnode.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1bnode_pass-bnode";
   mf:status mf:proposed;
   sht:result <validation/1bnode_pass-bnode.val> .

<validation/manifest#1card25_fail0> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .{2,5} } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card25.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card25_fail0";
   mf:status mf:proposed .

<validation/manifest#1card25_fail1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card25.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card25_fail1";
   mf:status mf:proposed .

<validation/manifest#1card25_fail6> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b','c','d','e','f' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card25.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card25_fail6";
   mf:status mf:proposed .

<validation/manifest#1card25_pass2> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card25.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card25_pass2";
   mf:status mf:proposed;
   sht:result <validation/1card25_pass2.val> .

<validation/manifest#1card25_pass3> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b','c' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card25.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card25_pass3";
   mf:status mf:proposed;
   sht:result <validation/1card25_pass3.val> .

<validation/manifest#1card25_pass4> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b','c','d' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc,Ld.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card25.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card25_pass4";
   mf:status mf:proposed;
   sht:result <validation/1card25_pass4.val> .

<validation/manifest#1card25_pass5> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b','c','d','e' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc,Ld,Le.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card25.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card25_pass5";
   mf:status mf:proposed;
   sht:result <validation/1card25_pass5.val> .

<validation/manifest#1card2Star_fail0> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .{2,*} } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2Star.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2Star_fail0";
   mf:status mf:proposed .

<validation/manifest#1card2Star_fail1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .{2,*} } on { <s> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2Star.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2Star_fail1";
   mf:status mf:proposed .

<validation/manifest#1card2Star_pass2> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .{2,*} } on { <s> <p1> 'a','b' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2Star.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2Star_pass2";
   mf:status mf:proposed;
   sht:result <validation/1card2Star_pass2.val> .

<validation/manifest#1card2Star_pass3> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .{2,*} } on { <s> <p1> 'a','b','c' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2Star.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2Star_pass3";
   mf:status mf:proposed;
   sht:result <validation/1card2Star_pass3.val> .

<validation/manifest#1card2Star_pass6> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .{2,*} } on { <s> <p1> 'a','b','c','d','e','f' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2Star.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2Star_pass6";
   mf:status mf:proposed;
   sht:result <validation/1card2Star_pass6.val> .

<validation/manifest#1card2_fail0> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .{2} } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2_fail0";
   mf:status mf:proposed .

<validation/manifest#1card2_fail1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .{2} } on { <s> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2_fail1";
   mf:status mf:proposed .

<validation/manifest#1card2_fail3> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .{2} } on { <s> <p1> 'a','b','c' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2_fail3";
   mf:status mf:proposed .

<validation/manifest#1card2_pass2> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .{2} } on { <s> <p1> 'a','b' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1card2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1card2_pass2";
   mf:status mf:proposed;
   sht:result <validation/1card2_pass2.val> .

<validation/manifest#1cardOpt_fail2> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .? } on { <s> <p1> 'a','b' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardOpt.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardOpt_fail2";
   mf:status mf:proposed .

<validation/manifest#1cardOpt_pass0> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .? } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardOpt.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardOpt_pass0";
   mf:status mf:proposed;
   sht:result <validation/1cardOpt_pass0.val> .

<validation/manifest#1cardOpt_pass1> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .? } on { <s> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardOpt.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardOpt_pass1";
   mf:status mf:proposed;
   sht:result <validation/1cardOpt_pass1.val> .

<validation/manifest#1cardOpt_pass6> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .? } on { <s> <p1> 'a','b','c','d','e','f' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardOpt.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardOpt_pass6";
   mf:status mf:proposed .

<validation/manifest#1cardPlus_fail0> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .+ } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardPlus.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardPlus_fail0";
   mf:status mf:proposed .

<validation/manifest#1cardPlus_pass1> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardPlus.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardPlus_pass1";
   mf:status mf:proposed;
   sht:result <validation/1cardPlus_pass1.val> .

<validation/manifest#1cardPlus_pass2> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a','b' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardPlus.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardPlus_pass2";
   mf:status mf:proposed;
   sht:result <validation/1cardPlus_pass2.val> .

<validation/manifest#1cardPlus_pass6> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a','b','c','d','e','f' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardPlus.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardPlus_pass6";
   mf:status mf:proposed;
   sht:result <validation/1cardPlus_pass6.val> .

<validation/manifest#1cardStar_pass0> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .* } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardStar.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardStar_pass0";
   mf:status mf:proposed;
   sht:result <validation/1cardStar_pass0.val> .

<validation/manifest#1cardStar_pass1> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .* } on { <s> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardStar.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardStar_pass1";
   mf:status mf:proposed;
   sht:result <validation/1cardStar_pass1.val> .

<validation/manifest#1cardStar_pass2> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .* } on { <s> <p1> 'a','b' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardStar.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardStar_pass2";
   mf:status mf:proposed;
   sht:result <validation/1cardStar_pass2.val> .

<validation/manifest#1cardStar_pass6> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .* } on { <s> <p1> 'a','b','c','d','e','f' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1cardStar.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1cardStar_pass6";
   mf:status mf:proposed;
   sht:result <validation/1cardStar_pass6.val> .

<validation/manifest#1datatypeLength_fail-long> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p1> 123456 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT123456.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatypeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatypeLength_fail-long";
   mf:status mf:proposed .

<validation/manifest#1datatypeLength_fail-missing> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p2> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatypeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatypeLength_fail-missing";
   mf:status mf:proposed .

<validation/manifest#1datatypeLength_fail-short> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p1> 1234 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT1234.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatypeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatypeLength_fail-short";
   mf:status mf:proposed .

<validation/manifest#1datatypeLength_fail-wrongDatatype> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p1> 1.234 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_234.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatypeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatypeLength_fail-wrongDatatype";
   mf:status mf:proposed .

<validation/manifest#1datatypeLength_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p1> 12345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT12345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatypeLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatypeLength_pass";
   mf:status mf:proposed;
   sht:result <validation/1datatypeLength_pass.val> .

<validation/manifest#1datatypeRef1_fail-datatype> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> <dt1> @<S> } on <s> in { <s> <p1> 'ab'^^<dt1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_dt1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatypeRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatypeRef1_fail-datatype";
   mf:status mf:proposed .

<validation/manifest#1datatypeRef1_fail-reflexiveRef> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> <dt1> } on <s> in { <n1> <p1> <n1> }";
   mf:action [
     sht:data <validation/In1_Ip1_In1.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1datatypeRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatypeRef1_fail-reflexiveRef";
   mf:status mf:proposed .

<validation/manifest#1datatype_langString> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s1> <p1> 'ab'@en }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabLTen.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatype_langString";
   mf:status mf:proposed .

<validation/manifest#1datatype_missing> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s> <p2> \"ab\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatype_missing";
   mf:status mf:proposed .

<validation/manifest#1datatype_nonLiteral> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s1> <p1> <dt1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Idt1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatype_nonLiteral";
   mf:status mf:proposed .

<validation/manifest#1datatype_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s> <p1> 'ab'^^<dt1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_dt1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatype_pass";
   mf:status mf:proposed;
   sht:result <validation/1datatype_pass.val> .

<validation/manifest#1datatype_wrongDatatype> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s> <p1> 1.234 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_234.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatype_wrongDatatype";
   mf:status mf:proposed .

<validation/manifest#1datatypelangString_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> rdf:langString } on <s> in { <s> <p1> 'ab'@en }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabLTen.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1datatypelangString.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1datatypelangString_pass";
   mf:status mf:proposed;
   sht:result <validation/1datatypelangString_pass.val> .

<validation/manifest#1decimalMaxexclusiveDECIMAL_fail-decimal-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveDECIMAL_fail-decimal-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxexclusiveDECIMAL_fail-decimal-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveDECIMAL_fail-decimal-high";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxexclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveDECIMAL_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxexclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveDECIMAL_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxexclusiveDECIMAL_pass-decimal-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveDECIMAL_pass-decimal-low";
   mf:status mf:proposed;
   sht:result <validation/1decimalMaxexclusiveDECIMAL_pass-decimal-low.val> .

<validation/manifest#1decimalMaxexclusiveDOUBLE_fail-decimal-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 5.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveDOUBLE_fail-decimal-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxexclusiveDOUBLE_fail-decimal-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveDOUBLE_fail-decimal-high";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxexclusiveDOUBLE_pass-decimal-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveDOUBLE_pass-decimal-low";
   mf:status mf:proposed;
   sht:result <validation/1decimalMaxexclusiveDOUBLE_pass-decimal-low.val> .

<validation/manifest#1decimalMaxexclusiveINTEGER_fail-decimal-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveINTEGER_fail-decimal-high";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxexclusiveINTEGER_pass-decimal-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusiveINTEGER_pass-decimal-low";
   mf:status mf:proposed;
   sht:result <validation/1decimalMaxexclusiveINTEGER_pass-decimal-low.val> .

<validation/manifest#1decimalMaxexclusivexsd-byte_fail-byte-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5 } / { <s1> <p1> '5'^^<http://www.w3.org/2001/XMLSchema#byte> }";
   mf:action [
     sht:data <validation/Is1_Ip1_BYT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusivexsd-byte.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusivexsd-byte_fail-byte-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxexclusivexsd-decimal_fail-decimal-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE \"5.5\"^^<http://www.w3.org/2001/XMLSchema#decimal> } / { <s1> <p1> 5.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxexclusivexsd-decimal.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxexclusivexsd-decimal_fail-decimal-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxinclusiveDECIMAL_fail-decimal-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveDECIMAL_fail-decimal-high";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxinclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveDECIMAL_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxinclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveDECIMAL_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxinclusiveDECIMAL_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveDECIMAL_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1decimalMaxinclusiveDECIMAL_pass-decimal-equal.val> .

<validation/manifest#1decimalMaxinclusiveDECIMAL_pass-decimal-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveDECIMAL_pass-decimal-low";
   mf:status mf:proposed;
   sht:result <validation/1decimalMaxinclusiveDECIMAL_pass-decimal-low.val> .

<validation/manifest#1decimalMaxinclusiveDOUBLE_fail-decimal-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveDOUBLE_fail-decimal-high";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxinclusiveDOUBLE_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 5.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveDOUBLE_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1decimalMaxinclusiveDOUBLE_pass-decimal-equal.val> .

<validation/manifest#1decimalMaxinclusiveDOUBLE_pass-decimal-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveDOUBLE_pass-decimal-low";
   mf:status mf:proposed;
   sht:result <validation/1decimalMaxinclusiveDOUBLE_pass-decimal-low.val> .

<validation/manifest#1decimalMaxinclusiveINTEGER_fail-decimal-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveINTEGER_fail-decimal-high";
   mf:status mf:proposed .

<validation/manifest#1decimalMaxinclusiveINTEGER_pass-decimal-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMaxinclusiveINTEGER_pass-decimal-low";
   mf:status mf:proposed;
   sht:result <validation/1decimalMaxinclusiveINTEGER_pass-decimal-low.val> .

<validation/manifest#1decimalMinexclusiveDECIMAL_fail-decimal-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveDECIMAL_fail-decimal-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMinexclusiveDECIMAL_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveDECIMAL_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMinexclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveDECIMAL_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMinexclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveDECIMAL_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMinexclusiveDECIMAL_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveDECIMAL_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMinexclusiveDECIMAL_pass-decimal-high.val> .

<validation/manifest#1decimalMinexclusiveDOUBLE_fail-decimal-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveDOUBLE_fail-decimal-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMinexclusiveDOUBLE_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveDOUBLE_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMinexclusiveDOUBLE_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveDOUBLE_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMinexclusiveDOUBLE_pass-decimal-high.val> .

<validation/manifest#1decimalMinexclusiveINTEGER_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 5 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveINTEGER_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMinexclusiveINTEGER_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 5 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMinexclusiveINTEGER_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMinexclusiveINTEGER_pass-decimal-high.val> .

<validation/manifest#1decimalMininclusiveDECIMALLeadTrail_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMALLeadTrail_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50 } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equal.val> .

<validation/manifest#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50 } / { <s1> <p1> 04.50 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC04_50.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equalLeadTrail.val> .

<validation/manifest#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMALLeadTrail_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDECIMALLeadTrail_pass-decimal-high.val> .

<validation/manifest#1decimalMininclusiveDECIMAL_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMAL_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMAL_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMAL_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveDECIMAL_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMAL_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDECIMAL_pass-decimal-equal.val> .

<validation/manifest#1decimalMininclusiveDECIMAL_pass-decimal-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 04.50 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC04_50.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMAL_pass-decimal-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDECIMAL_pass-decimal-equalLeadTrail.val> .

<validation/manifest#1decimalMininclusiveDECIMAL_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMAL_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDECIMAL_pass-decimal-high.val> .

<validation/manifest#1decimalMininclusiveDECIMALintLeadTrail_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05.00 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMALintLeadTrail_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveDECIMALintLeadTrail_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05.00 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDECIMALintLeadTrail_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDECIMALintLeadTrail_pass-decimal-high.val> .

<validation/manifest#1decimalMininclusiveDOUBLELeadTrail_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50e0 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLELeadTrail_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50e0 } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equal.val> .

<validation/manifest#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50e0 } / { <s1> <p1> 04.50 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC04_50.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equalLeadTrail.val> .

<validation/manifest#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50e0 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLELeadTrail_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDOUBLELeadTrail_pass-decimal-high.val> .

<validation/manifest#1decimalMininclusiveDOUBLE_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5e0 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLE_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveDOUBLE_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5e0 } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLE_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDOUBLE_pass-decimal-equal.val> .

<validation/manifest#1decimalMininclusiveDOUBLE_pass-decimal-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5e0 } / { <s1> <p1> 04.50 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC04_50.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLE_pass-decimal-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDOUBLE_pass-decimal-equalLeadTrail.val> .

<validation/manifest#1decimalMininclusiveDOUBLEintLeadTrail_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05.00e0 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLEintLeadTrail_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveDOUBLEintLeadTrail_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05.00e0 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveDOUBLEintLeadTrail_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveDOUBLEintLeadTrail_pass-decimal-high.val> .

<validation/manifest#1decimalMininclusiveINTEGERLead_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveINTEGERLead_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveINTEGERLead_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveINTEGERLead_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveINTEGERLead_pass-decimal-high.val> .

<validation/manifest#1decimalMininclusiveINTEGER_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 5 } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveINTEGER_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusiveINTEGER_pass-decimal-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 5 } / { <s1> <p1> 5.6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusiveINTEGER_pass-decimal-high";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusiveINTEGER_pass-decimal-high.val> .

<validation/manifest#1decimalMininclusivexsd-decimal_fail-decimal-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#decimal> } / { <s1> <p1> 4.4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusivexsd-decimal.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusivexsd-decimal_fail-decimal-low";
   mf:status mf:proposed .

<validation/manifest#1decimalMininclusivexsd-decimal_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#decimal> } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1decimalMininclusivexsd-decimal.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1decimalMininclusivexsd-decimal_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1decimalMininclusivexsd-decimal_pass-decimal-equal.val> .

<validation/manifest#1dot-base_fail-empty> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> . } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot-base.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot-base_fail-empty";
   mf:status mf:proposed .

<validation/manifest#1dot-base_fail-missing> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> . } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot-base.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot-base_fail-missing";
   mf:status mf:proposed .

<validation/manifest#1dot-base_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot-base.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot-base_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotAnnot3_missing> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .; <a1> '1'; <a1> '2'; <a1> '3'; } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotAnnot3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotAnnot3_missing";
   mf:status mf:proposed .

<validation/manifest#1dotAnnot3_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .; <a1> '1'; <a1> '2'; <a1> '3'; } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotAnnot3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotAnnot3_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotAnnot3_pass.val> .

<validation/manifest#1dotAnnotAIRIREF_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .; a <IRIREF> } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotAnnotAIRIREF.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotAnnotAIRIREF_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotAnnotAIRIREF_pass.val> .

<validation/manifest#1dotAnnotIRIREF_missing> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .; <annot> <IRIREF> } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotAnnotIRIREF.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotAnnotIRIREF_missing";
   mf:status mf:proposed .

<validation/manifest#1dotAnnotIRIREF_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .; <annot> <IRIREF> } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotAnnotIRIREF.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotAnnotIRIREF_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotAnnotIRIREF_pass.val> .

<validation/manifest#1dotAnnotSTRING_LITERAL1_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .; <annot> 'STRING_LITERAL1' } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotAnnotSTRING_LITERAL1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotAnnotSTRING_LITERAL1_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotAnnotSTRING_LITERAL1_pass.val> .

<validation/manifest#1dotClosed_fail_higher> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1>; <p2> <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1;Ip2_Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotClosed.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotClosed_fail_higher";
   mf:status mf:proposed .

<validation/manifest#1dotClosed_fail_lower> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1>; <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip0_Io0;Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotClosed.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotClosed_fail_lower";
   mf:status mf:proposed .

<validation/manifest#1dotClosed_pass> a sht:ValidationTest;
   rdfs:comment "<S> CLOSED { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotClosed.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotClosed_pass";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotCode1_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . %<Test>{ print(o) %} } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotCode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotCode1_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotCode1_pass.val> .

<validation/manifest#1dotCode3_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . %<Test>{ print(s) %} %<Test>{ print(p) %} %<Test>{ print(o) %} } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotCode3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotCode3_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotCode3_pass.val> .

<validation/manifest#1dotCode3fail_abort> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> . %<Test>{ print(s) %}%<Test>{ fail(s) %}%<Test>{ print(o) %} } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotCode3fail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotCode3fail_abort";
   mf:status mf:proposed .

<validation/manifest#1dotCodeWithEscapes1_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . %<Test>{ print(o) %} } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotCodeWithEscapes1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotCodeWithEscapes1_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotCodeWithEscapes1_pass.val> .

<validation/manifest#1dotExtra1_fail-iri2> a sht:ValidationFailure;
   rdfs:comment "<S> EXTRA <p1> { <p1> . } on { <s> <p1> <o1>, <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1,Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotExtra1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotExtra1_fail-iri2";
   mf:status mf:proposed .

<validation/manifest#1dotExtra1_pass-iri1> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotExtra1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotExtra1_pass-iri1";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotInline1_missingReferent> a sht:ValidationFailure;
   rdfs:comment "<n2> in { <n1> <p1> <n2> } as <S1> in <S1> { <p1> { <p2> . } }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotInline1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotInline1_missingReferent";
   mf:status mf:proposed .

<validation/manifest#1dotInline1_missingSelfReference> a sht:ValidationFailure;
   rdfs:comment "<n2> in { <n1> <p1> <n1> . <n2> <p2> \"X\" } as <S1> in <S1> { <p1> { <p2> . } }";
   mf:action [
     sht:data <validation/In1_Ip1_In1.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotInline1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotInline1_missingSelfReference";
   mf:status mf:proposed .

<validation/manifest#1dotInline1_overMatchesReferent> a sht:ValidationTest;
   rdfs:comment "<n2> in { <n1> <p1> <n2> . <n2> <p2> \"X\" . <n3> <p1> \"X\" } as <S1> in <S1> { <p1> { <p2> . } }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.In3_Ip1_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotInline1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotInline1_overMatchesReferent";
   mf:status mf:proposed;
   sht:result <validation/1dotInline1_In1_Ip1_In2.In2_Ip2_LX.val> .

<validation/manifest#1dotInline1_overReferrer> a sht:ValidationFailure;
   rdfs:comment "<n2> in { <n1> <p1> <n2>, <n3> . <n2> <p2> \"X\" } as <S1> in <S1> { <p1> { <p2> . } }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In1_Ip1_In3.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotInline1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotInline1_overReferrer";
   mf:status mf:proposed .

<validation/manifest#1dotInline1_overReferrer,overReferent> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> { <p2> . } } on { <n1> <p1> <n2>, <n3> . <n2> <p2> \"X\" . <n3> <p2> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In1_Ip1_In3.In2_Ip2_LX.In3_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotInline1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotInline1_overReferrer,overReferent";
   mf:status mf:proposed .

<validation/manifest#1dotInline1_referrer,referent> a sht:ValidationTest;
   rdfs:comment "<n2> in { <n1> <p1> <n2> . <n2> <p2> \"X\" } as <S1> in <S1> { <p1> { <p2> . } }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotInline1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotInline1_referrer,referent";
   mf:status mf:proposed;
   sht:result <validation/1dotInline1_In1_Ip1_In2.In2_Ip2_LX.val> .

<validation/manifest#1dotInline1_selfReference> a sht:ValidationTest;
   rdfs:comment "<n2> in { <n1> <p1> <n1> . <n1> <p2> \"X\" } as <S1> in <S1> { <p1> { <p2> . } }";
   mf:action [
     sht:data <validation/In1_Ip1_In1.In1_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotInline1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotInline1_selfReference";
   mf:status mf:proposed;
   sht:result <validation/1dotInline1_In1_Ip1_In1.In1_Ip2_LX.val> .

<validation/manifest#1dotLNdefault_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "PREFIX : <http://a.example/> :S1 { :p1 . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotLNdefault.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotLNdefault_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotLNex-HYPHEN_MINUS_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "PREFIX ex: <http://a.example/> ex:S1 { ex:p1- . } on { <s> <p1-> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1HYPHEN_MINUS_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotLNex-HYPHEN_MINUS.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotLNex-HYPHEN_MINUS_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1HYPHEN_MINUSdot_pass.val> .

<validation/manifest#1dotLNexComment_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "PREFIX ex: <http://a.example/> ex:S1 { ex:p1/*comment*/ . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotLNexComment.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotLNexComment_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotLNex_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "PREFIX ex: <http://a.example/> ex:S1 { ex:p1 . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotLNex.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotLNex_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotNS2Comment_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "PREFIX S1: <http://a.example/S1> PREFIX p1: <http://a.example/p1> S1: { p1:/*comment*/ . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotNS2Comment.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotNS2Comment_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotNS2_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "PREFIX S1: <http://a.example/S1> PREFIX p1: <http://a.example/p1> S1: { p1: . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotNS2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotNS2_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotNSdefault_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "PREFIX : <http://a.example/p1> <S1> { : . } on { <s> :p1 <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotNSdefault.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotNSdefault_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotNoCode1_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . %<Test>% } + %<Test>{ print(o) %} on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotNoCode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotNoCode1_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotNoCode1_pass.val> .

<validation/manifest#1dotNoCode3_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . %<Test#a>% %<Test#b>% %<Test#c>% } + %<Test/#a>{ print(s) %} %<Test/#b>{ print(p) %} %<Test/#c>{ print(o) %} on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotNoCode3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotNoCode3_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotNoCode3_pass.val> .

<validation/manifest#1dotOne2dot-oneOf_fail_p1p2p3> a sht:ValidationFailure;
   rdfs:comment ":S1 {:p1 .|:p2 .,:p3 .} / { :s1 :p1 \"p1-0\"; :p2 \"p2-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p1p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/1dotOne2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotOne2dot-oneOf_fail_p1p2p3";
   mf:status mf:proposed .

<validation/manifest#1dotOne2dot-someOf_fail_p1p2p3> a sht:ValidationFailure;
   rdfs:comment ":S1 {:p1 .|:p2 .,:p3 .} / { :s1 :p1 \"p1-0\"; :p2 \"p2-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p1p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/1dotOne2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotOne2dot-someOf_fail_p1p2p3";
   mf:status mf:proposed .

<validation/manifest#1dotOne2dotExtra-someOf_pass_p1p2p3> a sht:ValidationFailure;
   rdfs:comment ":S1 EXTRA <p1> <p2> <p3> {:p1 .|:p2 .,:p3 .} / { :s1 :p1 \"p1-0\"; :p2 \"p2-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p1p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/1dotOne2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotOne2dotExtra-someOf_pass_p1p2p3";
   mf:status mf:proposed .

<validation/manifest#1dotOne2dot_pass_p1> a sht:ValidationTest;
   rdfs:comment ":S1 {:p1 .|:p2 .,:p3 .} / { :s1 :p1 \"p1-0\" . }";
   mf:action [
     sht:data <validation/p1.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/1dotOne2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotOne2dot_pass_p1";
   mf:status mf:proposed;
   sht:result <validation/1dotOne2dot_pass_p1.val> .

<validation/manifest#1dotOne2dot_pass_p2p3> a sht:ValidationTest;
   rdfs:comment ":S1 {:p1 .|:p2 .,:p3 .} / { :s1 :p2 \"p2-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/1dotOne2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotOne2dot_pass_p2p3";
   mf:status mf:proposed;
   sht:result <validation/1dotOne2dot_pass_p2p3.val> .

<validation/manifest#1dotPlusAnnotIRIREF_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .+; <annot> <IRIREF> } on { <s1> <p1> 'a', <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotPlusAnnotIRIREF.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotPlusAnnotIRIREF_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotPlusAnnotIRIREF_pass.val> .

<validation/manifest#1dotRef1_missingReferent> a sht:ValidationFailure;
   rdfs:comment "<n1> in { <n1> <p1> <n2> } as <S1> in <S1> { <p1> @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRef1_missingReferent";
   mf:status mf:proposed .

<validation/manifest#1dotRef1_missingSelfReference> a sht:ValidationFailure;
   rdfs:comment "<n1> in { <n1> <p1> <n1> . <n2> <p2> \"X\" } as <S1> in <S1> { <p1> @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In1.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRef1_missingSelfReference";
   mf:status mf:proposed .

<validation/manifest#1dotRef1_overMatchesReferent> a sht:ValidationTest;
   rdfs:comment "<n1> in { <n1> <p1> <n2> . <n2> <p2> \"X\" . <n3> <p1> \"X\" } as <S1> in <S1> { <p1> @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.In3_Ip1_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRef1_overMatchesReferent";
   mf:status mf:proposed;
   sht:result <validation/In2_Ip2_In1@In1_Ip1_LX.val> .

<validation/manifest#1dotRef1_overReferrer> a sht:ValidationFailure;
   rdfs:comment "<n1> in { <n1> <p1> <n2>, <n3> . <n2> <p2> \"X\" } as <S1> in <S1> { <p1> @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In1_Ip1_In3.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRef1_overReferrer";
   mf:status mf:proposed .

<validation/manifest#1dotRef1_overReferrer,overReferent> a sht:ValidationFailure;
   rdfs:comment "<n1> in { <n1> <p1> <n2>, <n3> . <n2> <p2> \"X\" . <n3> <p2> \"X\" } as <S1> in <S1> { <p1> @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In1_Ip1_In3.In2_Ip2_LX.In3_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRef1_overReferrer,overReferent";
   mf:status mf:proposed .

<validation/manifest#1dotRef1_referent,referrer> a sht:ValidationTest;
   rdfs:comment "<n2> in { <n2> <p2> \"X\" . <n1> <p1> <n2> } as <S1> in <S1> { <p1> @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In2_Ip2_LX.In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRef1_referent,referrer";
   mf:status mf:proposed;
   sht:result <validation/In2_Ip2_In1@In1_Ip1_LX.val> .

<validation/manifest#1dotRef1_referrer,referent> a sht:ValidationTest;
   rdfs:comment "<n1> in { <n1> <p1> <n2> . <n2> <p2> \"X\" } as <S1> in <S1> { <p1> @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRef1_referrer,referent";
   mf:status mf:proposed;
   sht:result <validation/In2_Ip2_In1@In1_Ip1_LX.val> .

<validation/manifest#1dotRef1_selfReference> a sht:ValidationTest;
   rdfs:comment "<n1> in { <n1> <p1> <n1> . <n1> <p2> \"X\" } as <S1> in <S1> { <p1> @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In1.In1_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRef1_selfReference";
   mf:status mf:proposed;
   sht:result <validation/1dotRef1_selfReference.val> .

<validation/manifest#1dotRefAND3_failAll> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> @<S2> AND @<S3> AND @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <n1> <p1> <n2> }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefAND3_failAll";
   mf:status mf:proposed .

<validation/manifest#1dotRefAND3_failShape1Shape2> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> @<S2> AND @<S3> AND @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <s1> <p1> <n4> . <n4> <p4> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In4.In4_Ip4_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefAND3_failShape1Shape2";
   mf:status mf:proposed .

<validation/manifest#1dotRefAND3_failShape1Shape3> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> @<S2> AND @<S3> AND @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <s1> <p1> <n3> . <n3> <p3> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In3.In3_Ip3_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefAND3_failShape1Shape3";
   mf:status mf:proposed .

<validation/manifest#1dotRefAND3_failShape2Shape3> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> @<S2> AND @<S3> AND @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <s1> <p1> <n2> . <n2> <p2> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefAND3_failShape2Shape3";
   mf:status mf:proposed .

<validation/manifest#1dotRefAND3_passShape1Shape2Shape3> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> @<S2> AND @<S3> AND @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <s1> <p1> <s2>, <s3>, <s4> . <s2> <p2> \"X\" . <s3> <p3> \"X\" . <s4> <p4> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ipx_LXX3.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefAND3_passShape1Shape2Shape3";
   mf:status mf:proposed;
   sht:result <validation/1dotRefAND3_passShape1Shape2Shape3.val> .

<validation/manifest#1dotRefOR3_fail> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> @<S2> OR @<S3> OR @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <n1> <p1> <n2> }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefOR3_fail";
   mf:status mf:proposed .

<validation/manifest#1dotRefOR3_passShape1> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> @<S2> OR @<S3> OR @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <s1> <p1> <n2> . <n2> <p2> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefOR3_passShape1";
   mf:status mf:proposed;
   sht:result <validation/1dotRefOR3_passShape1.val> .

<validation/manifest#1dotRefOR3_passShape1Shape2Shape3> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> @<S2> OR @<S3> OR @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <s1> <p1> <s2>, <s3>, <s4> . <s2> <p2> \"X\" . <s3> <p3> \"X\" . <s4> <p4> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ipx_LXX3.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefOR3_passShape1Shape2Shape3";
   mf:status mf:proposed;
   sht:result <validation/1dotRefOR3_passShape1.val> .

<validation/manifest#1dotRefOR3_passShape2> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> @<S2> OR @<S3> OR @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <s1> <p1> <n3> . <n3> <p3> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In3.In3_Ip3_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefOR3_passShape2";
   mf:status mf:proposed;
   sht:result <validation/1dotRefOR3_passShape2.val> .

<validation/manifest#1dotRefOR3_passShape3> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> @<S2> OR @<S3> OR @<S4> } <S2> { <p2> . } <S3> { <p3> . } <S4> { <p4> . } on { <s1> <p1> <n4> . <n4> <p4> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In4.In4_Ip4_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotRefOR3_passShape3";
   mf:status mf:proposed;
   sht:result <validation/1dotRefOR3_passShape3.val> .

<validation/manifest#1dotSemi_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "PREFIX : <http://a.example/> <S1> { :p1 ., } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotSemi.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotSemi_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dotShapeAND1dot3X_fail> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> . } AND { <p2> . } AND { <p3> . } on { <s1> <p1> <s2>, <s3>, <s4> . <s2> <p2> \"X\" . <s3> <p3> \"X\" . <s4> <p4> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ipx_LXX3.ttl>;
     sht:focus <http://a.example/n2>;
     sht:schema <schemas/1dotShapeAND1dot3X.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotShapeAND1dot3X_fail";
   mf:status mf:proposed .

<validation/manifest#1dotShapeAND1dot3X_pass> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> . } AND { <p2> . } AND { <p3> . } on { <s1> <p1> 'X'; <p2> 'X'; <p3> 'X' }";
   mf:action [
     sht:data <validation/In1_Ipx_LXX3.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1dotShapeAND1dot3X.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotShapeAND1dot3X_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotShapeAND1dot3X_pass.val> .

<validation/manifest#1dotShapeCode1_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . } %<Test>{ print(\"shape action\") %} on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotShapeCode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotShapeCode1_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotShapeCode1_pass.val> .

<validation/manifest#1dotShapeNoCode1_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . } %<Test>% + %<Test>{ print(o) %} on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dotShapeNoCode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dotShapeNoCode1_pass";
   mf:status mf:proposed;
   sht:result <validation/1dotShapeNoCode1_pass.val> .

<validation/manifest#1dot_fail-empty> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> . } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot_fail-empty";
   mf:status mf:proposed .

<validation/manifest#1dot_fail-empty-err> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> . } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot_fail-empty-err";
   mf:status mf:proposed;
   sht:result <validation/1dot_empty.err> .

<validation/manifest#1dot_fail-missing> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> . } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot_fail-missing";
   mf:status mf:proposed .

<validation/manifest#1dot_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dot_pass-others_lexicallyEarlier> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . } on { <s> <p0> <o0>; <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip0_Io0;Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot_pass-others_lexicallyEarlier";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1dot_pass-others_lexicallyLater> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1>; <p2> <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1;Ip2_Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1dot_pass-others_lexicallyLater";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#1doubleMaxexclusiveDECIMALLeadTrail_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05.50 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDECIMALLeadTrail_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDECIMAL_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDECIMAL_fail-double-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDECIMAL_fail-double-high";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDECIMAL_pass-double-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDECIMAL_pass-double-low";
   mf:status mf:proposed;
   sht:result <validation/1doubleMaxexclusiveDECIMAL_pass-double-low.val> .

<validation/manifest#1doubleMaxexclusiveDECIMALintLeadTrail_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05.00 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDECIMALintLeadTrail_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDECIMALint_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.0 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDECIMALint_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDOUBLELeadTrail_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05.50e0 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDOUBLELeadTrail_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDOUBLE_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDOUBLE_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDOUBLE_fail-double-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDOUBLE_fail-double-high";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDOUBLE_pass-double-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDOUBLE_pass-double-low";
   mf:status mf:proposed;
   sht:result <validation/1doubleMaxexclusiveDOUBLE_pass-double-low.val> .

<validation/manifest#1doubleMaxexclusiveDOUBLEintLeadTrail_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05.00e0 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDOUBLEintLeadTrail_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveDOUBLEint_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.0e0 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveDOUBLEint_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveINTEGERLead_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveINTEGERLead_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveINTEGER_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveINTEGER_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveINTEGER_fail-double-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveINTEGER_fail-double-high";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxexclusiveINTEGER_pass-double-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxexclusiveINTEGER_pass-double-low";
   mf:status mf:proposed;
   sht:result <validation/1doubleMaxexclusiveINTEGER_pass-double-low.val> .

<validation/manifest#1doubleMaxinclusiveDECIMAL_fail-double-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveDECIMAL_fail-double-high";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxinclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveDECIMAL_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxinclusiveDECIMAL_pass-double-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveDECIMAL_pass-double-equal";
   mf:status mf:proposed;
   sht:result <validation/1doubleMaxinclusiveDECIMAL_pass-double-equal.val> .

<validation/manifest#1doubleMaxinclusiveDECIMAL_pass-double-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveDECIMAL_pass-double-low";
   mf:status mf:proposed;
   sht:result <validation/1doubleMaxinclusiveDECIMAL_pass-double-low.val> .

<validation/manifest#1doubleMaxinclusiveDOUBLE_fail-double-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveDOUBLE_fail-double-high";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxinclusiveDOUBLE_pass-double-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveDOUBLE_pass-double-equal";
   mf:status mf:proposed;
   sht:result <validation/1doubleMaxinclusiveDOUBLE_pass-double-equal.val> .

<validation/manifest#1doubleMaxinclusiveDOUBLE_pass-double-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveDOUBLE_pass-double-low";
   mf:status mf:proposed;
   sht:result <validation/1doubleMaxinclusiveDOUBLE_pass-double-low.val> .

<validation/manifest#1doubleMaxinclusiveINTEGER_fail-double-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveINTEGER_fail-double-high";
   mf:status mf:proposed .

<validation/manifest#1doubleMaxinclusiveINTEGER_pass-double-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMaxinclusiveINTEGER_pass-double-low";
   mf:status mf:proposed;
   sht:result <validation/1doubleMaxinclusiveINTEGER_pass-double-low.val> .

<validation/manifest#1doubleMinexclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveDECIMAL_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMinexclusiveDECIMAL_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveDECIMAL_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMinexclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveDECIMAL_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMinexclusiveDECIMAL_pass-double-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveDECIMAL_pass-double-high";
   mf:status mf:proposed;
   sht:result <validation/1doubleMinexclusiveDECIMAL_pass-double-high.val> .

<validation/manifest#1doubleMinexclusiveDOUBLE_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveDOUBLE_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1doubleMinexclusiveDOUBLE_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveDOUBLE_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMinexclusiveDOUBLE_pass-double-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveDOUBLE_pass-double-high";
   mf:status mf:proposed;
   sht:result <validation/1doubleMinexclusiveDOUBLE_pass-double-high.val> .

<validation/manifest#1doubleMinexclusiveINTEGER_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 5 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveINTEGER_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMinexclusiveINTEGER_pass-double-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 5 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMinexclusiveINTEGER_pass-double-high";
   mf:status mf:proposed;
   sht:result <validation/1doubleMinexclusiveINTEGER_pass-double-high.val> .

<validation/manifest#1doubleMininclusiveDECIMALLeadTrail_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDECIMALLeadTrail_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMininclusiveDECIMALLeadTrail_pass-double-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDECIMALLeadTrail_pass-double-equal";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDECIMALLeadTrail_pass-double-equal.val> .

<validation/manifest#1doubleMininclusiveDECIMALLeadTrail_pass-double-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50 } / { <s1> <p1> 04.50e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL04_50e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDECIMALLeadTrail_pass-double-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDECIMALLeadTrail_pass-double-equalLeadTrail.val> .

<validation/manifest#1doubleMininclusiveDECIMALLeadTrail_pass-double-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDECIMALLeadTrail_pass-double-high";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDECIMALLeadTrail_pass-double-high.val> .

<validation/manifest#1doubleMininclusiveDECIMAL_pass-double-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 4.5 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDECIMAL_pass-double-equal";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDECIMAL_pass-double-equal.val> .

<validation/manifest#1doubleMininclusiveDECIMAL_pass-double-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 4.5 } / { <s1> <p1> 04.50e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL04_50e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDECIMAL_pass-double-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDECIMAL_pass-double-equalLeadTrail.val> .

<validation/manifest#1doubleMininclusiveDECIMALintLeadTrail_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05.00 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDECIMALintLeadTrail_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMininclusiveDECIMALintLeadTrail_pass-double-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05.00 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDECIMALintLeadTrail_pass-double-high";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDECIMALintLeadTrail_pass-double-high.val> .

<validation/manifest#1doubleMininclusiveDOUBLELeadTrail_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50e0 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDOUBLELeadTrail_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMininclusiveDOUBLELeadTrail_pass-double-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50e0 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDOUBLELeadTrail_pass-double-equal";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDOUBLELeadTrail_pass-double-equal.val> .

<validation/manifest#1doubleMininclusiveDOUBLELeadTrail_pass-double-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50e0 } / { <s1> <p1> 04.50e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL04_50e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDOUBLELeadTrail_pass-double-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDOUBLELeadTrail_pass-double-equalLeadTrail.val> .

<validation/manifest#1doubleMininclusiveDOUBLELeadTrail_pass-double-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50e0 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDOUBLELeadTrail_pass-double-high";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDOUBLELeadTrail_pass-double-high.val> .

<validation/manifest#1doubleMininclusiveDOUBLE_pass-double-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 4.5e0 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDOUBLE_pass-double-equal";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDOUBLE_pass-double-equal.val> .

<validation/manifest#1doubleMininclusiveDOUBLE_pass-double-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 4.5e0 } / { <s1> <p1> 04.50e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL04_50e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDOUBLE_pass-double-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDOUBLE_pass-double-equalLeadTrail.val> .

<validation/manifest#1doubleMininclusiveDOUBLEintLeadTrail_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05.00e0 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDOUBLEintLeadTrail_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMininclusiveDOUBLEintLeadTrail_pass-double-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05.00e0 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveDOUBLEintLeadTrail_pass-double-high";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveDOUBLEintLeadTrail_pass-double-high.val> .

<validation/manifest#1doubleMininclusiveINTEGERLead_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05 } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveINTEGERLead_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMininclusiveINTEGERLead_pass-double-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05 } / { <s1> <p1> 5.6e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_6e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusiveINTEGERLead_pass-double-high";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusiveINTEGERLead_pass-double-high.val> .

<validation/manifest#1doubleMininclusivexsd-double_fail-double-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE \"4.5e0\"^^<http://www.w3.org/2001/XMLSchema#double> } / { <s1> <p1> 4.4e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_4e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusivexsd-double.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusivexsd-double_fail-double-low";
   mf:status mf:proposed .

<validation/manifest#1doubleMininclusivexsd-double_pass-double-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE \"4.5e0\"^^<http://www.w3.org/2001/XMLSchema#double> } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1doubleMininclusivexsd-double.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1doubleMininclusivexsd-double_pass-double-equal";
   mf:status mf:proposed;
   sht:result <validation/1doubleMininclusivexsd-double_pass-double-equal.val> .

<validation/manifest#1floatMaxexclusiveDECIMAL_fail-float-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5.5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxexclusiveDECIMAL_fail-float-high";
   mf:status mf:proposed .

<validation/manifest#1floatMaxexclusiveDECIMAL_pass-float-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5.5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxexclusiveDECIMAL_pass-float-low";
   mf:status mf:proposed;
   sht:result <validation/1floatMaxexclusiveDECIMAL_pass-float-low.val> .

<validation/manifest#1floatMaxexclusiveDOUBLE_fail-float-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxexclusiveDOUBLE_fail-float-high";
   mf:status mf:proposed .

<validation/manifest#1floatMaxexclusiveDOUBLE_pass-float-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxexclusiveDOUBLE_pass-float-low";
   mf:status mf:proposed;
   sht:result <validation/1floatMaxexclusiveDOUBLE_pass-float-low.val> .

<validation/manifest#1floatMaxexclusiveINTEGER_fail-float-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxexclusiveINTEGER_fail-float-high";
   mf:status mf:proposed .

<validation/manifest#1floatMaxexclusiveINTEGER_pass-float-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxexclusiveINTEGER_pass-float-low";
   mf:status mf:proposed;
   sht:result <validation/1floatMaxexclusiveINTEGER_pass-float-low.val> .

<validation/manifest#1floatMaxinclusiveDECIMAL_fail-float-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusiveDECIMAL_fail-float-high";
   mf:status mf:proposed .

<validation/manifest#1floatMaxinclusiveDECIMAL_pass-float-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusiveDECIMAL_pass-float-equal";
   mf:status mf:proposed;
   sht:result <validation/1floatMaxinclusiveDECIMAL_pass-float-equal.val> .

<validation/manifest#1floatMaxinclusiveDECIMAL_pass-float-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusiveDECIMAL_pass-float-low";
   mf:status mf:proposed;
   sht:result <validation/1floatMaxinclusiveDECIMAL_pass-float-low.val> .

<validation/manifest#1floatMaxinclusiveDOUBLE_fail-float-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusiveDOUBLE_fail-float-high";
   mf:status mf:proposed .

<validation/manifest#1floatMaxinclusiveDOUBLE_pass-float-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5e0 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusiveDOUBLE_pass-float-equal";
   mf:status mf:proposed;
   sht:result <validation/1floatMaxinclusiveDOUBLE_pass-float-equal.val> .

<validation/manifest#1floatMaxinclusiveDOUBLE_pass-float-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusiveDOUBLE_pass-float-low";
   mf:status mf:proposed;
   sht:result <validation/1floatMaxinclusiveDOUBLE_pass-float-low.val> .

<validation/manifest#1floatMaxinclusiveINTEGER_fail-float-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusiveINTEGER_fail-float-high";
   mf:status mf:proposed .

<validation/manifest#1floatMaxinclusiveINTEGER_pass-float-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusiveINTEGER_pass-float-low";
   mf:status mf:proposed;
   sht:result <validation/1floatMaxinclusiveINTEGER_pass-float-low.val> .

<validation/manifest#1floatMaxinclusivexsd-float_fail-decimal-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE \"5.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> 5.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC5_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusivexsd-float.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusivexsd-float_fail-decimal-equal";
   mf:status mf:proposed .

<validation/manifest#1floatMaxinclusivexsd-float_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE \"5.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> 5.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL5_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMaxinclusivexsd-float.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMaxinclusivexsd-float_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1floatMinexclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusiveDECIMAL_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1floatMinexclusiveDECIMAL_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusiveDECIMAL_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMinexclusiveDECIMAL_pass-float-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusiveDECIMAL_pass-float-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMinexclusiveDECIMAL_pass-float-high.val> .

<validation/manifest#1floatMinexclusiveDOUBLE_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5e0 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusiveDOUBLE_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1floatMinexclusiveDOUBLE_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusiveDOUBLE_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMinexclusiveDOUBLE_pass-float-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusiveDOUBLE_pass-float-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMinexclusiveDOUBLE_pass-float-high.val> .

<validation/manifest#1floatMinexclusiveINTEGER_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusiveINTEGER_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMinexclusiveINTEGER_pass-float-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusiveINTEGER_pass-float-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMinexclusiveINTEGER_pass-float-high.val> .

<validation/manifest#1floatMinexclusivexsd-float_fail-decimal-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusivexsd-float.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusivexsd-float_fail-decimal-equal";
   mf:status mf:proposed .

<validation/manifest#1floatMinexclusivexsd-float_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMinexclusivexsd-float.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMinexclusivexsd-float_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1floatMininclusiveDECIMALLeadTrail_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDECIMALLeadTrail_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMininclusiveDECIMALLeadTrail_pass-float-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDECIMALLeadTrail_pass-float-equal";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDECIMALLeadTrail_pass-float-equal.val> .

<validation/manifest#1floatMininclusiveDECIMALLeadTrail_pass-float-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50 } / { <s1> <p1> '04.50'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT04_50.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDECIMALLeadTrail_pass-float-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDECIMALLeadTrail_pass-float-equalLeadTrail.val> .

<validation/manifest#1floatMininclusiveDECIMALLeadTrail_pass-float-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDECIMALLeadTrail_pass-float-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDECIMALLeadTrail_pass-float-high.val> .

<validation/manifest#1floatMininclusiveDECIMAL_pass-float-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDECIMAL_pass-float-equal";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDECIMAL_pass-float-equal.val> .

<validation/manifest#1floatMininclusiveDECIMAL_pass-float-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 4.5 } / { <s1> <p1> '04.50'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT04_50.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDECIMAL_pass-float-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDECIMAL_pass-float-equalLeadTrail.val> .

<validation/manifest#1floatMininclusiveDECIMALintLeadTrail_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05.00 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDECIMALintLeadTrail_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMininclusiveDECIMALintLeadTrail_pass-float-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05.00 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDECIMALintLeadTrail_pass-float-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDECIMALintLeadTrail_pass-float-high.val> .

<validation/manifest#1floatMininclusiveDOUBLELeadTrail_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDOUBLELeadTrail_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMininclusiveDOUBLELeadTrail_pass-float-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50e0 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDOUBLELeadTrail_pass-float-equal";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDOUBLELeadTrail_pass-float-equal.val> .

<validation/manifest#1floatMininclusiveDOUBLELeadTrail_pass-float-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50e0 } / { <s1> <p1> '04.50'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT04_50.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDOUBLELeadTrail_pass-float-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDOUBLELeadTrail_pass-float-equalLeadTrail.val> .

<validation/manifest#1floatMininclusiveDOUBLELeadTrail_pass-float-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDOUBLELeadTrail_pass-float-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDOUBLELeadTrail_pass-float-high.val> .

<validation/manifest#1floatMininclusiveDOUBLE_pass-float-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 4.5e0 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDOUBLE_pass-float-equal";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDOUBLE_pass-float-equal.val> .

<validation/manifest#1floatMininclusiveDOUBLE_pass-float-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 4.5e0 } / { <s1> <p1> '04.50'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT04_50.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDOUBLE_pass-float-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDOUBLE_pass-float-equalLeadTrail.val> .

<validation/manifest#1floatMininclusiveDOUBLEintLeadTrail_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05.00e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDOUBLEintLeadTrail_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMininclusiveDOUBLEintLeadTrail_pass-float-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05.00e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveDOUBLEintLeadTrail_pass-float-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveDOUBLEintLeadTrail_pass-float-high.val> .

<validation/manifest#1floatMininclusiveINTEGERLead_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveINTEGERLead_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMininclusiveINTEGERLead_pass-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '5'^^xsd:float }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveINTEGERLead_pass-equal";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveINTEGER_pass-equal.val> .

<validation/manifest#1floatMininclusiveINTEGERLead_pass-float-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveINTEGERLead_pass-float-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveINTEGERLead_pass-float-high.val> .

<validation/manifest#1floatMininclusiveINTEGER_fail-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '4.9'^^xsd:float }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_9.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveINTEGER_fail-low";
   mf:status mf:proposed .

<validation/manifest#1floatMininclusiveINTEGER_pass-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '05'^^xsd:float }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT05.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveINTEGER_pass-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveINTEGER_pass-equalLead.val> .

<validation/manifest#1floatMininclusiveINTEGER_pass-equalTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '5.0'^^xsd:float }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveINTEGER_pass-equalTrail";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveINTEGER_pass-equalTrail.val> .

<validation/manifest#1floatMininclusiveINTEGER_pass-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '5.1'^^xsd:float }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT5_1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusiveINTEGER_pass-high";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusiveINTEGER_pass-high.val> .

<validation/manifest#1floatMininclusivexsd-float_fail-float-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusivexsd-float.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusivexsd-float_fail-float-low";
   mf:status mf:proposed .

<validation/manifest#1floatMininclusivexsd-float_pass-float-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1floatMininclusivexsd-float.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1floatMininclusivexsd-float_pass-float-equal";
   mf:status mf:proposed;
   sht:result <validation/1floatMininclusivexsd-float_pass-float-equal.val> .

<validation/manifest#1focusBNODELength_dot_fail-iriFocusLabel-equal> a sht:ValidationFailure;
   rdfs:comment "<S> BNODE LENGTH 19 { <p1> . } on <s> in { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusBNODELength_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusBNODELength_dot_fail-iriFocusLabel-equal";
   mf:status mf:proposed .

<validation/manifest#1focusBNODELength_dot_fail-long> a sht:ValidationFailure;
   rdfs:comment "<S> BNODE LENGTH 19 { <p1> . } on <s> in { _:abcdefghijklmnopqrst <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrst_Ip1_Io1.ttl>;
     sht:focus _:b1478;
     sht:schema <schemas/1focusBNODELength_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusBNODELength_dot_fail-long";
   mf:status mf:proposed .

<validation/manifest#1focusBNODELength_dot_fail-short> a sht:ValidationFailure;
   rdfs:comment "<S> BNODE LENGTH 19 { <p1> . } on <s> in { _:abcd <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/1focusBNODELength_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusBNODELength_dot_fail-short";
   mf:status mf:proposed .

<validation/manifest#1focusBNODELength_dot_pass> a sht:ValidationTest;
   rdfs:comment "<S> BNODE LENGTH 19 { <p1> . } on <s> in { _:abcdefghijklmnopqrs <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrs_Ip1_Io1.ttl>;
     sht:focus _:b1441;
     sht:schema <schemas/1focusBNODELength_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusBNODELength_dot_pass";
   mf:status mf:proposed;
   sht:result <validation/1focusBNODE_dot_pass.val> .

<validation/manifest#1focusBNODE_dot_fail-iriFocusLabel-equal> a sht:ValidationFailure;
   rdfs:comment "<S> BNODE { <p1> . } on <s> in { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusBNODE_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusBNODE_dot_fail-iriFocusLabel-equal";
   mf:status mf:proposed .

<validation/manifest#1focusBNODE_dot_pass> a sht:ValidationTest;
   rdfs:comment "<S> BNODE { <p1> . } on <s> in { _:abcdefghijklmnopqrs <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrs_Ip1_Io1.ttl>;
     sht:focus _:b1441;
     sht:schema <schemas/1focusBNODE_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusBNODE_dot_pass";
   mf:status mf:proposed;
   sht:result <validation/1focusBNODE_dot_pass.val> .

<validation/manifest#1focusIRILength_dot_fail-bnodeFocusLabel-equal> a sht:ValidationFailure;
   rdfs:comment "<S> IRI LENGTH 19 { <p1> . } on <s> in { _:abcdefghijklmnopqrs <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrs_Ip1_Io1.ttl>;
     sht:focus _:b1441;
     sht:schema <schemas/1focusIRILength_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusIRILength_dot_fail-bnodeFocusLabel-equal";
   mf:status mf:proposed .

<validation/manifest#1focusIRILength_dot_fail-long> a sht:ValidationFailure;
   rdfs:comment "<S> IRI LENGTH 19 { <p1> . } on <s> in { <s1a> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1a_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1a>;
     sht:schema <schemas/1focusIRILength_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusIRILength_dot_fail-long";
   mf:status mf:proposed .

<validation/manifest#1focusIRILength_dot_fail-short> a sht:ValidationFailure;
   rdfs:comment "<S> IRI LENGTH 19 { <p1> . } on <s> in { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/1focusIRILength_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusIRILength_dot_fail-short";
   mf:status mf:proposed .

<validation/manifest#1focusIRILength_dot_pass> a sht:ValidationTest;
   rdfs:comment "<S> IRI LENGTH 19 { <p1> . } on <s> in { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusIRILength_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusIRILength_dot_pass";
   mf:status mf:proposed;
   sht:result <validation/1focus_dot_pass.val> .

<validation/manifest#1focusIRI_dot_fail-bnodeFocusLabel> a sht:ValidationFailure;
   rdfs:comment "<S> IRI { <p1> . } on <s> in { _:abcd <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/1focusIRI_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusIRI_dot_fail-bnodeFocusLabel";
   mf:status mf:proposed .

<validation/manifest#1focusIRI_dot_pass> a sht:ValidationTest;
   rdfs:comment "<S> IRI { <p1> . } on <s> in { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusIRI_dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusIRI_dot_pass";
   mf:status mf:proposed;
   sht:result <validation/1focus_dot_pass.val> .

<validation/manifest#1focusLength-dot_fail-bnode-long> a sht:ValidationFailure;
   rdfs:comment "<S1> LENGTH 19 { <p1> . } on { _:abcdefghijklmnopqrst <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrst_Ip1_Io1.ttl>;
     sht:focus _:b1478;
     sht:schema <schemas/1focusLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusLength-dot_fail-bnode-long";
   mf:status mf:proposed .

<validation/manifest#1focusLength-dot_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> LENGTH 19 { <p1> . } on { _:abcd <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/1focusLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusLength-dot_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1focusLength-dot_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> LENGTH 19 { <p1> . } on { <s1a> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1a_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1a>;
     sht:schema <schemas/1focusLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusLength-dot_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1focusLength-dot_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> LENGTH 19 { <p1> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/1focusLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusLength-dot_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1focusLength-dot_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> LENGTH 19 { <p1> . } on { _:abcdefghijklmnopqrs <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrs_Ip1_Io1.ttl>;
     sht:focus _:b1441;
     sht:schema <schemas/1focusLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusLength-dot_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1focusBNODE_dot_pass.val> .

<validation/manifest#1focusLength-dot_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> LENGTH 19 { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusLength-dot_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1focus_dot_pass.val> .

<validation/manifest#1focusMaxLength-dot_fail-bnode-long> a sht:ValidationFailure;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { <s1a> <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrst_Ip1_Io1.ttl>;
     sht:focus _:b1478;
     sht:schema <schemas/1focusMaxLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMaxLength-dot_fail-bnode-long";
   mf:status mf:proposed .

<validation/manifest#1focusMaxLength-dot_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { <s1a> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1a_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1a>;
     sht:schema <schemas/1focusMaxLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMaxLength-dot_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1focusMaxLength-dot_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { _:abcdefghijklmnopqrs <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrs_Ip1_Io1.ttl>;
     sht:focus _:b1441;
     sht:schema <schemas/1focusMaxLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMaxLength-dot_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1focusBNODE_dot_pass.val> .

<validation/manifest#1focusMaxLength-dot_pass-bnode-short> a sht:ValidationTest;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { _:abcd <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/1focusMaxLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMaxLength-dot_pass-bnode-short";
   mf:status mf:proposed;
   sht:result <validation/1abcd_pass.val> .

<validation/manifest#1focusMaxLength-dot_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusMaxLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMaxLength-dot_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1focus_dot_pass.val> .

<validation/manifest#1focusMaxLength-dot_pass-iri-short> a sht:ValidationTest;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/1focusMaxLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMaxLength-dot_pass-iri-short";
   mf:status mf:proposed;
   sht:result <validation/1s_pass.val> .

<validation/manifest#1focusMinLength-dot_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { _:abcd <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/1focusMinLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMinLength-dot_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1focusMinLength-dot_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/1focusMinLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMinLength-dot_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1focusMinLength-dot_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { _:abcdefghijklmnopqrs <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrs_Ip1_Io1.ttl>;
     sht:focus _:b1441;
     sht:schema <schemas/1focusMinLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMinLength-dot_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1focusBNODE_dot_pass.val> .

<validation/manifest#1focusMinLength-dot_pass-bnode-long> a sht:ValidationTest;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { <s1a> <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrst_Ip1_Io1.ttl>;
     sht:focus _:b1478;
     sht:schema <schemas/1focusMinLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMinLength-dot_pass-bnode-long";
   mf:status mf:proposed;
   sht:result <validation/1abcdefghijklmnopqrst_pass.val> .

<validation/manifest#1focusMinLength-dot_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusMinLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMinLength-dot_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1focus_dot_pass.val> .

<validation/manifest#1focusMinLength-dot_pass-iri-long> a sht:ValidationTest;
   rdfs:comment "<S1> MINLENGTH 19 { <p1> . } on { <s1a> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1a_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1a>;
     sht:schema <schemas/1focusMinLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusMinLength-dot_pass-iri-long";
   mf:status mf:proposed;
   sht:result <validation/1s1a_pass.val> .

<validation/manifest#1focusPattern-dot_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> PATTERN '^http://a.example/s1$' { <p1> } on { <s1a> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1a_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1a>;
     sht:schema <schemas/1focusPattern-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusPattern-dot_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1focusPattern-dot_fail-iri-match> a sht:ValidationFailure;
   rdfs:comment "<S1> PATTERN '^http://a.example/s1$' { <p1> } on { <s2> <p1> <o> }";
   mf:action [
     sht:data <validation/Is2_Ip1_Io.ttl>;
     sht:focus <http://a.example/s2>;
     sht:schema <schemas/1focusPattern-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusPattern-dot_fail-iri-match";
   mf:status mf:proposed .

<validation/manifest#1focusPattern-dot_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> PATTERN '^http://a.example/s1$' { <p1> } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/1focusPattern-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusPattern-dot_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1focusPattern-dot_pass-iri-match> a sht:ValidationTest;
   rdfs:comment "<S1> PATTERN 'http://a.example/s1' { <p1> } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusPattern-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusPattern-dot_pass-iri-match";
   mf:status mf:proposed;
   sht:result <validation/1focus_dot_pass.val> .

<validation/manifest#1focusPatternB-dot_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> PATTERN 'abcdefghijklmnopqrs' { <p1> } on { _:abcd <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcd_Ip1_Io1.ttl>;
     sht:focus _:g70322271129240;
     sht:schema <schemas/1focusPatternB-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusPatternB-dot_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1focusPatternB-dot_fail-iri-match> a sht:ValidationFailure;
   rdfs:comment "<S1> PATTERN 'abcdefghijklmnopqrs' { <p1> } on { <s2> <p1> <o> }";
   mf:action [
     sht:data <validation/Is2_Ip1_Io.ttl>;
     sht:focus <http://a.example/s2>;
     sht:schema <schemas/1focusPatternB-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusPatternB-dot_fail-iri-match";
   mf:status mf:proposed .

<validation/manifest#1focusPatternB-dot_pass-bnode-long> a sht:ValidationTest;
   rdfs:comment "<S1> PATTERN 'abcdefghijklmnopqrs' { <p1> } on { _:abcdefghijklmnopqrst <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrst_Ip1_Io1.ttl>;
     sht:focus _:b1478;
     sht:schema <schemas/1focusPatternB-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusPatternB-dot_pass-bnode-long";
   mf:status mf:proposed;
   sht:result <validation/1focusPatternB-dot_pass-bnode-long.val> .

<validation/manifest#1focusPatternB-dot_pass-bnode-match> a sht:ValidationTest;
   rdfs:comment "<S1> PATTERN 'abcdefghijklmnopqrs' { <p1> } on { _:abcdefghijklmnopqrs <p1> <o1> }";
   mf:action [
     sht:data <validation/Babcdefghijklmnopqrs_Ip1_Io1.ttl>;
     sht:focus _:b1441;
     sht:schema <schemas/1focusPatternB-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusPatternB-dot_pass-bnode-match";
   mf:status mf:proposed;
   sht:result <validation/1focusBNODE_dot_pass.val> .

<validation/manifest#1focusnonLiteral-dot_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> NONLITERAL { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusnonLiteral-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusnonLiteral-dot_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1focus_dot_pass.val> .

<validation/manifest#1focusnonLiteralLength-dot_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> NONLITERAL LENGTH 19 { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusnonLiteralLength-dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusnonLiteralLength-dot_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1focus_dot_pass.val> .

<validation/manifest#1focusnonLiteralLength-nonLiteralLength_fail-short> a sht:ValidationFailure;
   rdfs:comment "<S1> NONLITERAL LENGTH 19 { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusnonLiteralLength-nonLiteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusnonLiteralLength-nonLiteralLength_fail-short";
   mf:status mf:proposed .

<validation/manifest#1focusnonLiteralLength-nonLiteralLength_pass> a sht:ValidationTest;
   rdfs:comment "<S1> NONLITERAL LENGTH 19 { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1focusnonLiteralLength-nonLiteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1focusnonLiteralLength-nonLiteralLength_pass";
   mf:status mf:proposed;
   sht:result <validation/1focusnonLiteralLength-nonLiteralLength_pass.val> .

<validation/manifest#1focusvsANDIRI_fail> a sht:ValidationFailure;
   rdfs:comment "<S> [<v1> <v2> <v3>] AND IRI on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/v4>;
     sht:schema <schemas/focusvsANDIRI.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "1focusvsANDIRI_fail";
   mf:status mf:proposed .

<validation/manifest#1focusvsANDIRI_pass> a sht:ValidationTest;
   rdfs:comment "<S> [<v1> <v2> <v3>] AND IRI on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/v1>;
     sht:schema <schemas/focusvsANDIRI.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "1focusvsANDIRI_pass";
   mf:status mf:proposed;
   sht:result <validation/1focusvsANDIRI_pass.val> .

<validation/manifest#1focusvsANDdatatype_fail> a sht:ValidationFailure;
   rdfs:comment "<S> [<v1> <v2> <v3>] AND <dt1> on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/v1>;
     sht:schema <schemas/focusvsANDdatatype.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "1focusvsANDdatatype_fail";
   mf:status mf:proposed .

<validation/manifest#1focusvsORdatatype_fail-dt> a sht:ValidationFailure;
   rdfs:comment "<S> [<v1> <v2> <v3>] OR <dt1> on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus "\"v1\"^^http://a.example/dt2";
     sht:schema <schemas/focusvsORdatatype.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "1focusvsORdatatype_fail-dt";
   mf:status mf:proposed .

<validation/manifest#1focusvsORdatatype_fail-val> a sht:ValidationFailure;
   rdfs:comment "<S> [<v1> <v2> <v3>] OR <dt1> on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/v4>;
     sht:schema <schemas/focusvsORdatatype.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "1focusvsORdatatype_fail-val";
   mf:status mf:proposed .

<validation/manifest#1focusvsORdatatype_pass-dt> a sht:ValidationTest;
   rdfs:comment "<S> [<v1> <v2> <v3>] OR <dt1> on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus "\"v1\"^^http://a.example/dt1";
     sht:schema <schemas/focusvsORdatatype.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "1focusvsORdatatype_pass-dt";
   mf:status mf:proposed;
   sht:result <validation/1focusvsORdatatype_pass-dt.val> .

<validation/manifest#1focusvsORdatatype_pass-val> a sht:ValidationTest;
   rdfs:comment "<S> [<v1> <v2> <v3>] OR <dt1> on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/v1>;
     sht:schema <schemas/focusvsORdatatype.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "1focusvsORdatatype_pass-val";
   mf:status mf:proposed;
   sht:result <validation/1focusvsORdatatype_pass-val.val> .

<validation/manifest#1integerMaxexclusiveDECIMALint_fail-integer-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveDECIMALint_fail-integer-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMaxexclusiveDECIMALint_fail-integer-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveDECIMALint_fail-integer-high";
   mf:status mf:proposed .

<validation/manifest#1integerMaxexclusiveDECIMALint_pass-integer-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveDECIMALint_pass-integer-low";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxexclusiveDECIMALint_pass-integer-low.val> .

<validation/manifest#1integerMaxexclusiveDOUBLEint_fail-integer-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0e0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveDOUBLEint_fail-integer-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMaxexclusiveDOUBLEint_fail-integer-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0e0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveDOUBLEint_fail-integer-high";
   mf:status mf:proposed .

<validation/manifest#1integerMaxexclusiveDOUBLEint_pass-integer-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0e0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveDOUBLEint_pass-integer-low";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxexclusiveDOUBLEint_pass-integer-low.val> .

<validation/manifest#1integerMaxexclusiveINTEGER_fail-integer-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveINTEGER_fail-integer-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMaxexclusiveINTEGER_fail-integer-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveINTEGER_fail-integer-high";
   mf:status mf:proposed .

<validation/manifest#1integerMaxexclusiveINTEGER_pass-integer-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxexclusiveINTEGER_pass-integer-low";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxexclusiveINTEGER_pass-integer-low.val> .

<validation/manifest#1integerMaxinclusiveDECIMALint_fail-integer-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveDECIMALint_fail-integer-high";
   mf:status mf:proposed .

<validation/manifest#1integerMaxinclusiveDECIMALint_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveDECIMALint_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxinclusiveDECIMALint_pass-integer-equal.val> .

<validation/manifest#1integerMaxinclusiveDECIMALint_pass-integer-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveDECIMALint_pass-integer-low";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxinclusiveDECIMALint_pass-integer-low.val> .

<validation/manifest#1integerMaxinclusiveDOUBLEint_fail-integer-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0e0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveDOUBLEint_fail-integer-high";
   mf:status mf:proposed .

<validation/manifest#1integerMaxinclusiveDOUBLEint_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0e0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveDOUBLEint_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxinclusiveDOUBLEint_pass-integer-equal.val> .

<validation/manifest#1integerMaxinclusiveDOUBLEint_pass-integer-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0e0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveDOUBLEint_pass-integer-low";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxinclusiveDOUBLEint_pass-integer-low.val> .

<validation/manifest#1integerMaxinclusiveINTEGER_fail-integer-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveINTEGER_fail-integer-high";
   mf:status mf:proposed .

<validation/manifest#1integerMaxinclusiveINTEGER_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveINTEGER_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxinclusiveINTEGER_pass-integer-equal.val> .

<validation/manifest#1integerMaxinclusiveINTEGER_pass-integer-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMaxinclusiveINTEGER_pass-integer-low";
   mf:status mf:proposed;
   sht:result <validation/1integerMaxinclusiveINTEGER_pass-integer-low.val> .

<validation/manifest#1integerMinexclusiveDECIMALint_fail-integer-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveDECIMALint_fail-integer-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMinexclusiveDECIMALint_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveDECIMALint_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMinexclusiveDECIMALint_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveDECIMALint_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMinexclusiveDECIMALint_pass-integer-high.val> .

<validation/manifest#1integerMinexclusiveDOUBLEint_fail-integer-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0e0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveDOUBLEint_fail-integer-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMinexclusiveDOUBLEint_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0e0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveDOUBLEint_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMinexclusiveDOUBLEint_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0e0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveDOUBLEint_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMinexclusiveDOUBLEint_pass-integer-high.val> .

<validation/manifest#1integerMinexclusiveINTEGER_fail-integer-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveINTEGER_fail-integer-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMinexclusiveINTEGER_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveINTEGER_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMinexclusiveINTEGER_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMinexclusiveINTEGER_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMinexclusiveINTEGER_pass-integer-high.val> .

<validation/manifest#1integerMininclusiveDECIMALLeadTrail_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALLeadTrail_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveDECIMALLeadTrail_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALLeadTrail_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMALLeadTrail_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveDECIMALLeadTrail_pass-integer-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50 } / { <s1> <p1> 05 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT05.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALLeadTrail_pass-integer-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMALLeadTrail_pass-integer-equalLead.val> .

<validation/manifest#1integerMininclusiveDECIMALLeadTrail_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALLeadTrail_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMALLeadTrail_pass-integer-high.val> .

<validation/manifest#1integerMininclusiveDECIMAL_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 4.5 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMAL_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMAL_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveDECIMALintLeadTrail_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALintLeadTrail_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveDECIMALintLeadTrail_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALintLeadTrail_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMALintLeadTrail_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveDECIMALintLeadTrail_pass-integer-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00 } / { <s1> <p1> 05 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT05.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALintLeadTrail_pass-integer-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMALintLeadTrail_pass-integer-equalLead.val> .

<validation/manifest#1integerMininclusiveDECIMALintLeadTrail_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALintLeadTrail_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMALintLeadTrail_pass-integer-high.val> .

<validation/manifest#1integerMininclusiveDECIMALint_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5.0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALint_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveDECIMALint_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5.0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALint_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMALint_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveDECIMALint_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5.0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDECIMALint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDECIMALint_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDECIMALint_pass-integer-high.val> .

<validation/manifest#1integerMininclusiveDOUBLELeadTrail_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50e0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLELeadTrail_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveDOUBLELeadTrail_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50e0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLELeadTrail_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDOUBLELeadTrail_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveDOUBLELeadTrail_pass-integer-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50e0 } / { <s1> <p1> 05 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT05.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLELeadTrail_pass-integer-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDOUBLELeadTrail_pass-integer-equalLead.val> .

<validation/manifest#1integerMininclusiveDOUBLELeadTrail_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50e0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLELeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLELeadTrail_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDOUBLELeadTrail_pass-integer-high.val> .

<validation/manifest#1integerMininclusiveDOUBLE_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 4.5e0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLE_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDOUBLE_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveDOUBLEintLeadTrail_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00e0 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLEintLeadTrail_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00e0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00e0 } / { <s1> <p1> 05 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT05.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equalLead.val> .

<validation/manifest#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00e0 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLEintLeadTrail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLEintLeadTrail_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDOUBLEintLeadTrail_pass-integer-high.val> .

<validation/manifest#1integerMininclusiveDOUBLEint_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5.0e0 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveDOUBLEint.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveDOUBLEint_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveDOUBLEint_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveINTEGERLead_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGERLead_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGERLead_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGERLead_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveINTEGERLead_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveINTEGERLead_pass-integer-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05 } / { <s1> <p1> 05 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT05.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGERLead_pass-integer-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveINTEGERLead_pass-integer-equalLead.val> .

<validation/manifest#1integerMininclusiveINTEGERLead_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGERLead.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGERLead_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveINTEGERLead_pass-integer-high.val> .

<validation/manifest#1integerMininclusiveINTEGER_fail-byte-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '5'^^<http://www.w3.org/2001/XMLSchema#byte> }";
   mf:action [
     sht:data <validation/Is1_Ip1_BYT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_fail-byte-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGER_fail-dateTime-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '2015-12-25T01:23:45Z'^^<http://www.w3.org/2001/XMLSchema#dateTime> }";
   mf:action [
     sht:data <validation/Is1_Ip1_DT2015-12-25T01_23_45Z.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_fail-dateTime-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGER_fail-decimal-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 4.5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_fail-decimal-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGER_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGER_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT4_5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGER_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGER_fail-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '4'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_fail-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGER_fail-string-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 'ab'^^<http://www.w3.org/2001/XMLSchema#string> }";
   mf:action [
     sht:data <validation/Is1_Ip1_STRab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_fail-string-equal";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusiveINTEGER_pass-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '5'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_pass-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveINTEGER_pass-equal.val> .

<validation/manifest#1integerMininclusiveINTEGER_pass-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '05'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT05.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_pass-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveINTEGER_pass-equalLead.val> .

<validation/manifest#1integerMininclusiveINTEGER_pass-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '6'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_pass-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveINTEGER_pass-high.val> .

<validation/manifest#1integerMininclusiveINTEGER_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveINTEGER_pass-integer-equal.val> .

<validation/manifest#1integerMininclusiveINTEGER_pass-integer-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 6 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusiveINTEGER_pass-integer-high";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusiveINTEGER_pass-integer-high.val> .

<validation/manifest#1integerMininclusivexsd-integer_fail-integer-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE \"5\"^^<http://www.w3.org/2001/XMLSchema#integer> } / { <s1> <p1> 4 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusivexsd-integer.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusivexsd-integer_fail-integer-low";
   mf:status mf:proposed .

<validation/manifest#1integerMininclusivexsd-integer_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE \"5\"^^<http://www.w3.org/2001/XMLSchema#integer> } / { <s1> <p1> 5 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1integerMininclusivexsd-integer.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1integerMininclusivexsd-integer_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1integerMininclusivexsd-integer_pass-integer-equal.val> .

<validation/manifest#1inversedotAnnot3_missing> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> .; <a1> '1'; <a1> '2'; <a1> '3'; } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/o1>;
     sht:schema <schemas/1inversedotAnnot3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1inversedotAnnot3_missing";
   mf:status mf:proposed .

<validation/manifest#1inversedotAnnot3_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> .; <a1> '1'; <a1> '2'; <a1> '3'; } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/o1>;
     sht:schema <schemas/1inversedotAnnot3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1inversedotAnnot3_pass";
   mf:status mf:proposed;
   sht:result <validation/1inversedotAnnot3_pass.val> .

<validation/manifest#1inversedotCode1_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . %<Test>{ print(o) %} } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/o1>;
     sht:schema <schemas/1inversedotCode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1inversedotCode1_pass";
   mf:status mf:proposed;
   sht:result <validation/1inversedotCode1_pass.val> .

<validation/manifest#1inversedot_fail-empty> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> . } on {  }";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/o1>;
     sht:schema <schemas/1inversedot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1inversedot_fail-empty";
   mf:status mf:proposed .

<validation/manifest#1inversedot_fail-missing> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> . } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/o1>;
     sht:schema <schemas/1inversedot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1inversedot_fail-missing";
   mf:status mf:proposed .

<validation/manifest#1inversedot_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . } on { <sr> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/o1>;
     sht:schema <schemas/1inversedot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1inversedot_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1inversedot_pass.val> .

<validation/manifest#1inversedot_pass-over_lexicallyEarlier> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . } on { <s> <p0> <o0>; <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip0_Io0;Ip1_Io1.ttl>;
     sht:focus <http://a.example/o1>;
     sht:schema <schemas/1inversedot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1inversedot_pass-over_lexicallyEarlier";
   mf:status mf:proposed;
   sht:result <validation/1inversedot_pass.val> .

<validation/manifest#1inversedot_pass-over_lexicallyLater> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1>; <p2> <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1;Ip2_Io2.ttl>;
     sht:focus <http://a.example/o1>;
     sht:schema <schemas/1inversedot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1inversedot_pass-over_lexicallyLater";
   mf:status mf:proposed;
   sht:result <validation/1inversedot_pass.val> .

<validation/manifest#1iriLength_fail-bnode-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI LENGTH 19 } on { <s1> <p1> _:abcde }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriLength_fail-bnode-equal";
   mf:status mf:proposed .

<validation/manifest#1iriLength_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI LENGTH 19 } on { <s1> <p1> <o1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriLength_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1iriLength_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI LENGTH 19 } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriLength_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1iriLength_fail-lit-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI LENGTH 19 } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriLength_fail-lit-equal";
   mf:status mf:proposed .

<validation/manifest#1iriLength_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> IRI LENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriLength_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1iriLength_pass-iri-equal.val> .

<validation/manifest#1iriMaxlength_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI MAXLENGTH 19 } on { <s1> <p1> <o1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriMaxlength_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1iriMaxlength_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> IRI MAXLENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriMaxlength_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1iriMaxlength_pass-iri-equal.val> .

<validation/manifest#1iriMaxlength_pass-iri-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> IRI MAXLENGTH 19 } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriMaxlength_pass-iri-short";
   mf:status mf:proposed;
   sht:result <validation/1iriMaxlength_pass-iri-short.val> .

<validation/manifest#1iriMinlength_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI MINLENGTH 19 } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriMinlength_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1iriMinlength_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> IRI MINLENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriMinlength_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1iriMinlength_pass-iri-equal.val> .

<validation/manifest#1iriMinlength_pass-iri-long> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> IRI MINLENGTH 19 } on { <s1> <p1> <o1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriMinlength_pass-iri-long";
   mf:status mf:proposed;
   sht:result <validation/1iriMinlength_pass-iri-long.val> .

<validation/manifest#1iriPattern_fail-bnode-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI PATTERN \"^bc$\" } on { <s1> <p1> _:bc }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriPatternbc.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriPattern_fail-bnode-match";
   mf:status mf:proposed .

<validation/manifest#1iriPattern_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI PATTERN \"http://a.example/o1\" } on { <s1> <p1> <o1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriPattern_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1iriPattern_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI PATTERN \"http://a.example/o1\" } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriPattern_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1iriPattern_fail-lit-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI PATTERN \"http://a.example/o1\" } on { <s1> <p1> \"o1\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_L19.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriPattern_fail-lit-match";
   mf:status mf:proposed .

<validation/manifest#1iriPattern_pass-iri-match> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> IRI PATTERN \"http://a.example/o1\" } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriPattern_pass-iri-match";
   mf:status mf:proposed;
   sht:result <validation/1iriPattern_pass-iri-match.val> .

<validation/manifest#1iriRef1_fail-bnode> a sht:ValidationFailure;
   rdfs:comment "<n1> in { <n1> <p1> _:n1 . _:n1 <p2> \"X\" } as <S1> in <S1> { <p1> IRI @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_Bn2.Bn2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1iriRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriRef1_fail-bnode";
   mf:status mf:proposed .

<validation/manifest#1iriRef1_pass-iri> a sht:ValidationTest;
   rdfs:comment "<n1> in { <n1> <p1> <n2> . <n2> <p2> \"X\" } as <S1> in <S1> { <p1> IRI @<S2> } <S2> { <p2> . }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1iriRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriRef1_pass-iri";
   mf:status mf:proposed;
   sht:result <validation/1iriRef1_pass-iri.val> .

<validation/manifest#1iriRefLength1_fail-bnode-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI @<S2> LENGTH 19 } <S2> { <p2> . } on { <s1> <p1> _:abcde }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriRefLength1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriRefLength1_fail-bnode-equal";
   mf:status mf:proposed .

<validation/manifest#1iriRefLength1_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI @<S2> LENGTH 19 } <S2> { <p2> . } on { <s1> <p1> <o1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriRefLength1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriRefLength1_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1iriRefLength1_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI @<S2> LENGTH 19 } <S2> { <p2> . } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriRefLength1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriRefLength1_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1iriRefLength1_fail-lit-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI @<S2> LENGTH 19 } <S2> { <p2> . } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriRefLength1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriRefLength1_fail-lit-equal";
   mf:status mf:proposed .

<validation/manifest#1iriRefLength1_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> IRI @<S2> LENGTH 19 } <S2> { <p2> . } on { <s1> <p1> <o1> . <o1> <p2>  <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1-Io1_Ip2_Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iriRefLength1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iriRefLength1_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1iriRefLength1_pass-iri-equal.val> .

<validation/manifest#1iri_fail-bnode> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI } on { <s1> <p1> _:ab }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iri.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iri_fail-bnode";
   mf:status mf:proposed .

<validation/manifest#1iri_fail-literal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> IRI } on { <s1> <p1> \"ab\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iri.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iri_fail-literal";
   mf:status mf:proposed .

<validation/manifest#1iri_pass-iri> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> IRI } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1iri.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1iri_pass-iri";
   mf:status mf:proposed;
   sht:result <validation/1iri_pass-iri.val> .

<validation/manifest#1literalCarrotPatternDollar_pass-CarrotbcDollar> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"\\^bc\\$\" } on { <s1> <p1> \"^bc$\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LCarrotbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalCarrotPatternDollar.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalCarrotPatternDollar_pass-CarrotbcDollar";
   mf:status mf:proposed;
   sht:result <validation/1literalCarrotPatternDollar_pass-CarrotbcDollar.val> .

<validation/manifest#1literalCarrotPatternDollar_pass-bc> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"\\^bc\\$\" } on { <s1> <p1> \"bc\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalCarrotPatternDollar.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalCarrotPatternDollar_pass-bc";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-bnode> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / BASE <http://a.example/> { <s1> <p1> _:12345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_B12345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-bnode";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-decimal-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> 1.234567 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_234567.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-decimal-long";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-decimal-longLead> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 4 } / { <s1> <p1> 01.23456 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC01_23456.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits4.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-decimal-longLead";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-decimal-longLeadTrail> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 4 } / { <s1> <p1> 01.234560 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_234560.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits4.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-decimal-longLeadTrail";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-decimal-longTrail> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 4 } / { <s1> <p1> 1.234560 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_234560.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits4.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-decimal-longTrail";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> \"1.23456\"^^xsd:float }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT1_23456.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-iri> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / BASE <http://a.example/> { <s1> <p1> <1.2345> }";
   mf:action [
     sht:data <validation/BASE_Is1_Ip1_I12345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-iri";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-malformedxsd_decimal-1_2345ab> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> \"1.2345ab\"^^xsd:decimal }";
   mf:action [
     sht:data <validation/Is1_Ip1_malformedxsd-decimal1_2345ab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-malformedxsd_decimal-1_2345ab";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-malformedxsd_decimal-1_23ab> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> \"1.23ab\"^^xsd:decimal }";
   mf:action [
     sht:data <validation/Is1_Ip1_malformedxsd-decimal1_23ab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-malformedxsd_decimal-1_23ab";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_fail-malformedxsd_integer-1_2345> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> \"1.2345\"^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_malformedxsd-integer1_2345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_fail-malformedxsd_integer-1_2345";
   mf:status mf:proposed .

<validation/manifest#1literalFractiondigits_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> 1.23456 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_23456.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalFractiondigits_pass-decimal-equal.val> .

<validation/manifest#1literalFractiondigits_pass-decimal-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 4 } / { <s1> <p1> 01.2345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC01_2345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits4.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_pass-decimal-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1literalFractiondigits_pass-decimal-equalLead.val> .

<validation/manifest#1literalFractiondigits_pass-decimal-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 4 } / { <s1> <p1> 01.23450 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC01_23450.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits4.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_pass-decimal-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1literalFractiondigits_pass-decimal-equalLeadTrail.val> .

<validation/manifest#1literalFractiondigits_pass-decimal-equalTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 4 } / { <s1> <p1> 1.23450 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_23450.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits4.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_pass-decimal-equalTrail";
   mf:status mf:proposed;
   sht:result <validation/1literalFractiondigits_pass-decimal-equalTrail.val> .

<validation/manifest#1literalFractiondigits_pass-decimal-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> 1.2345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_2345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_pass-decimal-short";
   mf:status mf:proposed;
   sht:result <validation/1literalFractiondigits_pass-decimal-short.val> .

<validation/manifest#1literalFractiondigits_pass-integer-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> 12345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT12345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_pass-integer-short";
   mf:status mf:proposed;
   sht:result <validation/1fractionTotaldigits_pass-integer-equal.val> .

<validation/manifest#1literalFractiondigits_pass-xsd_integer-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> \"12345\"^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_xsd-integer12345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalFractiondigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalFractiondigits_pass-xsd_integer-short";
   mf:status mf:proposed;
   sht:result <validation/1fractionTotaldigits_pass-integer-equal.val> .

<validation/manifest#1literalLength_fail-bnode-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL LENGTH 5 } on { <s1> <p1> _:abcde }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalLength_fail-bnode-equal";
   mf:status mf:proposed .

<validation/manifest#1literalLength_fail-iri-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL LENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalLength19.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalLength_fail-iri-equal";
   mf:status mf:proposed .

<validation/manifest#1literalLength_fail-lit-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL LENGTH 5 } on { <s1> <p1> \"abcdef\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalLength_fail-lit-long";
   mf:status mf:proposed .

<validation/manifest#1literalLength_fail-lit-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL LENGTH 5 } on { <s1> <p1> \"abcd\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalLength_fail-lit-short";
   mf:status mf:proposed .

<validation/manifest#1literalLength_pass-lit-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL LENGTH 5 } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalLength_pass-lit-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalLength_pass-lit-equal.val> .

<validation/manifest#1literalMaxexclusiveINTEGER_fail-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL MAXEXCLUSIVE 5 } / { <s1> <p1> '5'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxexclusiveINTEGER_fail-equal";
   mf:status mf:proposed .

<validation/manifest#1literalMaxexclusiveINTEGER_fail-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL MAXEXCLUSIVE 5 } / { <s1> <p1> '6'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxexclusiveINTEGER_fail-high";
   mf:status mf:proposed .

<validation/manifest#1literalMaxexclusiveINTEGER_pass-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MAXEXCLUSIVE 5 } / { <s1> <p1> '4'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxexclusiveINTEGER_pass-low";
   mf:status mf:proposed;
   sht:result <validation/1literalMaxexclusiveINTEGER_pass-high.val> .

<validation/manifest#1literalMaxinclusiveINTEGER_fail-high> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL MAXINCLUSIVE 5 } / { <s1> <p1> '6'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxinclusiveINTEGER_fail-high";
   mf:status mf:proposed .

<validation/manifest#1literalMaxinclusiveINTEGER_pass-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MAXINCLUSIVE 5 } / { <s1> <p1> '5'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxinclusiveINTEGER_pass-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalMaxinclusiveINTEGER_pass-equal.val> .

<validation/manifest#1literalMaxinclusiveINTEGER_pass-low> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MAXINCLUSIVE 5 } / { <s1> <p1> '4'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxinclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxinclusiveINTEGER_pass-low";
   mf:status mf:proposed;
   sht:result <validation/1literalMaxinclusiveINTEGER_pass-low.val> .

<validation/manifest#1literalMaxlength_fail-lit-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL MAXLENGTH 5 } on { <s1> <p1> \"abcdef\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxlength_fail-lit-long";
   mf:status mf:proposed .

<validation/manifest#1literalMaxlength_pass-lit-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MAXLENGTH 5 } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxlength_pass-lit-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalMaxlength_pass-lit-equal.val> .

<validation/manifest#1literalMaxlength_pass-lit-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MAXLENGTH 5 } on { <s1> <p1> \"abcd\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMaxlength_pass-lit-short";
   mf:status mf:proposed;
   sht:result <validation/1literalMaxlength_pass-lit-short.val> .

<validation/manifest#1literalMinexclusiveINTEGER_fail-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL MINEXCLUSIVE 5 } / { <s1> <p1> '4'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMinexclusiveINTEGER_fail-low";
   mf:status mf:proposed .

<validation/manifest#1literalMinexclusiveINTEGER_pass-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL MINEXCLUSIVE 5 } / { <s1> <p1> '5'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMinexclusiveINTEGER_pass-equal";
   mf:status mf:proposed .

<validation/manifest#1literalMinexclusiveINTEGER_pass-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MINEXCLUSIVE 5 } / { <s1> <p1> '6'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMinexclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMinexclusiveINTEGER_pass-high";
   mf:status mf:proposed;
   sht:result <validation/1literalMinexclusiveINTEGER_pass-high.val> .

<validation/manifest#1literalMininclusiveINTEGER_fail-low> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL MININCLUSIVE 5 } / { <s1> <p1> '4'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMininclusiveINTEGER_fail-low";
   mf:status mf:proposed .

<validation/manifest#1literalMininclusiveINTEGER_pass-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MININCLUSIVE 5 } / { <s1> <p1> '5'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMininclusiveINTEGER_pass-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalMininclusiveINTEGER_pass-equal.val> .

<validation/manifest#1literalMininclusiveINTEGER_pass-high> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MININCLUSIVE 5 } / { <s1> <p1> '6'^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT6.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMininclusiveINTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMininclusiveINTEGER_pass-high";
   mf:status mf:proposed;
   sht:result <validation/1literalMininclusiveINTEGER_pass-high.val> .

<validation/manifest#1literalMinlength_fail-lit-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL MINLENGTH 5 } on { <s1> <p1> \"abcd\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMinlength_fail-lit-short";
   mf:status mf:proposed .

<validation/manifest#1literalMinlength_pass-lit-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MINLENGTH 5 } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMinlength_pass-lit-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalMinlength_pass-lit-equal.val> .

<validation/manifest#1literalMinlength_pass-lit-long> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL MINLENGTH 5 } on { <s1> <p1> \"abcdef\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalMinlength_pass-lit-long";
   mf:status mf:proposed;
   sht:result <validation/1literalMinlength_pass-lit-long.val> .

<validation/manifest#1literalPattern19_fail-iri-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"http://a.example/o1\" } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern19.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern19_fail-iri-match";
   mf:status mf:proposed .

<validation/manifest#1literalPatternDollar_pass-litDollar-match> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\\$\" } on { <s1> <p1> \"bc$\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPatternDollar.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPatternDollar_pass-litDollar-match";
   mf:status mf:proposed;
   sht:result <validation/1literalPatternDollar_pass-litDollar-match.val> .

<validation/manifest#1literalPatternEnd_fail-litEnd> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc$\" } on { <s1> <p1> \"bc$\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPatternEnd.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPatternEnd_fail-litEnd";
   mf:status mf:proposed .

<validation/manifest#1literalPatternEnd_pass-CarrotbcDollar> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc$\" } on { <s1> <p1> \"bc\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LCarrotbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPatternEnd.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPatternEnd_pass-CarrotbcDollar";
   mf:status mf:proposed .

<validation/manifest#1literalPatternEnd_pass-bc> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc$\" } on { <s1> <p1> \"bc\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPatternEnd.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPatternEnd_pass-bc";
   mf:status mf:proposed;
   sht:result <validation/1literalPatternEnd_pass-bc.val> .

<validation/manifest#1literalPattern_fail-ab> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\" } on { <s1> <p1> \"ab\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_fail-ab";
   mf:status mf:proposed .

<validation/manifest#1literalPattern_fail-bnode-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\" } on { <s1> <p1> _:ab }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_fail-bnode-match";
   mf:status mf:proposed .

<validation/manifest#1literalPattern_fail-cd> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\" } on { <s1> <p1> \"cd\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_fail-cd";
   mf:status mf:proposed .

<validation/manifest#1literalPattern_fail-lit-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\" } on { <s1> <p1> \"a\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_fail-lit-short";
   mf:status mf:proposed .

<validation/manifest#1literalPattern_pass-CarrotbcDollar> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\" } on { <s1> <p1> \"^bc$\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LCarrotbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_pass-CarrotbcDollar";
   mf:status mf:proposed;
   sht:result <validation/1literalPattern_pass-CarrotbcDollar.val> .

<validation/manifest#1literalPattern_pass-StartlitEnd-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"^bc$\" } on { <s1> <p1> \"^bc$\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LCarrotbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalStartPatternEnd.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_pass-StartlitEnd-match";
   mf:status mf:proposed .

<validation/manifest#1literalPattern_pass-bcDollar> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\" } on { <s1> <p1> \"bc$\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_pass-bcDollar";
   mf:status mf:proposed;
   sht:result <validation/1literalPattern_pass-bcDollar.val> .

<validation/manifest#1literalPattern_pass-lit-into> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\" } on { <s1> <p1> \"abc\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_pass-lit-into";
   mf:status mf:proposed;
   sht:result <validation/1literalPattern_pass-lit-into.val> .

<validation/manifest#1literalPattern_pass-lit-match> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc\" } on { <s1> <p1> \"bc\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPattern_pass-lit-match";
   mf:status mf:proposed;
   sht:result <validation/1literalPattern_pass-lit-match.val> .

<validation/manifest#1literalPatternabEnd_fail-bnode-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"bc$\" } on { <s1> <p1> _:bc }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPatternabEnd.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPatternabEnd_fail-bnode-match";
   mf:status mf:proposed .

<validation/manifest#1literalPlus_Is1_Ip1_La,Io1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> LITERAL+ } on { <s> <p1> 'a', <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_La,Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalPlus.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalPlus_Is1_Ip1_La,Io1";
   mf:status mf:proposed .

<validation/manifest#1literalStarPatternEnd_pass-bc> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"^bc$\" } on { <s1> <p1> \"bc\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalStartPatternEnd.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalStarPatternEnd_pass-bc";
   mf:status mf:proposed;
   sht:result <validation/1literalStarPatternEnd_pass-bc.val> .

<validation/manifest#1literalStartPatternEnd_CarrotbcDollar> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"^bc$\" } on { <s1> <p1> \"^bc$\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LCarrotbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalStartPatternEnd.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalStartPatternEnd_CarrotbcDollar";
   mf:status mf:proposed .

<validation/manifest#1literalStartPattern_fail-CarrotbcDollar> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"^bc\" } on { <s1> <p1> \"^bc$\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_LCarrotbcDollar.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalStartPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalStartPattern_fail-CarrotbcDollar";
   mf:status mf:proposed .

<validation/manifest#1literalStartPattern_pass-bc> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL PATTERN \"^bc\" } on { <s1> <p1> \"bc\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalStartPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalStartPattern_pass-bc";
   mf:status mf:proposed;
   sht:result <validation/1literalStartPattern-bc.val> .

<validation/manifest#1literalTotaldigits_fail-bnode> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / BASE <http://a.example/> { <s1> <p1> _:12345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_B12345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-bnode";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-byte-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 2 } / { <s1> <p1> 128^^xsd:byte }";
   mf:action [
     sht:data <validation/Is1_Ip1_BYT128.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-byte-long";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-decimal-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 1.23456 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_23456.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-decimal-long";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-decimal-longLead> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 01.23456 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC01_23456.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-decimal-longLead";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-decimal-longLeadTrail> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 01.234560 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_234560.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-decimal-longLeadTrail";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-decimal-longTrail> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 1.234560 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_234560.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-decimal-longTrail";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-double-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 4.5e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL4_5e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-double-equal";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-float-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> \"1.2345\"^^xsd:float }";
   mf:action [
     sht:data <validation/Is1_Ip1_FLT1_2345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-float-equal";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-integer-longLead> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 0123456 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT0123456.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-integer-longLead";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-integer-longLeadTrail> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 6 } / { <s1> <p1> 01234560 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT01234560.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits6.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-integer-longLeadTrail";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-integer-longTrail> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 6 } / { <s1> <p1> 1234560 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT1234560.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits6.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-integer-longTrail";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-iri> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / BASE <http://a.example/> { <s1> <p1> <1.2345> }";
   mf:action [
     sht:data <validation/BASE_Is1_Ip1_I12345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-iri";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-malformedxsd_decimal-1_2345ab> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> \"1.2345ab\"^^xsd:decimal }";
   mf:action [
     sht:data <validation/Is1_Ip1_malformedxsd-decimal1_2345ab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-malformedxsd_decimal-1_2345ab";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-malformedxsd_decimal-1_23ab> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> \"1.23ab\"^^xsd:decimal }";
   mf:action [
     sht:data <validation/Is1_Ip1_malformedxsd-decimal1_23ab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-malformedxsd_decimal-1_23ab";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_fail-malformedxsd_integer-1_2345> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> \"1.2345\"^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_malformedxsd-integer1_2345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_fail-malformedxsd_integer-1_2345";
   mf:status mf:proposed .

<validation/manifest#1literalTotaldigits_pass-byte-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 2 } / { <s1> <p1> 64^^xsd:byte }";
   mf:action [
     sht:data <validation/Is1_Ip1_BYT64.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-byte-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-byte-equal.val> .

<validation/manifest#1literalTotaldigits_pass-byte-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 2 } / { <s1> <p1> 5^^xsd:byte }";
   mf:action [
     sht:data <validation/Is1_Ip1_BYT5.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-byte-short";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-byte-short.val> .

<validation/manifest#1literalTotaldigits_pass-decimal-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 1.2345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_2345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-decimal-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-decimal-equal.val> .

<validation/manifest#1literalTotaldigits_pass-decimal-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 01.2345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC01_2345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-decimal-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-decimal-equalLead.val> .

<validation/manifest#1literalTotaldigits_pass-decimal-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 01.23450 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC01_23450.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-decimal-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-decimal-equalLeadTrail.val> .

<validation/manifest#1literalTotaldigits_pass-decimal-equalTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 1.23450 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_23450.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-decimal-equalTrail";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-decimal-equalTrail.val> .

<validation/manifest#1literalTotaldigits_pass-decimal-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 1.234 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC1_234.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-decimal-short";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-decimal-short.val> .

<validation/manifest#1literalTotaldigits_pass-integer-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 12345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT12345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-integer-equal";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-integer-equal.val> .

<validation/manifest#1literalTotaldigits_pass-integer-equalLead> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> 012345 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT012345.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-integer-equalLead";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-integer-equalLead.val> .

<validation/manifest#1literalTotaldigits_pass-integer-equalLeadTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 6 } / { <s1> <p1> 0123450 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT0123450.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits6.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-integer-equalLeadTrail";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-integer-equalLeadTrail.val> .

<validation/manifest#1literalTotaldigits_pass-integer-equalTrail> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 6 } / { <s1> <p1> 123450 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT123450.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits6.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-integer-equalTrail";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-integer-equalTrail.val> .

<validation/manifest#1literalTotaldigits_pass-xsd_integer-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL TOTALDIGITS 5 } / { <s1> <p1> \"1234\"^^xsd:integer }";
   mf:action [
     sht:data <validation/Is1_Ip1_xsd-integer1234.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literalTotaldigits5.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literalTotaldigits_pass-xsd_integer-short";
   mf:status mf:proposed;
   sht:result <validation/1literalTotaldigits_pass-integer-short.val> .

<validation/manifest#1literal_fail-bnode> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL } on { <s1> <p1> _:ab }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literal.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literal_fail-bnode";
   mf:status mf:proposed .

<validation/manifest#1literal_fail-iri> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> LITERAL } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literal.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literal_fail-iri";
   mf:status mf:proposed .

<validation/manifest#1literal_pass-literal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> LITERAL } on { <s1> <p1> \"ab\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1literal.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1literal_pass-literal";
   mf:status mf:proposed;
   sht:result <validation/1literal_pass-literal.val> .

<validation/manifest#1nonliteralLength_fail-bnode-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> _:abcdefghijklmnopqrst }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdefghijklmnopqrst.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralLength_fail-bnode-long";
   mf:status mf:proposed .

<validation/manifest#1nonliteralLength_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> _:abcd }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralLength_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1nonliteralLength_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> <o1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralLength_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1nonliteralLength_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralLength_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1nonliteralLength_fail-lit-equal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralLength_fail-lit-equal";
   mf:status mf:proposed .

<validation/manifest#1nonliteralLength_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> _:abcdefghijklmnopqrs }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdefghijklmnopqrs.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralLength_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralLength_pass-bnode-equal.val> .

<validation/manifest#1nonliteralLength_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL LENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralLength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralLength_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralLength_pass-iri-equal.val> .

<validation/manifest#1nonliteralMaxlength_fail-bnode-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL MAXLENGTH 5 } on { <s1> <p1> _:abcdefghijklmnopqrst }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdefghijklmnopqrst.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMaxlength_fail-bnode-long";
   mf:status mf:proposed .

<validation/manifest#1nonliteralMaxlength_fail-iri-long> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL MAXLENGTH 19 } on { <s1> <p1> <o1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMaxlength_fail-iri-long";
   mf:status mf:proposed .

<validation/manifest#1nonliteralMaxlength_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL MAXLENGTH 19 } on { <s1> <p1> _:abcdefghijklmnopqrs }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdefghijklmnopqrs.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMaxlength_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralMaxlength_pass-bnode-equal.val> .

<validation/manifest#1nonliteralMaxlength_pass-bnode-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL MAXLENGTH 19 } on { <s1> <p1> _:abcd }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMaxlength_pass-bnode-short";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralMaxlength_pass-bnode-short.val> .

<validation/manifest#1nonliteralMaxlength_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL MAXLENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMaxlength_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralMaxlength_pass-iri-equal.val> .

<validation/manifest#1nonliteralMaxlength_pass-iri-short> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL MAXLENGTH 19 } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMaxlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMaxlength_pass-iri-short";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralMaxlength_pass-iri-short.val> .

<validation/manifest#1nonliteralMinlength_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL MINLENGTH 19 } on { <s1> <p1> _:abcd }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMinlength_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1nonliteralMinlength_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL MINLENGTH 19 } on { <s1> <p1> <o> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMinlength_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1nonliteralMinlength_pass-bnode-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL MINLENGTH 19 } on { <s1> <p1> _:abcdefghijklmnopqrs }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdefghijklmnopqrs.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMinlength_pass-bnode-equal";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralMinlength_pass-bnode-equal.val> .

<validation/manifest#1nonliteralMinlength_pass-bnode-long> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL MINLENGTH 19 } on { <s1> <p1> _:abcdefghijklmnopqrst }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babcdefghijklmnopqrs.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMinlength_pass-bnode-long";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralMinlength_pass-bnode-long.val> .

<validation/manifest#1nonliteralMinlength_pass-iri-equal> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL MINLENGTH 19 } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMinlength_pass-iri-equal";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralMinlength_pass-iri-equal.val> .

<validation/manifest#1nonliteralMinlength_pass-iri-long> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL MINLENGTH 19 } on { <s1> <p1> <o1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralMinlength_pass-iri-long";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralMinlength_pass-iri-long.val> .

<validation/manifest#1nonliteralPattern_fail-bnode-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL PATTERN \"bc$\" } on { <s1> <p1> _:a }";
   mf:action [
     sht:data <validation/Is1_Ip1_Ba.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralPattern_fail-bnode-short";
   mf:status mf:proposed .

<validation/manifest#1nonliteralPattern_fail-iri-short> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL PATTERN \"bc$\" } on { <s1> <p1> <a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Ia.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralPattern_fail-iri-short";
   mf:status mf:proposed .

<validation/manifest#1nonliteralPattern_fail-lit-match> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL PATTERN \"bc$\" } on { <s1> <p1> \"ab\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralPattern_fail-lit-match";
   mf:status mf:proposed .

<validation/manifest#1nonliteralPattern_pass-bnode-long> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL PATTERN \"bc$\" } on { <s1> <p1> _:abc }";
   mf:action [
     sht:data <validation/Is1_Ip1_Babc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralPattern_pass-bnode-long";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralPattern_pass-bnode-long.val> .

<validation/manifest#1nonliteralPattern_pass-bnode-match> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL PATTERN \"bc$\" } on { <s1> <p1> _:bc }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bbc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralPattern_pass-bnode-match";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralPattern_pass-bnode-match.val> .

<validation/manifest#1nonliteralPattern_pass-iri-long> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL PATTERN \"bc$\" } on { <s1> <p1> <abc> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iabc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralPattern_pass-iri-long";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralPattern_pass-iri-long.val> .

<validation/manifest#1nonliteralPattern_pass-iri-match> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL PATTERN \"bc$\" } on { <s1> <p1> <bc> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Ibc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteralPattern.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteralPattern_pass-iri-match";
   mf:status mf:proposed;
   sht:result <validation/1nonliteralPattern_pass-iri-match.val> .

<validation/manifest#1nonliteral_fail-literal> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> NONLITERAL } on { <s1> <p1> \"ab\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteral.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteral_fail-literal";
   mf:status mf:proposed .

<validation/manifest#1nonliteral_pass-bnode> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL } on { <s1> <p1> _:ab }";
   mf:action [
     sht:data <validation/Is1_Ip1_Bab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteral.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteral_pass-bnode";
   mf:status mf:proposed;
   sht:result <validation/1nonliteral_pass-bnode.val> .

<validation/manifest#1nonliteral_pass-iri> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> NONLITERAL } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1nonliteral.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1nonliteral_pass-iri";
   mf:status mf:proposed;
   sht:result <validation/1nonliteral_pass-iri.val> .

<validation/manifest#1refbnode1_fail-g1-arc> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> @_:S2 } _:S2 { <p2> . } on { <n1> <p2> <n2> . <n2> <p2> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip2_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1refbnode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1refbnode1_fail-g1-arc";
   mf:status mf:proposed .

<validation/manifest#1refbnode1_fail-g2-arc> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> @_:S2 } _:S2 { <p2> . } on { <n1> <p1> <n2> . <n2> <p1> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip1_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1refbnode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1refbnode1_fail-g2-arc";
   mf:status mf:proposed .

<validation/manifest#1refbnode1_pass> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> @_:S2 } _:S2 { <p2> . } on { <n1> <p1> <n2> . <n2> <p2> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1refbnode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1refbnode1_pass";
   mf:status mf:proposed;
   sht:result <validation/1refbnode1_pass.val> .

<validation/manifest#1val1DECIMAL_00> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [0.0] } on { <s> <p1> .0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC_0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1DECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1DECIMAL_00";
   mf:status mf:proposed .

<validation/manifest#1val1DECIMAL_Lab> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [0.0] } on { <s> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1DECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1DECIMAL_Lab";
   mf:status mf:proposed .

<validation/manifest#1val1DECIMAL_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [0.0] } on { <s> <p1> 0.0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DEC0_0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1DECIMAL.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1DECIMAL_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1DECIMAL_pass.val> .

<validation/manifest#1val1DOUBLE_0_0e0> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [0E0] } on { <s> <p1> 0e0.0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL0_0e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1DOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1DOUBLE_0_0e0";
   mf:status mf:proposed .

<validation/manifest#1val1DOUBLE_pass> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> [0E0] } on { <s> <p1> 0E0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL0E0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1DOUBLE.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1DOUBLE_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1DOUBLE_pass.val> .

<validation/manifest#1val1DOUBLElowercase_0_0e0> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [0e0] } on { <s> <p1> 0e0.0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL0_0e0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1DOUBLElowercase.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1DOUBLElowercase_0_0e0";
   mf:status mf:proposed .

<validation/manifest#1val1DOUBLElowercase_fail-0E0> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [0e0] } on { <s> <p1> 0E0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL0E0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1DOUBLElowercase.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1DOUBLElowercase_fail-0E0";
   mf:status mf:proposed .

<validation/manifest#1val1DOUBLElowercase_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [0e0] } on { <s> <p1> 0e0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_DBL0e0lowercase.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1DOUBLElowercase.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1DOUBLElowercase_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1DOUBLElowercase_pass.val> .

<validation/manifest#1val1INTEGER_00> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [0] } on { <s> <p1> 00 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT00.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1INTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1INTEGER_00";
   mf:status mf:proposed .

<validation/manifest#1val1INTEGER_Lab> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [0] } on { <s> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1INTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1INTEGER_Lab";
   mf:status mf:proposed .

<validation/manifest#1val1INTEGER_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [0] } on { <s> <p1> 0 }";
   mf:action [
     sht:data <validation/Is1_Ip1_INT0.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1INTEGER.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1INTEGER_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1INTEGER_pass.val> .

<validation/manifest#1val1IRIREFDatatype_LaDTbloodType> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ['ab'^^my:bloodType] } on { <s> <p1> 'a'^^my:bloodType }";
   mf:action [
     sht:data <validation/Is1_Ip1_LaDTbloodType.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFDatatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFDatatype_LaDTbloodType";
   mf:status mf:proposed .

<validation/manifest#1val1IRIREFDatatype_Lab> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ['ab'^^my:bloodType] } on { <s> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFDatatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFDatatype_Lab";
   mf:status mf:proposed .

<validation/manifest#1val1IRIREFDatatype_LabDTbloodType999> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ['ab'^^my:bloodType] } on { <s> <p1> 'ab'^^my:bloodType999 }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabDTbloodType999.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFDatatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFDatatype_LabDTbloodType999";
   mf:status mf:proposed .

<validation/manifest#1val1IRIREFDatatype_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> ['ab'^^my:bloodType] } on { <s> <p1> 'ab'^^my:bloodType }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabDTbloodType.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFDatatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFDatatype_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1IRIREFDatatype_pass.val> .

<validation/manifest#1val1IRIREFExtra1One_pass-iri1> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> { <p0> . | <p1> [<o1>], <p2> .? } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFExtra1One.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFExtra1One_pass-iri1";
   mf:status mf:proposed;
   sht:result <validation/1val1IRIREFExtra1One_Is1_Ip1_Io1.val> .

<validation/manifest#1val1IRIREFExtra1One_pass-iri2> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> { <p0> . | <p1> [<o1>], <p2> .? } on { <s> <p1> <o1>, <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1,Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFExtra1One.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFExtra1One_pass-iri2";
   mf:status mf:proposed;
   sht:result <validation/1val1IRIREFExtra1One_Is1_Ip1_Io1.val> .

<validation/manifest#1val1IRIREFExtra1_pass-iri1> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> { <p1> [<o1>] } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFExtra1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFExtra1_pass-iri1";
   mf:status mf:proposed;
   sht:result <validation/1val1IRIREFExtra1_Is1_Ip1_Io1.val> .

<validation/manifest#1val1IRIREFExtra1_pass-iri2> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> { <p1> [<o1>] } on { <s> <p1> <o1>, <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1,Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFExtra1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFExtra1_pass-iri2";
   mf:status mf:proposed;
   sht:result <validation/1val1IRIREFExtra1_Is1_Ip1_Io1.val> .

<validation/manifest#1val1IRIREFExtra1p2_fail-iri2> a sht:ValidationFailure;
   rdfs:comment "<S> EXTRA <p2> { <p1> [<o1>] } on { <s> <p1> <o1>, <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1,Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFExtra1p2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFExtra1p2_fail-iri2";
   mf:status mf:proposed .

<validation/manifest#1val1IRIREFExtra1p2_pass-iri1> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p2> { <p1> [<o1>] } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREFExtra1p2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREFExtra1p2_pass-iri1";
   mf:status mf:proposed;
   sht:result <validation/1val1IRIREFExtra1p2_Is1_Ip1_Io1.val> .

<validation/manifest#1val1IRIREF_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [<v1>] } on { <s> <p1> <v1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREF.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREF_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1IRIREF_pass.val> .

<validation/manifest#1val1IRIREF_v1v2> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v1>] } on { <s> <p1> <v1>, <v2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1,Iv2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREF.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREF_v1v2";
   mf:status mf:proposed .

<validation/manifest#1val1IRIREF_v2> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v1>] } on { <s> <p1> <v2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1IRIREF.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1IRIREF_v2";
   mf:status mf:proposed .

<validation/manifest#1val1LANGTAG_LaLTen-fr> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ['ab'@en-fr] } on { <s> <p1> 'a'@en-fr }";
   mf:action [
     sht:data <validation/Is1_Ip1_LaLTen-fr.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1LANGTAG.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1LANGTAG_LaLTen-fr";
   mf:status mf:proposed .

<validation/manifest#1val1LANGTAG_Lab> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ['ab'@en-fr] } on { <s> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1LANGTAG.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1LANGTAG_Lab";
   mf:status mf:proposed .

<validation/manifest#1val1LANGTAG_LabLTen> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ['ab'@en-fr] } on { <s> <p1> 'ab'@en }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabLTen.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1LANGTAG.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1LANGTAG_LabLTen";
   mf:status mf:proposed .

<validation/manifest#1val1LANGTAG_LabLTen-fr-jura> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ['ab'@en-fr] } on { <s> <p1> 'ab'@en-fr-jura }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabLTen-fr-jura.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1LANGTAG.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1LANGTAG_LabLTen-fr-jura";
   mf:status mf:proposed .

<validation/manifest#1val1LANGTAG_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> ['ab'@en-fr] } on { <s> <p1> 'ab'@en-fr }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabLTen-fr.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1LANGTAG.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1LANGTAG_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1LANGTAG_pass.val> .

<validation/manifest#1val1dotMinusiri3_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [.-<v1>-<v2>-<v3>] } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiri3_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1dotMinusiri3_pass.val> .

<validation/manifest#1val1dotMinusiri3_v1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [.-<v1>-<v2>-<v3>] } on { <s1> <p1> <v1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiri3_v1";
   mf:status mf:proposed .

<validation/manifest#1val1dotMinusiri3_v2> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [.-<v1>-<v2>-<v3>] } on { <s1> <p1> <v2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiri3_v2";
   mf:status mf:proposed .

<validation/manifest#1val1dotMinusiri3_v3> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [.-<v1>-<v2>-<v3>] } on { <s> <p1> <v3> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv3.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiri3_v3";
   mf:status mf:proposed .

<validation/manifest#1val1dotMinusiriStem3_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [.-<v1>~-<v2>~-<v3>~] } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiriStem3_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1dotMinusiriStem3_pass.val> .

<validation/manifest#1val1dotMinusiriStem3_v1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [.-<v1>~-<v2>~-<v3>~] } on { <s1> <p1> <v1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiriStem3_v1";
   mf:status mf:proposed .

<validation/manifest#1val1dotMinusiriStem3_v1a> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [.-<v1>~-<v2>~-<v3>~] } on { <s1> <p1> <v1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiriStem3_v1a";
   mf:status mf:proposed .

<validation/manifest#1val1dotMinusiriStem3_v2> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [.-<v1>~-<v2>~-<v3>~] } on { <s1> <p1> <v2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiriStem3_v2";
   mf:status mf:proposed .

<validation/manifest#1val1dotMinusiriStem3_v3> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [.-<v1>~-<v2>~-<v3>~] } on { <s> <p1> <v3> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv3.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1dotMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1dotMinusiriStem3_v3";
   mf:status mf:proposed .

<validation/manifest#1val1false_ab> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [false] } on { <s> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1false.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1false_ab";
   mf:status mf:proposed .

<validation/manifest#1val1false_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [false] } on { <s> <p1> true }";
   mf:action [
     sht:data <validation/Is1_Ip1_false.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1false.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1false_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1false_pass.val> .

<validation/manifest#1val1false_true> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [false] } on { <s> <p1> false }";
   mf:action [
     sht:data <validation/Is1_Ip1_true.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1false.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1false_true";
   mf:status mf:proposed .

<validation/manifest#1val1iriStemMinusiri3_passIv> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [<v>-<v1>-<v2>-<v3>] } on { <s> <p1> <v> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiri3_passIv";
   mf:status mf:proposed;
   sht:result <validation/1val1iriStemMinusiri3_passIv.val> .

<validation/manifest#1val1iriStemMinusiri3_passIv1a> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [<v>-<v1>-<v2>-<v3>] } on { <s> <p1> <v1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiri3_passIv1a";
   mf:status mf:proposed;
   sht:result <validation/1val1iriStemMinusiri3_passIv1a.val> .

<validation/manifest#1val1iriStemMinusiri3_passIv4> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [<v>-<v1>-<v2>-<v3>] } on { <s> <p1> <v4> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiri3_passIv4";
   mf:status mf:proposed;
   sht:result <validation/1val1iriStemMinusiri3_passIv4.val> .

<validation/manifest#1val1iriStemMinusiri3_v1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v>-<v1>-<v2>-<v3>] } on { <s1> <p1> <v1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiri3_v1";
   mf:status mf:proposed .

<validation/manifest#1val1iriStemMinusiri3_v2> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v>-<v1>-<v2>-<v3>] } on { <s1> <p1> <v2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiri3_v2";
   mf:status mf:proposed .

<validation/manifest#1val1iriStemMinusiri3_v3> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v>-<v1>-<v2>-<v3>] } on { <s> <p1> <v3> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv3.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiri3_v3";
   mf:status mf:proposed .

<validation/manifest#1val1iriStemMinusiriStem3_passIv> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [<v>~-<v1>~-<v2>~-<v3>~] } on { <s> <p1> <v> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiriStem3_passIv";
   mf:status mf:proposed;
   sht:result <validation/1val1iriStemMinusiriStem3_passIv.val> .

<validation/manifest#1val1iriStemMinusiriStem3_passIv4> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [<v>~-<v1>~-<v2>~-<v3>~] } on { <s> <p1> <v4> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv4.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiriStem3_passIv4";
   mf:status mf:proposed;
   sht:result <validation/1val1iriStemMinusiriStem3_passIv4.val> .

<validation/manifest#1val1iriStemMinusiriStem3_v1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v>~-<v1>~-<v2>~-<v3>~] } on { <s1> <p1> <v1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiriStem3_v1";
   mf:status mf:proposed .

<validation/manifest#1val1iriStemMinusiriStem3_v1a> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v>~-<v1>~-<v2>~-<v3>~] } on { <s1> <p1> <v1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiriStem3_v1a";
   mf:status mf:proposed .

<validation/manifest#1val1iriStemMinusiriStem3_v2> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v>~-<v1>~-<v2>~-<v3>~] } on { <s1> <p1> <v2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiriStem3_v2";
   mf:status mf:proposed .

<validation/manifest#1val1iriStemMinusiriStem3_v3> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v>~-<v1>~-<v2>~-<v3>~] } on { <s> <p1> <v3> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv3.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStemMinusiriStem3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStemMinusiriStem3_v3";
   mf:status mf:proposed .

<validation/manifest#1val1iriStem_fail> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [<v1>~] } on { <s1> <p1> <> }";
   mf:action [
     sht:data <validation/Is1_Ip1_I.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStem.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStem_fail";
   mf:status mf:proposed .

<validation/manifest#1val1iriStem_passv1> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [<v1>~] } on { <s> <p1> <v1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStem.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStem_passv1";
   mf:status mf:proposed;
   sht:result <validation/1val1iriStem_passv1.val> .

<validation/manifest#1val1iriStem_passv1a> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [<v1>~] } on { <s> <p1> <v1a> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1a.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1iriStem.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1iriStem_passv1a";
   mf:status mf:proposed;
   sht:result <validation/1val1iriStem_passv1a.val> .

<validation/manifest#1val1refvsMinusiri3_pass> a sht:ValidationTest;
   rdfs:comment "$<vs1> = [.-<v1>-<v2>-<v3>] <S> { <p1> $<vs1> } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1refvsMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1refvsMinusiri3_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1refvsMinusiri3_pass.val> .

<validation/manifest#1val1refvsMinusiri3_v1> a sht:ValidationFailure;
   rdfs:comment "$<vs1> = [.-<v1>-<v2>-<v3>] <S> { <p1> $<vs1> } on { <s1> <p1> <v1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1refvsMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1refvsMinusiri3_v1";
   mf:status mf:proposed .

<validation/manifest#1val1refvsMinusiri3_v2> a sht:ValidationFailure;
   rdfs:comment "$<vs1> = [.-<v1>-<v2>-<v3>] <S> { <p1> $<vs1> } on { <s1> <p1> <v2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1refvsMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1refvsMinusiri3_v2";
   mf:status mf:proposed .

<validation/manifest#1val1refvsMinusiri3_v3> a sht:ValidationFailure;
   rdfs:comment "$<vs1> = [.-<v1>-<v2>-<v3>] <S> { <p1> $<vs1> } on { <s> <p1> <v3> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv3.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1refvsMinusiri3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1refvsMinusiri3_v3";
   mf:status mf:proposed .

<validation/manifest#1val1true_ab> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [true] } on { <s> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1true.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1true_ab";
   mf:status mf:proposed .

<validation/manifest#1val1true_false> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> [true] } on { <s> <p1> false }";
   mf:action [
     sht:data <validation/Is1_Ip1_false.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1true.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1true_false";
   mf:status mf:proposed .

<validation/manifest#1val1true_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> [true] } on { <s> <p1> true }";
   mf:action [
     sht:data <validation/Is1_Ip1_true.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1true.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1true_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1true_pass.val> .

<validation/manifest#1val1vExpr1AND1AND1Ref3_failvc1> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1AND1Ref3_failvc1";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1AND1AND1Ref3_failvc2> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'ababab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lababab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1AND1Ref3_failvc2";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1AND1AND1Ref3_failvc3> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'baba' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lbaba.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1AND1Ref3_failvc3";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1AND1AND1Ref3_pass> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'abab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1AND1Ref3_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1AND1AND1Ref3_pass.val> .

<validation/manifest#1val1vExpr1AND1OR1Ref3_failvc1vc2vc3> a sht:ValidationFailure;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND ... @<vc3> } on { <s1> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1OR1Ref3_failvc1vc2vc3";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1AND1OR1Ref3_failvc1vc3> a sht:ValidationFailure;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND ... @<vc3> } on { <s1> <p1> 'abc' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labc.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1OR1Ref3_failvc1vc3";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1AND1OR1Ref3_failvc2vc3> a sht:ValidationFailure;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND ... @<vc3> } on { <s1> <p1> 'abcdef' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1OR1Ref3_failvc2vc3";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1AND1OR1Ref3_pass-vc1vc2> a sht:ValidationTest;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND @<vc2> OR @<vc3> } on { <s1> <p1> 'abcd' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1OR1Ref3_pass-vc1vc2";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1AND1OR1Ref3_pass-vc1vc2.val> .

<validation/manifest#1val1vExpr1AND1OR1Ref3_pass-vc1vc2vc3> a sht:ValidationTest;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND @<vc2> OR @<vc3> } on { <s1> <p1> 'abab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1OR1Ref3_pass-vc1vc2vc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1AND1OR1Ref3_pass-vc1vc2vc3.val> .

<validation/manifest#1val1vExpr1AND1OR1Ref3_pass-vc1vc3> a sht:ValidationTest;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND @<vc2> OR @<vc3> } on { <s1> <p1> 'ababab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lababab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1AND1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1AND1OR1Ref3_pass-vc1vc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1AND1OR1Ref3_pass-vc1vc3.val> .

<validation/manifest#1val1vExpr1OR1AND1Ref3_failvc1vc2> a sht:ValidationFailure;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND ... @<vc3> } on { <s1> <p1> 'abab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1AND1Ref3_failvc1vc2";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1OR1AND1Ref3_failvc1vc2vc3> a sht:ValidationFailure;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND ... @<vc3> } on { <s1> <p1> 'abcd' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1AND1Ref3_failvc1vc2vc3";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1OR1AND1Ref3_failvc1vc3> a sht:ValidationFailure;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND ... @<vc3> } on { <s1> <p1> 'cd' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1AND1Ref3_failvc1vc3";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1OR1AND1Ref3_pass-vc1> a sht:ValidationTest;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND @<vc2> OR @<vc3> } on { <s1> <p1> 'abcdef' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1AND1Ref3_pass-vc1";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1OR1AND1Ref3_pass-vc1.val> .

<validation/manifest#1val1vExpr1OR1AND1Ref3_pass-vc1vc3> a sht:ValidationTest;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND @<vc2> OR @<vc3> } on { <s1> <p1> 'ababab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lababab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1AND1Ref3_pass-vc1vc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1OR1AND1Ref3_pass-vc1vc3.val> .

<validation/manifest#1val1vExpr1OR1AND1Ref3_pass-vc2vc3> a sht:ValidationTest;
   rdfs:comment "<vc1> ... <vc3> ... <S> { <p1> @<vc1> AND @<vc2> OR @<vc3> } on { <s1> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1AND1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1AND1Ref3_pass-vc2vc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1OR1AND1Ref3_pass-vc2vc3.val> .

<validation/manifest#1val1vExpr1OR1OR1Ref3_fail> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1OR1Ref3_fail";
   mf:status mf:proposed .

<validation/manifest#1val1vExpr1OR1OR1Ref3_passvc1> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1OR1Ref3_passvc1";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1OR1OR1Ref3_passvc1.val> .

<validation/manifest#1val1vExpr1OR1OR1Ref3_passvc1vc2vc3> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'abcdef' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1OR1Ref3_passvc1vc2vc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1OR1OR1Ref3_passvc1vc2vc3.val> .

<validation/manifest#1val1vExpr1OR1OR1Ref3_passvc2> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'cd' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1OR1Ref3_passvc2";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1OR1OR1Ref3_passvc2.val> .

<validation/manifest#1val1vExpr1OR1OR1Ref3_passvc3> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'ef' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExpr1OR1OR1Ref3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExpr1OR1OR1Ref3_passvc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExpr1OR1OR1Ref3_passvc3.val> .

<validation/manifest#1val1vExprAND3_failvc1> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> MINLENGTH 4 AND MAXLENGTH 5 AND ~ '(ab)+' } on { <s1> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprAND3_failvc1";
   mf:status mf:proposed .

<validation/manifest#1val1vExprAND3_failvc2> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> MINLENGTH 4 AND MAXLENGTH 5 AND ~ '(ab)+' } on { <s1> <p1> 'ababab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lababab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprAND3_failvc2";
   mf:status mf:proposed .

<validation/manifest#1val1vExprAND3_failvc3> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> MINLENGTH 4 AND MAXLENGTH 5 AND ~ '(ab)+' } on { <s1> <p1> 'baba' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lbaba.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprAND3_failvc3";
   mf:status mf:proposed .

<validation/manifest#1val1vExprAND3_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> MINLENGTH 4 AND MAXLENGTH 5 AND ~ '(ab)+' } on { <s1> <p1> 'abab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprAND3_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprAND3_pass.val> .

<validation/manifest#1val1vExprOR3_fail> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprOR3_fail";
   mf:status mf:proposed .

<validation/manifest#1val1vExprOR3_passvc1> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprOR3_passvc1";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprOR3_passvc1.val> .

<validation/manifest#1val1vExprOR3_passvc1vc2vc3> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'abcdef' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprOR3_passvc1vc2vc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprOR3_passvr1vr2vr3.val> .

<validation/manifest#1val1vExprOR3_passvc2> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'cd' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprOR3_passvc2";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprOR3_passvc2.val> .

<validation/manifest#1val1vExprOR3_passvc3> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'ef' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprOR3_passvc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprOR3_passvc3.val> .

<validation/manifest#1val1vExprRefAND3_failvc1> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefAND3_failvc1";
   mf:status mf:proposed .

<validation/manifest#1val1vExprRefAND3_failvc2> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'ababab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lababab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefAND3_failvc2";
   mf:status mf:proposed .

<validation/manifest#1val1vExprRefAND3_failvc3> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'baba' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lbaba.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefAND3_failvc3";
   mf:status mf:proposed .

<validation/manifest#1val1vExprRefAND3_pass> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'abab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefAND3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefAND3_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprRefAND3_pass.val> .

<validation/manifest#1val1vExprRefIRIREF1_fail-lit-short> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = LITERAL MINLENGTH 5 <S1> { <p1> $<vc1> } on { <s1> <p1> \"abcd\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefIRIREF1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefIRIREF1_fail-lit-short";
   mf:status mf:proposed .

<validation/manifest#1val1vExprRefIRIREF1_pass-lit-equal> a sht:ValidationTest;
   rdfs:comment "$<vc1> = LITERAL MINLENGTH 5 <S1> { <p1> $<vc1> } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefIRIREF1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefIRIREF1_pass-lit-equal";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprRefIRIREF1_pass-lit-equal.val> .

<validation/manifest#1val1vExprRefOR3_fail> a sht:ValidationFailure;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'a' }";
   mf:action [
     sht:data <validation/Is1_Ip1_La.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefOR3_fail";
   mf:status mf:proposed .

<validation/manifest#1val1vExprRefOR3_passvc1> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'ab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefOR3_passvc1";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprRefOR3_passvc1.val> .

<validation/manifest#1val1vExprRefOR3_passvc1vc2vc3> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'abcdef' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcdef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefOR3_passvc1vc2vc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprRefOR3_passvc1vc2vc3.val> .

<validation/manifest#1val1vExprRefOR3_passvc2> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'cd' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefOR3_passvc2";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprRefOR3_passvc2.val> .

<validation/manifest#1val1vExprRefOR3_passvc3> a sht:ValidationTest;
   rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'ef' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Lef.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefOR3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefOR3_passvc3";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprRefOR3_passvc3.val> .

<validation/manifest#1val1vExprRefbnode1_fail-lit-short> a sht:ValidationFailure;
   rdfs:comment "$_:vc1 = LITERAL MINLENGTH 5 <S1> { <p1> $_:vc1 } on { <s1> <p1> \"abcd\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcd.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefbnode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefbnode1_fail-lit-short";
   mf:status mf:proposed .

<validation/manifest#1val1vExprRefbnode1_pass-lit-equal> a sht:ValidationTest;
   rdfs:comment "$_:vc1 = LITERAL MINLENGTH 5 <S1> { <p1> $_:vc1 } on { <s1> <p1> \"abcde\" }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labcde.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vExprRefbnode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vExprRefbnode1_pass-lit-equal";
   mf:status mf:proposed;
   sht:result <validation/1val1vExprRefbnode1_pass-lit-equal.val> .

<validation/manifest#1val1vShapeANDRef3_pass> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> minlength 4 } AND { <p1> maxlength 5 } AND { <p1> pattern '(ab)+' } on { <s1> <p1> 'abab' }";
   mf:action [
     sht:data <validation/Is1_Ip1_Labab.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val1vShapeANDRef3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val1vShapeANDRef3_pass";
   mf:status mf:proposed;
   sht:result <validation/1val1vShapeANDRef3_pass.val> .

<validation/manifest#1val2IRIREFExtra1_fail-iri2> a sht:ValidationFailure;
   rdfs:comment "<S> EXTRA <p1> { <p1> [<o1> <o2>] } on { <s> <p1> <o1>, <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1,Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val2IRIREFExtra1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val2IRIREFExtra1_fail-iri2";
   mf:status mf:proposed .

<validation/manifest#1val2IRIREFExtra1_pass-iri-bnode> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> { <p1> [<o1> <o2>] } on { <s> <p1> <o1>, _:o2 }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1,Bo2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val2IRIREFExtra1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val2IRIREFExtra1_pass-iri-bnode";
   mf:status mf:proposed;
   sht:result <validation/1val2IRIREFExtra1_bnode_Is1_Ip1_Io1.val> .

<validation/manifest#1val2IRIREFPlusExtra1_pass-iri2> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> { <p1> [<o1> <o2>]+ } on { <s> <p1> <o1>, <o2> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1,Io2.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/1val2IRIREFPlusExtra1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "1val2IRIREFPlusExtra1_pass-iri2";
   mf:status mf:proposed;
   sht:result <validation/1val2IRIREFPlusExtra1_Is1_Ip1_Io1,Io2.val> .

<validation/manifest#2EachInclude1-after_pass> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> ., &<S2> } <S2> { <p2> . } on { <n1> <p1> \"X\" ; <p2> \"Y\" }";
   mf:action [
     sht:data <validation/In1_Ip1_LX.In1_Ip2_LY.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/2EachInclude1-after.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "2EachInclude1-after_pass";
   mf:status mf:proposed;
   sht:result <validation/2EachInclude1-after_pass.val> .

<validation/manifest#2EachInclude1_pass> a sht:ValidationTest;
   rdfs:comment "<S1> { &<S2>, <p1> . } <S2> { <p2> . } on { <n1> <p1> \"X\" ; <p2> \"Y\" }";
   mf:action [
     sht:data <validation/In1_Ip1_LX.In1_Ip2_LY.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/2EachInclude1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "2EachInclude1_pass";
   mf:status mf:proposed;
   sht:result <validation/2EachInclude1_pass.val> .

<validation/manifest#2OneInclude1-after_pass> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> . | &<S2> } <S2> { <p2> . } on { <n1> <p1> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/2OneInclude1-after.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "2OneInclude1-after_pass";
   mf:status mf:proposed;
   sht:result <validation/2OneInclude1_pass.val> .

<validation/manifest#2OneInclude1_pass> a sht:ValidationTest;
   rdfs:comment "<S1> { &<S2> | <p1> . } <S2> { <p2> . } on { <n1> <p1> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/2OneInclude1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "2OneInclude1_pass";
   mf:status mf:proposed;
   sht:result <validation/2OneInclude1_pass.val> .

<validation/manifest#2dot_fail-empty-err> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> ., <p2> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "2dot_fail-empty-err";
   mf:status mf:proposed;
   sht:result <validation/2dot_missing1.err> .

<validation/manifest#3circularRef1_pass-closed> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> ., <p2> @<S2>? } <S2> { <p3> @<S3> } <S3> { <p4> @<S1> } <S4> { <p5> . } on { <n1> <p1> \"X\" ; <p2> <n2> . <n2> <p3> <n3> . <n3> <p4> <n1> }";
   mf:action [
     sht:data <validation/3circularRef1_pass-closed.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/3circularRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "3circularRef1_pass-closed";
   mf:status mf:proposed;
   sht:result <validation/3circularRef1_pass-closed.val> .

<validation/manifest#3circularRef1_pass-open> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> ., <p2> @<S2>? } <S2> { <p3> @<S3> } <S3> { <p4> @<S1> } <S4> { <p5> . } on { <n1> <p1> \"X\" ; <p2> <n2> . <n2> <p3> <n3> . <n3> <p4> <n5> . <n5> <p1> \"X\" }";
   mf:action [
     sht:data <validation/3circularRef1_pass-open.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/3circularRef1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "3circularRef1_pass-open";
   mf:status mf:proposed;
   sht:result <validation/3circularRef1_pass-open.val> .

<validation/manifest#3groupdot3Extra_pass-iri1> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> EXTRA <p2> EXTRA <p3> { <p1> [<o1>], <p2> [<o2>], <p3> [<o3>] } on { <s> <p1> <o1>; <p2> <o2>; <p3> <o3> }";
   mf:action [
     sht:data <validation/Is_Ipn_IonX3.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/3groupdot3Extra.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "3groupdot3Extra_pass-iri1";
   mf:status mf:proposed;
   sht:result <validation/3groupdotExtra3_Is_Ipn_IonX3.val> .

<validation/manifest#3groupdot3Extra_pass-iri2> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> EXTRA <p2> EXTRA <p3> { <p1> [<o1>], <p2> [<o2>], <p3> [<o3>] } on { <s> <p1> <o1>, <o1a>; <p2> <o2>, <o2a>; <p3> <o3>, <o3a> }";
   mf:action [
     sht:data <validation/Is_Ipn_IonX3.Is_Ipn_IonaX3.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/3groupdot3Extra.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "3groupdot3Extra_pass-iri2";
   mf:status mf:proposed;
   sht:result <validation/3groupdotExtra3_Is_Ipn_IonX3.val> .

<validation/manifest#3groupdotExtra3NLex_pass-iri1> a sht:ValidationTest;
   rdfs:comment "PREFIX ex: <http://a.example/> <S> EXTRA ex:p1 ex:p2 ex:p3 { <p1> [<o1>], <p2> [<o2>], <p3> [<o3>] } on { <s> <p1> <o1>; <p2> <o2>; <p3> <o3> }";
   mf:action [
     sht:data <validation/Is_Ipn_IonX3.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/3groupdotExtra3NLex.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "3groupdotExtra3NLex_pass-iri1";
   mf:status mf:proposed;
   sht:result <validation/3groupdotExtra3_Is_Ipn_IonX3.val> .

<validation/manifest#3groupdotExtra3NLex_pass-iri2> a sht:ValidationTest;
   rdfs:comment "PREFIX ex: <http://a.example/> <S> EXTRA ex:p1 ex:p2 ex:p3 { <p1> [<o1>], <p2> [<o2>], <p3> [<o3>] } on { <s> <p1> <o1>, <o1a>; <p2> <o2>, <o2a>; <p3> <o3>, <o3a> }";
   mf:action [
     sht:data <validation/Is_Ipn_IonX3.Is_Ipn_IonaX3.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/3groupdotExtra3NLex.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "3groupdotExtra3NLex_pass-iri2";
   mf:status mf:proposed;
   sht:result <validation/3groupdotExtra3_Is_Ipn_IonX3.val> .

<validation/manifest#3groupdotExtra3_pass-iri1> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> <p2> <p3> { <p1> [<o1>], <p2> [<o2>], <p3> [<o3>] } on { <s> <p1> <o1>; <p2> <o2>; <p3> <o3> }";
   mf:action [
     sht:data <validation/Is_Ipn_IonX3.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/3groupdotExtra3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "3groupdotExtra3_pass-iri1";
   mf:status mf:proposed;
   sht:result <validation/3groupdotExtra3_Is_Ipn_IonX3.val> .

<validation/manifest#3groupdotExtra3_pass-iri2> a sht:ValidationTest;
   rdfs:comment "<S> EXTRA <p1> <p2> <p3> { <p1> [<o1>], <p2> [<o2>], <p3> [<o3>] } on { <s> <p1> <o1>, <o1a>; <p2> <o2>, <o2a>; <p3> <o3>, <o3a> }";
   mf:action [
     sht:data <validation/Is_Ipn_IonX3.Is_Ipn_IonaX3.ttl>;
     sht:focus <http://a.example/s>;
     sht:schema <schemas/3groupdotExtra3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "3groupdotExtra3_pass-iri2";
   mf:status mf:proposed;
   sht:result <validation/3groupdotExtra3_Is_Ipn_IonX3.val> .

<validation/manifest#FocusIRI2groupBnodeNested2groupIRIRef_fail> a sht:ValidationFailure;
   rdfs:comment "<S1> IRI PATTERN '^https?://' { <p1> <dt1> ; <p2> BNODE { <p3> LITERAL ; <p4> IRI PATTERN '^https://' @<S1>? } AND CLOSED { <p3> . ; <p4> . } } on { <n1> <p1> 'ab'^^<dt1> ; <p2> [  <p3> 'ab' ; <p4> ex:n1 ; <p5> 5 ] }";
   mf:action [
     sht:data <validation/FocusIRI2groupBnodeNested3groupIRIRef.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/FocusIRI2groupBnodeNested2groupIRIRef.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "FocusIRI2groupBnodeNested2groupIRIRef_fail";
   mf:status mf:proposed .

<validation/manifest#FocusIRI2groupBnodeNested2groupIRIRef_pass> a sht:ValidationTest;
   rdfs:comment "<S1> IRI PATTERN '^https?://' { <p1> <dt1> ; <p2> BNODE { <p3> LITERAL ; <p4> IRI PATTERN '^https://' @<S1>? } AND CLOSED { <p3> . ; <p4> . } } on { <n1> <p1> 'ab'^^<dt1> ; <p2> [  <p3> 'ab' ; <p4> ex:n1 ] }";
   mf:action [
     sht:data <validation/FocusIRI2groupBnodeNested2groupIRIRef.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/FocusIRI2groupBnodeNested2groupIRIRef.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "FocusIRI2groupBnodeNested2groupIRIRef_pass";
   mf:status mf:proposed;
   sht:result <validation/FocusIRI2groupBnodeNested2groupIRIRef_pass.val> .

<validation/manifest#NOT1dotOR2dotX3AND1_fail-NoShape1> a sht:ValidationFailure;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip2_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dotX3AND1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dotX3AND1_fail-NoShape1";
   mf:status mf:proposed .

<validation/manifest#NOT1dotOR2dotX3AND1_fail-Shape2> a sht:ValidationFailure;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dotX3AND1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dotX3AND1_fail-Shape2";
   mf:status mf:proposed .

<validation/manifest#NOT1dotOR2dotX3AND1_fail-empty> a sht:ValidationFailure;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip2_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dotX3AND1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dotX3AND1_fail-empty";
   mf:status mf:proposed .

<validation/manifest#NOT1dotOR2dotX3AND1_pass-Shape2> a sht:ValidationTest;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In1_Ip2_In3.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dotX3AND1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dotX3AND1_pass-Shape2";
   mf:status mf:proposed;
   sht:result <validation/NOT1dotOR2dotX3AND1_pass-Shape2.val> .

<validation/manifest#NOT1dotOR2dotX3_fail-Shape2> a sht:ValidationFailure;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dotX3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dotX3_fail-Shape2";
   mf:status mf:proposed .

<validation/manifest#NOT1dotOR2dotX3_pass-NoShape1> a sht:ValidationTest;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip2_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dotX3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dotX3_pass-NoShape1";
   mf:status mf:proposed;
   sht:result <validation/NOT1dotOR2dotX3_pass-empty.val> .

<validation/manifest#NOT1dotOR2dotX3_pass-Shape2> a sht:ValidationTest;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In1_Ip2_In3.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dotX3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dotX3_pass-Shape2";
   mf:status mf:proposed;
   sht:result <validation/NOT1dotOR2dotX3_pass-Shape2.val> .

<validation/manifest#NOT1dotOR2dotX3_pass-empty> a sht:ValidationTest;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dotX3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dotX3_pass-empty";
   mf:status mf:proposed;
   sht:result <validation/NOT1dotOR2dotX3_pass-empty.val> .

<validation/manifest#NOT1dotOR2dot_fail-Shape2> a sht:ValidationFailure;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dot_fail-Shape2";
   mf:status mf:proposed .

<validation/manifest#NOT1dotOR2dot_pass-NoShape1> a sht:ValidationTest;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip2_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dot_pass-NoShape1";
   mf:status mf:proposed;
   sht:result <validation/NOT1dotOR2dot_pass-empty.val> .

<validation/manifest#NOT1dotOR2dot_pass-Shape2> a sht:ValidationTest;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In1_Ip2_In3.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dot_pass-Shape2";
   mf:status mf:proposed;
   sht:result <validation/NOT1dotOR2dot_pass-Shape2.val> .

<validation/manifest#NOT1dotOR2dot_pass-empty> a sht:ValidationTest;
   rdfs:comment "@@";
   mf:action [
     sht:data <validation/empty.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/NOT1dotOR2dot.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "NOT1dotOR2dot_pass-empty";
   mf:status mf:proposed;
   sht:result <validation/NOT1dotOR2dot_pass-empty.val> .

<validation/manifest#P2T2> a sht:ValidationTest;
   rdfs:comment "<S4> {:a $<P>{2}, :a $<T>{2}} / { <n> :a <pt1>,  <pt2>,  <p>,  <t>}";
   mf:action [
     sht:data <validation/Pstar.ttl>;
     sht:focus <validation/n>;
     sht:schema <validation/Pstar.shex>;
     sht:shape <validation/S4>
   ];
   mf:name "P2T2";
   mf:status mf:proposed;
   sht:result <validation/P2T2.val> .

<validation/manifest#PTstar> a sht:ValidationTest;
   rdfs:comment "<S2> {:a $<P>, :a $<T>*} / { <n> :a <pt1>,  <pt2>,  <p>,  <t>}";
   mf:action [
     sht:data <validation/Pstar.ttl>;
     sht:focus <validation/n>;
     sht:schema <validation/Pstar.shex>;
     sht:shape <validation/S2>
   ];
   mf:name "PTstar";
   mf:status mf:proposed;
   sht:result <validation/PTstar.val> .

<validation/manifest#PTstar-greedy-fail> a sht:ValidationFailure;
   rdfs:comment "<S2> {:a $<P>, :a $<T>*} / { <n> :a <pt1>,  <pt2>,  <p>,  <t>}";
   mf:action [
     sht:data <validation/Pstar.ttl>;
     sht:focus <validation/n>;
     sht:schema <validation/Pstar.shex>;
     sht:shape <validation/S2>
   ];
   mf:name "PTstar-greedy-fail";
   mf:status mf:proposed .

<validation/manifest#PTstar-greedy-rewrite> a sht:ValidationTest;
   rdfs:comment "<S2> {:a $<P>, :a $<T>*} / { <n> :a <pt1>,  <pt2>,  <p>,  <t>}";
   mf:action [
     sht:data <validation/Pstar.ttl>;
     sht:focus <validation/n>;
     sht:schema <validation/Pstar-greedy-rewrite.shex>;
     sht:shape <validation/S2>
   ];
   mf:name "PTstar-greedy-rewrite";
   mf:status mf:proposed;
   sht:result <validation/Pstar-greedy-rewrite.val> .

<validation/manifest#PstarT> a sht:ValidationTest;
   rdfs:comment "<S1> {:a $<P>*, :a $<T>} / { <n> :a <pt1>,  <pt2>,  <p>,  <t>}";
   mf:action [
     sht:data <validation/Pstar.ttl>;
     sht:focus <validation/n>;
     sht:schema <validation/Pstar.shex>;
     sht:shape <validation/S1>
   ];
   mf:name "PstarT";
   mf:status mf:proposed;
   sht:result <validation/PstarT.val> .

<validation/manifest#PstarT-greedy> a sht:ValidationTest;
   rdfs:comment "<S1> {:a $<P>*, :a $<T>} / { <n> :a <pt1>,  <pt2>,  <p>,  <t>}";
   mf:action [
     sht:data <validation/Pstar.ttl>;
     sht:focus <validation/n>;
     sht:schema <validation/Pstar.shex>;
     sht:shape <validation/S1>
   ];
   mf:name "PstarT-greedy";
   mf:status mf:proposed;
   sht:result <validation/PstarT.val> .

<validation/manifest#PstarTstar> a sht:ValidationTest;
   rdfs:comment "<S3> {:a $<P>*, :a $<T>*} / { <n> :a <pt1>,  <pt2>,  <p>,  <t>}";
   mf:action [
     sht:data <validation/Pstar.ttl>;
     sht:focus <validation/n>;
     sht:schema <validation/Pstar.shex>;
     sht:shape <validation/S3>
   ];
   mf:name "PstarTstar";
   mf:status mf:proposed;
   sht:result <validation/PstarTstar.val> .

<validation/manifest#bnode1dot_fail-missing> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> . } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/bnode1dot.shex>;
     sht:shape _:b41
   ];
   mf:name "bnode1dot_fail-missing";
   mf:status mf:proposed .

<validation/manifest#bnode1dot_pass-others_lexicallyEarlier> a sht:ValidationTest;
   rdfs:comment "_:S1 { <p1> . } on { <s> <p0> <o0>; <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip0_Io0;Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/bnode1dot.shex>;
     sht:shape _:b41
   ];
   mf:name "bnode1dot_pass-others_lexicallyEarlier";
   mf:status mf:proposed;
   sht:result <validation/bnode1dot_pass.val> .

<validation/manifest#false-lead-excluding-value-shape> a sht:ValidationTest;
   rdfs:comment "<S> { :a @<T1>*, (:a @<T2>+ | :b int), :b} <T1>{:b @<T3>} <T2>{:b @<T4>} <T3>{:c .} <T4>{:d .}";
   mf:action [
     sht:data <validation/false-lead-excluding-value-shape.ttl>;
     sht:focus <validation/x>;
     sht:schema <validation/false-lead-excluding-value-shape.shex>;
     sht:shape <validation/S>
   ];
   mf:name "false-lead-excluding-value-shape";
   mf:status mf:proposed;
   sht:result <validation/false-lead-excluding-value-shape.val> .

<validation/manifest#focusdatatype_fail> a sht:ValidationFailure;
   rdfs:comment "<S> <dt1> on {  }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabDTbloodType999.ttl>;
     sht:focus "\"ab\"^^http://a.example/bloodType999";
     sht:schema <schemas/focusdatatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "focusdatatype_fail";
   mf:status mf:proposed .

<validation/manifest#focusdatatype_pass> a sht:ValidationTest;
   rdfs:comment "<S> <dt1> on {  }";
   mf:action [
     sht:data <validation/Is1_Ip1_LabDTbloodType.ttl>;
     sht:focus "\"ab\"^^http://a.example/bloodType";
     sht:schema <schemas/focusdatatype.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "focusdatatype_pass";
   mf:status mf:proposed;
   sht:result <validation/focusdatatype_pass.val> .

<validation/manifest#focusvs_fail> a sht:ValidationFailure;
   rdfs:comment "<S> [<v1> <v2> <v3>] on {  }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1a.ttl>;
     sht:focus <http://a.example/v1a>;
     sht:schema <schemas/focusvs.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "focusvs_fail";
   mf:status mf:proposed .

<validation/manifest#focusvs_pass> a sht:ValidationTest;
   rdfs:comment "<S> [<v1> <v2> <v3>] on {  }";
   mf:action [
     sht:data <validation/Is1_Ip1_Iv1.ttl>;
     sht:focus <http://a.example/v1>;
     sht:schema <schemas/focusvs.shex>;
     sht:shape <http://a.example/vs1>
   ];
   mf:name "focusvs_pass";
   mf:status mf:proposed;
   sht:result <validation/focusvs_pass.val> .

<validation/manifest#nPlus1> a sht:ValidationTest;
   rdfs:comment "<S> { :a .*, (:a .+ | :a .), :a . } / { <x> :a 1, 3 }";
   mf:action [
     sht:data <validation/nPlus1.ttl>;
     sht:focus <validation/x>;
     sht:schema <validation/nPlus1.shex>;
     sht:shape <validation/S>
   ];
   mf:name "nPlus1";
   mf:status mf:proposed;
   sht:result <validation/nPlus1.val> .

<validation/manifest#nPlus1-greedy-rewrite> a sht:ValidationTest;
   rdfs:comment "<S> { :a [1], (:a [2]+ | :a [3]), :a [4]* } / { <x> :a 1, 3 }";
   mf:action [
     sht:data <validation/nPlus1.ttl>;
     sht:focus <validation/x>;
     sht:schema <validation/nPlus1-greedy-rewrite.shex>;
     sht:shape <validation/S>
   ];
   mf:name "nPlus1-greedy-rewrite";
   mf:status mf:proposed;
   sht:result <validation/nPlus1-greedy-rewrite.val> .

<validation/manifest#nPlus1-greedy_fail> a sht:ValidationFailure;
   rdfs:comment "<S> { :a .*, (:a .+ | :a .), :a . } / { <x> :a 1, 3 }";
   mf:action [
     sht:data <validation/nPlus1.ttl>;
     sht:focus <validation/x>;
     sht:schema <validation/nPlus1.shex>;
     sht:shape <validation/S>
   ];
   mf:name "nPlus1-greedy_fail";
   mf:status mf:proposed .

<validation/manifest#open1dotOneopen2dotcloseclose_fail_p1p2p3> a sht:ValidationFailure;
   rdfs:comment ":S1 {(:p1 .|(:p2 .,:p3 .))} / { :s1 :p1 \"p1-0\"; :p2 \"p2-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p1p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open1dotOneopen2dotcloseclose.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open1dotOneopen2dotcloseclose_fail_p1p2p3";
   mf:status mf:proposed .

<validation/manifest#open1dotOneopen2dotcloseclose_pass_p1> a sht:ValidationTest;
   rdfs:comment ":S1 {(:p1 .|(:p2 .,:p3 .))} / { :s1 :p1 \"p1-0\" . }";
   mf:action [
     sht:data <validation/p1.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open1dotOneopen2dotcloseclose.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open1dotOneopen2dotcloseclose_pass_p1";
   mf:status mf:proposed;
   sht:result <validation/1dotOne2dot_pass_p1.val> .

<validation/manifest#open1dotOneopen2dotcloseclose_pass_p2p3> a sht:ValidationTest;
   rdfs:comment ":S1 {(:p1 .|(:p2 .,:p3 .))} / { :s1 :p2 \"p2-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open1dotOneopen2dotcloseclose.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open1dotOneopen2dotcloseclose_pass_p2p3";
   mf:status mf:proposed;
   sht:result <validation/1dotOne2dot_pass_p2p3.val> .

<validation/manifest#open3Onedotclosecard23_fail-p1> a sht:ValidationFailure;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2,3} } / { <s> <p1> \"p1-0\" }";
   mf:action [
     sht:data <validation/p1.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard23_fail-p1";
   mf:status mf:proposed .

<validation/manifest#open3Onedotclosecard23_fail-p1X4> a sht:ValidationFailure;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2,3} } / { <s> <p1> \"p1-n\" }X4";
   mf:action [
     sht:data <validation/p1X4.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard23_fail-p1X4";
   mf:status mf:proposed .

<validation/manifest#open3Onedotclosecard23_pass-p1X2> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2,3} } / { <s> <p1> \"p1-n\" }X2";
   mf:action [
     sht:data <validation/p1X2.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard23_pass-p1X2";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard23-p1X2.val> .

<validation/manifest#open3Onedotclosecard23_pass-p1X3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2,3} } / { <s> <p1> \"p1-n\" }X3";
   mf:action [
     sht:data <validation/p1X3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard23_pass-p1X3";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard23-p1X3.val> .

<validation/manifest#open3Onedotclosecard23_pass-p1p2> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2,3} } / { <s> <p1> \"p1-0\"; <p2> \"p2-0\" }";
   mf:action [
     sht:data <validation/p1p2.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard23_pass-p1p2";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard23-p1p2.val> .

<validation/manifest#open3Onedotclosecard23_pass-p1p2p3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2,3} } / { <s> <p1> \"p1-0\"; <p2> \"p2-0\"; <p3> \"p3-0\" }";
   mf:action [
     sht:data <validation/p1p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard23_pass-p1p2p3";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard23-p1p2p3.val> .

<validation/manifest#open3Onedotclosecard23_pass-p1p3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2,3} } / { <s> <p1> \"p1-0\"; <p3> \"p3-0\" }";
   mf:action [
     sht:data <validation/p1p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard23_pass-p1p3";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard23-p1p3.val> .

<validation/manifest#open3Onedotclosecard23_pass-p2p3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2,3} } / { <s> <p2> \"p2-0\"; <p3> \"p3-0\" }";
   mf:action [
     sht:data <validation/p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard23_pass-p2p3";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard23-p2p3.val> .

<validation/manifest#open3Onedotclosecard2_fail-p1> a sht:ValidationFailure;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2} } / { <s> <p1> \"p1-0\" }";
   mf:action [
     sht:data <validation/p1.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard2_fail-p1";
   mf:status mf:proposed .

<validation/manifest#open3Onedotclosecard2_fail-p1X3> a sht:ValidationFailure;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2} } / { <s> <p1> \"p1-n\" }X3";
   mf:action [
     sht:data <validation/p1X3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard2_fail-p1X3";
   mf:status mf:proposed .

<validation/manifest#open3Onedotclosecard2_fail-p1X4> a sht:ValidationFailure;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2} } / { <s> <p1> \"p1-n\" }X4";
   mf:action [
     sht:data <validation/p1X4.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard2_fail-p1X4";
   mf:status mf:proposed .

<validation/manifest#open3Onedotclosecard2_fail-p1p2p3> a sht:ValidationFailure;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2} } / { <s> <p1> \"p1-0\"; <p2> \"p2-0\"; <p3> \"p3-0\" }";
   mf:action [
     sht:data <validation/p1p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard2_fail-p1p2p3";
   mf:status mf:proposed .

<validation/manifest#open3Onedotclosecard2_pass-p1X2> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2} } / { <s> <p1> \"p1-n\" }X2";
   mf:action [
     sht:data <validation/p1X2.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard2_pass-p1X2";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard2-p1X2.val> .

<validation/manifest#open3Onedotclosecard2_pass-p1p2> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2} } / { <s> <p1> \"p1-0\"; <p2> \"p2-0\" }";
   mf:action [
     sht:data <validation/p1p2.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard2_pass-p1p2";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard2-p1p2.val> .

<validation/manifest#open3Onedotclosecard2_pass-p1p3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2} } / { <s> <p1> \"p1-0\"; <p3> \"p3-0\" }";
   mf:action [
     sht:data <validation/p1p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard2_pass-p1p3";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard2-p1p3.val> .

<validation/manifest#open3Onedotclosecard2_pass-p2p3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> . ){2} } / { <s> <p2> \"p2-0\"; <p3> \"p3-0\" }";
   mf:action [
     sht:data <validation/p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3Onedotclosecard2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3Onedotclosecard2_pass-p2p3";
   mf:status mf:proposed;
   sht:result <validation/open3Onedotclosecard2-p2p3.val> .

<validation/manifest#open3groupdotcloseCode1-p1p2p3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> ., <p2> ., <p3> . ) %<Test/>{ print(\"group semAct\") %} } / { :s1 :p1 \"p1-0\"; :p2 \"p2-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p1p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3groupdotcloseCode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3groupdotcloseCode1-p1p2p3";
   mf:status mf:proposed;
   sht:result <validation/open3groupdotcloseCode1-p1p2p3.val> .

<validation/manifest#open3groupdotclosecard23Annot3Code2-p1p2p3X3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .; <p2> .; <p3> . ){2,3} // <annot1> \"1\" // <annot2> \"2\" // <annot3> \"3\" %<Test/>{ p(\"...1\") %} %<Test/>{ p(\"...2\") %} } / { <s> <p1> \"p1-n\"; <p2> \"p2-n\"; <p3> \"p3-n\" }X3";
   mf:action [
     sht:data <validation/p1p2p3X3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3groupdotclosecard23Annot3Code2.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3groupdotclosecard23Annot3Code2-p1p2p3X3";
   mf:status mf:proposed;
   sht:result <validation/open3groupdotclosecard23Annot3Code2-p1p2p3X3.val> .

<validation/manifest#open3groupdotclosecard23_pass-p1p2p3X3> a sht:ValidationTest;
   rdfs:comment "<S1> { ( <p1> .; <p2> .; <p3> . ){2,3} } / { <s> <p1> \"p1-n\"; <p2> \"p2-n\"; <p3> \"p3-n\" }X3";
   mf:action [
     sht:data <validation/p1p2p3X3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open3groupdotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open3groupdotclosecard23_pass-p1p2p3X3";
   mf:status mf:proposed;
   sht:result <validation/open3groupdotclosecard23-p1p2p3X3.val> .

<validation/manifest#open4Onedotclosecard23_fail-p1p2p3p4> a sht:ValidationFailure;
   rdfs:comment "<S1> { ( <p1> .| <p2> .| <p3> .| <p4> . ){2,3} } / { <s> <p1> \"p1-n\"; <p2> \"p2-n\"; <p3> \"p3-n\" ; <p4> \"p4-n\" }";
   mf:action [
     sht:data <validation/p1p2p3p4.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/open4Onedotclosecard23.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "open4Onedotclosecard23_fail-p1p2p3p4";
   mf:status mf:proposed .

<validation/manifest#openopen1dotOne1dotclose1dotclose_fail_p1> a sht:ValidationFailure;
   rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p1 \"p1-0\" . }";
   mf:action [
     sht:data <validation/p1.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/openopen1dotOne1dotclose1dotclose.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "openopen1dotOne1dotclose1dotclose_fail_p1";
   mf:status mf:proposed .

<validation/manifest#openopen1dotOne1dotclose1dotclose_fail_p1p2> a sht:ValidationFailure;
   rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p1 \"p1-0\"; :p2 \"p2-0\" . }";
   mf:action [
     sht:data <validation/p1p2.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/openopen1dotOne1dotclose1dotclose.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "openopen1dotOne1dotclose1dotclose_fail_p1p2";
   mf:status mf:proposed .

<validation/manifest#openopen1dotOne1dotclose1dotclose_fail_p3> a sht:ValidationFailure;
   rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/openopen1dotOne1dotclose1dotclose.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "openopen1dotOne1dotclose1dotclose_fail_p3";
   mf:status mf:proposed .

<validation/manifest#openopen1dotOne1dotclose1dotclose_pass_p1p3> a sht:ValidationTest;
   rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p1 \"p1-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p1p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/openopen1dotOne1dotclose1dotclose.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "openopen1dotOne1dotclose1dotclose_pass_p1p3";
   mf:status mf:proposed;
   sht:result <validation/openopen1dotOne1dotclose1dotclose_pass_p1p3.val> .

<validation/manifest#openopen1dotOne1dotclose1dotclose_pass_p2p3> a sht:ValidationTest;
   rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p2 \"p2-0\"; :p3 \"p3-0\" . }";
   mf:action [
     sht:data <validation/p2p3.ttl>;
     sht:focus <validation/x>;
     sht:schema <schemas/openopen1dotOne1dotclose1dotclose.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "openopen1dotOne1dotclose1dotclose_pass_p2p3";
   mf:status mf:proposed;
   sht:result <validation/openopen1dotOne1dotclose1dotclose_pass_p2p3.val> .

<validation/manifest#refBNodeORrefIRI_CyclicIRI_BNode> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE @<S1> OR MINLENGTH 20 @<S1> } on { <n1a> <p1> _:n2 . _:n2 <p1> <n1a> }";
   mf:action [
     sht:data <validation/In1a_Ip1_Bn2.Bn2_Ip1_In1a.ttl>;
     sht:focus <http://a.example/n1a>;
     sht:schema <schemas/1bnodeRefORRefMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "refBNodeORrefIRI_CyclicIRI_BNode";
   mf:status mf:proposed;
   sht:result <validation/refBNodeORrefIRI_CyclicIRI_BNode.val> .

<validation/manifest#refBNodeORrefIRI_CyclicIRI_IRI> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE @<S1> OR MINLENGTH 20 @<S1> } on { <n1a> <p1> <n2a> . <n2a> <p1> <n1a> }";
   mf:action [
     sht:data <validation/In1a_Ip1_In2a.In2a_Ip1_In1a.ttl>;
     sht:focus <http://a.example/n1a>;
     sht:schema <schemas/1bnodeRefORRefMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "refBNodeORrefIRI_CyclicIRI_IRI";
   mf:status mf:proposed;
   sht:result <validation/refBNodeORrefIRI_CyclicIRI_IRI.val> .

<validation/manifest#refBNodeORrefIRI_CyclicIRI_ShortIRI> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE @<S1> OR MINLENGTH 20 @<S1> } on { <n1> <p1> <n2a> . <n2a> <p1> <n1> }";
   mf:action [
     sht:data <validation/In1_Ip1_In2a.In2a_Ip1_In1.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1bnodeRefORRefMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "refBNodeORrefIRI_CyclicIRI_ShortIRI";
   mf:status mf:proposed .

<validation/manifest#refBNodeORrefIRI_IntoReflexiveBNode> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE @<S1> OR MINLENGTH 20 @<S1> } on { <n1> <p1> _:n2 . _:n2 <p1> _:n2 }";
   mf:action [
     sht:data <validation/In1_Ip1_Bn2.Bn2_Ip1_Bn2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1bnodeRefORRefMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "refBNodeORrefIRI_IntoReflexiveBNode";
   mf:status mf:proposed;
   sht:result <validation/refBNodeORrefIRI_IntoReflexiveBNode.val> .

<validation/manifest#refBNodeORrefIRI_IntoReflexiveIRI> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE @<S1> OR MINLENGTH 20 @<S1> } on { <n1> <p1> <n2a> . <n2a> <p1> <n2a> }";
   mf:action [
     sht:data <validation/In1_Ip1_In2a.In2a_Ip1_In2a.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1bnodeRefORRefMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "refBNodeORrefIRI_IntoReflexiveIRI";
   mf:status mf:proposed;
   sht:result <validation/refBNodeORrefIRI_IntoReflexiveIRI.val> .

<validation/manifest#refBNodeORrefIRI_ReflexiveIRI> a sht:ValidationTest;
   rdfs:comment "<S1> { <p1> BNODE @<S1> OR MINLENGTH 20 @<S1> } on { <n1a> <p1> <n1a> }";
   mf:action [
     sht:data <validation/In1a_Ip1_In1a.ttl>;
     sht:focus <http://a.example/n1a>;
     sht:schema <schemas/1bnodeRefORRefMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "refBNodeORrefIRI_ReflexiveIRI";
   mf:status mf:proposed;
   sht:result <validation/refBNodeORrefIRI_ReflexiveIRI.val> .

<validation/manifest#refBNodeORrefIRI_ReflexiveShortIRI> a sht:ValidationFailure;
   rdfs:comment "<S1> { <p1> BNODE @<S1> OR MINLENGTH 20 @<S1> } on { <n1> <p1> <n1> }";
   mf:action [
     sht:data <validation/In1_Ip1_In1.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/1bnodeRefORRefMinlength.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "refBNodeORrefIRI_ReflexiveShortIRI";
   mf:status mf:proposed .

<validation/manifest#repeated-group> a sht:ValidationTest;
   rdfs:comment "<S> { ( :a ., :b . ){2,5}, :c . }";
   mf:action [
     sht:data <validation/repeated-group.ttl>;
     sht:focus <validation/x>;
     sht:schema <validation/repeated-group.shex>;
     sht:shape <validation/S>
   ];
   mf:name "repeated-group";
   mf:status mf:proposed;
   sht:result <validation/repeated-group.val> .

<validation/manifest#shapeExternRef_fail> a sht:ValidationFailure;
   rdfs:comment "<S> { <p1> @<Sext> } <Sext> EXTERNAL + <S> { <p2> . } on { <s1> <p1> <n2> }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/shapeExternRef.shex>;
     sht:shape <http://a.example/S>
   ];
   mf:name "shapeExternRef_fail";
   mf:status mf:proposed .

<validation/manifest#shapeExternRef_pass> a sht:ValidationTest;
   rdfs:comment "<S> { <p1> @<Sext> } <Sext> EXTERNAL + <S> { <p2> . } on { <s1> <p1> <n2> . <n2> <p2> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/shapeExternRef.shex>;
     sht:shape <http://a.example/S>
   ];
   mf:name "shapeExternRef_pass";
   mf:status mf:proposed;
   sht:result <validation/shapeExternRef_pass.val> .

<validation/manifest#shapeExtern_fail> a sht:ValidationFailure;
   rdfs:comment "<Sext> EXTERNAL + <Sext> { <p2> . } on { <s1> <p1> <n2> . <n2> <p2> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n1>;
     sht:schema <schemas/shapeExtern.shex>;
     sht:shape <http://a.example/Sext>
   ];
   mf:name "shapeExtern_fail";
   mf:status mf:proposed .

<validation/manifest#shapeExtern_pass> a sht:ValidationTest;
   rdfs:comment "<Sext> EXTERNAL + <Sext> { <p2> . } on { <s1> <p1> <n2> . <n2> <p2> \"X\" }";
   mf:action [
     sht:data <validation/In1_Ip1_In2.In2_Ip2_LX.ttl>;
     sht:focus <http://a.example/n2>;
     sht:schema <schemas/shapeExtern.shex>;
     sht:shape <http://a.example/Sext>
   ];
   mf:name "shapeExtern_pass";
   mf:status mf:proposed;
   sht:result <validation/shapeExtern_pass.val> .

<validation/manifest#simple-group> a sht:ValidationTest;
   rdfs:comment "@@ simple-group";
   mf:action [
     sht:data <validation/simple-group.ttl>;
     sht:focus <validation/s0>;
     sht:schema <validation/simple-group.shex>;
     sht:shape <validation/S>
   ];
   mf:name "simple-group";
   mf:status mf:proposed;
   sht:result <validation/simple-group.val> .

<validation/manifest#skipped> a sht:ValidationTest;
   rdfs:comment "<S> { ( :a ., :b . )?, :c . } on { <x> :c 1 }";
   mf:action [
     sht:data <validation/skipped.ttl>;
     sht:focus <validation/x>;
     sht:schema <validation/skipped.shex>;
     sht:shape <validation/S>
   ];
   mf:name "skipped";
   mf:status mf:proposed;
   sht:result <validation/skipped.val> .

<validation/manifest#startCode1_pass> a sht:ValidationTest;
   rdfs:comment "%<Test>{print('startAct')%} <S> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startCode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "startCode1_pass";
   mf:status mf:proposed;
   sht:result <validation/startCode1_pass.val> .

<validation/manifest#startCode1fail_abort> a sht:ValidationFailure;
   rdfs:comment "%<Test>{ fail('startAct') %} <S> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startCode1fail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "startCode1fail_abort";
   mf:status mf:proposed .

<validation/manifest#startCode1startRef_pass> a sht:ValidationTest;
   rdfs:comment "%<Test>{print('startAct')%} <S> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startCode1startRef.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "startCode1startRef_pass";
   mf:status mf:proposed;
   sht:result <validation/startCode1_pass.val> .

<validation/manifest#startCode1startReffail_abort> a sht:ValidationFailure;
   rdfs:comment "%<Test>{ fail('startAct') %} <S> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startCode1startReffail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "startCode1startReffail_abort";
   mf:status mf:proposed .

<validation/manifest#startCode3_pass> a sht:ValidationTest;
   rdfs:comment "%<Test>{print('startAct 1')%} %<Test>{print('startAct 2')%} %<Test>{print('startAct 3')%} <S> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startCode3.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "startCode3_pass";
   mf:status mf:proposed;
   sht:result <validation/startCode3_pass.val> .

<validation/manifest#startCode3fail_abort> a sht:ValidationFailure;
   rdfs:comment "%<Test>{print('startAct 1')%} %<Test>{ fail('startAct 2') %} %<Test>{print('startAct 3')%} <S> { <p1> . } on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startCode3fail.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "startCode3fail_abort";
   mf:status mf:proposed .

<validation/manifest#startEqualSpaceInline_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "start= { <p1> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startEqualSpaceInline.shex>
   ];
   mf:name "startEqualSpaceInline_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/startInline_pass.val> .

<validation/manifest#startInline_fail-missing> a sht:ValidationFailure;
   rdfs:comment "start={ <p1> . } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startInline.shex>
   ];
   mf:name "startInline_fail-missing";
   mf:status mf:proposed .

<validation/manifest#startInline_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "start={ <p1> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startInline.shex>
   ];
   mf:name "startInline_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/startInline_pass.val> .

<validation/manifest#startNoCode1_pass> a sht:ValidationTest;
   rdfs:comment "%<Test>% <S> { <p1> . } + %<Test>{print(\"startAct\")%} on { <s1> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startNoCode1.shex>;
     sht:shape <http://a.example/S1>
   ];
   mf:name "startNoCode1_pass";
   mf:status mf:proposed;
   sht:result <validation/startNoCode1_pass.val> .

<validation/manifest#startRefIRIREF_fail-missing> a sht:ValidationFailure;
   rdfs:comment "start=<S> <S> { <p1> . } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startRefIRIREF.shex>
   ];
   mf:name "startRefIRIREF_fail-missing";
   mf:status mf:proposed .

<validation/manifest#startRefIRIREF_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "start=<S> <S> { <p1> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startRefIRIREF.shex>
   ];
   mf:name "startRefIRIREF_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#startRefIRIREF_pass-others_lexicallyEarlier> a sht:ValidationTest;
   rdfs:comment "start=<S> <S> { <p1> . } on { <s> <p0> <o0>; <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip0_Io0;Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startRefIRIREF.shex>
   ];
   mf:name "startRefIRIREF_pass-others_lexicallyEarlier";
   mf:status mf:proposed;
   sht:result <validation/1dot_pass.val> .

<validation/manifest#startRefbnode_fail-missing> a sht:ValidationFailure;
   rdfs:comment "start=_:S _S { <p1> . } on { <s> <p2> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip2_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startRefbnode.shex>
   ];
   mf:name "startRefbnode_fail-missing";
   mf:status mf:proposed .

<validation/manifest#startRefbnode_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "start=_:S _:S { <p1> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startRefbnode.shex>
   ];
   mf:name "startRefbnode_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/bnode1dot_pass.val> .

<validation/manifest#startSpaceEqualInline_pass-noOthers> a sht:ValidationTest;
   rdfs:comment "start= { <p1> . } on { <s> <p1> <o1> }";
   mf:action [
     sht:data <validation/Is1_Ip1_Io1.ttl>;
     sht:focus <http://a.example/s1>;
     sht:schema <schemas/startSpaceEqualInline.shex>
   ];
   mf:name "startSpaceEqualInline_pass-noOthers";
   mf:status mf:proposed;
   sht:result <validation/startInline_pass.val> .
